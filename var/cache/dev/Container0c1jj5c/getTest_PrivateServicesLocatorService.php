<?php

namespace Container0c1jj5c;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTest_PrivateServicesLocatorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'test.private_services_locator' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['test.private_services_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Console\\ClearFirebaseNotificationsCommand' => ['privates', 'App\\Console\\ClearFirebaseNotificationsCommand', 'getClearFirebaseNotificationsCommandService', true],
            'App\\Console\\Framework\\CfpackageDeleteCommand' => ['privates', 'App\\Console\\Framework\\CfpackageDeleteCommand', 'getCfpackageDeleteCommandService', true],
            'App\\Console\\Framework\\CopyDocumentToItemCommand' => ['services', 'console.command.public_alias.App\\Console\\Framework\\CopyDocumentToItemCommand', 'getCopyDocumentToItemCommandService', true],
            'App\\Console\\Import\\ImportAsnCommand' => ['privates', 'App\\Console\\Import\\ImportAsnCommand', 'getImportAsnCommandService', true],
            'App\\Console\\Import\\ImportCaseJsonCommand' => ['privates', 'App\\Console\\Import\\ImportCaseJsonCommand', 'getImportCaseJsonCommandService', true],
            'App\\Console\\Import\\ImportGeneric1Command' => ['privates', 'App\\Console\\Import\\ImportGeneric1Command', 'getImportGeneric1CommandService', true],
            'App\\Console\\Mirror\\MirrorFrameworkCommand' => ['privates', 'App\\Console\\Mirror\\MirrorFrameworkCommand', 'getMirrorFrameworkCommandService', true],
            'App\\Console\\Mirror\\MirrorJobCommand' => ['privates', 'App\\Console\\Mirror\\MirrorJobCommand', 'getMirrorJobCommandService', true],
            'App\\Console\\Mirror\\UpdateListCommand' => ['privates', 'App\\Console\\Mirror\\UpdateListCommand', 'getUpdateListCommandService', true],
            'App\\Console\\User\\OrgAddCommand' => ['services', 'console.command.public_alias.App\\Console\\User\\OrgAddCommand', 'getOrgAddCommandService', true],
            'App\\Console\\User\\UserAddCommand' => ['services', 'console.command.public_alias.App\\Console\\User\\UserAddCommand', 'getUserAddCommandService', true],
            'App\\Console\\User\\UserAddRoleCommand' => ['services', 'console.command.public_alias.App\\Console\\User\\UserAddRoleCommand', 'getUserAddRoleCommandService', true],
            'App\\Console\\User\\UserRemoveRoleCommand' => ['services', 'console.command.public_alias.App\\Console\\User\\UserRemoveRoleCommand', 'getUserRemoveRoleCommandService', true],
            'App\\Console\\User\\UserSetPasswordCommand' => ['services', 'console.command.public_alias.App\\Console\\User\\UserSetPasswordCommand', 'getUserSetPasswordCommandService', true],
            'App\\DataTransformer\\CaseJson\\AssociationGroupingsTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\AssociationGroupingsTransformer', 'getAssociationGroupingsTransformerService', true],
            'App\\DataTransformer\\CaseJson\\AssociationsTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\AssociationsTransformer', 'getAssociationsTransformerService', true],
            'App\\DataTransformer\\CaseJson\\ConceptsTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\ConceptsTransformer', 'getConceptsTransformerService', true],
            'App\\DataTransformer\\CaseJson\\DefinitionsTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\DefinitionsTransformer', 'getDefinitionsTransformerService', true],
            'App\\DataTransformer\\CaseJson\\DocumentTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\DocumentTransformer', 'getDocumentTransformerService', true],
            'App\\DataTransformer\\CaseJson\\ItemTypesTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\ItemTypesTransformer', 'getItemTypesTransformerService', true],
            'App\\DataTransformer\\CaseJson\\ItemsTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\ItemsTransformer', 'getItemsTransformerService', true],
            'App\\DataTransformer\\CaseJson\\LicencesTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\LicencesTransformer', 'getLicencesTransformerService', true],
            'App\\DataTransformer\\CaseJson\\PackageTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\PackageTransformer', 'getPackageTransformerService', true],
            'App\\DataTransformer\\CaseJson\\RubricsTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\RubricsTransformer', 'getRubricsTransformerService', true],
            'App\\DataTransformer\\CaseJson\\SubjectsTransformer' => ['privates', 'App\\DataTransformer\\CaseJson\\SubjectsTransformer', 'getSubjectsTransformerService', true],
            'App\\EventListener\\ApiExceptionListener' => ['privates', 'App\\EventListener\\ApiExceptionListener', 'getApiExceptionListenerService', true],
            'App\\EventListener\\CommandEventRouter' => ['privates', 'App\\EventListener\\CommandEventRouter', 'getCommandEventRouterService', true],
            'App\\EventListener\\LoginCaptchaListener' => ['privates', 'App\\EventListener\\LoginCaptchaListener', 'getLoginCaptchaListenerService', true],
            'App\\EventListener\\NotificationLoggingListener' => ['privates', 'App\\EventListener\\NotificationLoggingListener', 'getNotificationLoggingListenerService', true],
            'App\\EventListener\\NotificationToFirebaseListener' => ['privates', 'App\\EventListener\\NotificationToFirebaseListener', 'getNotificationToFirebaseListenerService', true],
            'App\\EventListener\\SiteVersionListener' => ['privates', 'App\\EventListener\\SiteVersionListener', 'getSiteVersionListenerService', false],
            'App\\EventListener\\VaryOriginListener' => ['privates', 'App\\EventListener\\VaryOriginListener', 'getVaryOriginListenerService', false],
            'App\\Form\\Type\\AddAclUserType' => ['privates', 'App\\Form\\Type\\AddAclUserType', 'getAddAclUserTypeService', true],
            'App\\Form\\Type\\AddAclUsernameType' => ['privates', 'App\\Form\\Type\\AddAclUsernameType', 'getAddAclUsernameTypeService', true],
            'App\\Form\\Type\\AdditionalFieldType' => ['privates', 'App\\Form\\Type\\AdditionalFieldType', 'getAdditionalFieldTypeService', true],
            'App\\Form\\Type\\ChangePasswordType' => ['privates', 'App\\Form\\Type\\ChangePasswordType', 'getChangePasswordTypeService', true],
            'App\\Form\\Type\\CustomFieldsType' => ['privates', 'App\\Form\\Type\\CustomFieldsType', 'getCustomFieldsTypeService', true],
            'App\\Form\\Type\\DatalistType' => ['privates', 'App\\Form\\Type\\DatalistType', 'getDatalistTypeService', true],
            'App\\Form\\Type\\LsAssociationAjaxType' => ['privates', 'App\\Form\\Type\\LsAssociationAjaxType', 'getLsAssociationAjaxTypeService', true],
            'App\\Form\\Type\\LsAssociationTreeType' => ['privates', 'App\\Form\\Type\\LsAssociationTreeType', 'getLsAssociationTreeTypeService', true],
            'App\\Form\\Type\\LsAssociationType' => ['privates', 'App\\Form\\Type\\LsAssociationType', 'getLsAssociationTypeService', true],
            'App\\Form\\Type\\LsDefAssociationGroupingType' => ['privates', 'App\\Form\\Type\\LsDefAssociationGroupingType', 'getLsDefAssociationGroupingTypeService', true],
            'App\\Form\\Type\\LsDefConceptType' => ['privates', 'App\\Form\\Type\\LsDefConceptType', 'getLsDefConceptTypeService', true],
            'App\\Form\\Type\\LsDefGradeType' => ['privates', 'App\\Form\\Type\\LsDefGradeType', 'getLsDefGradeTypeService', true],
            'App\\Form\\Type\\LsDefItemTypeType' => ['privates', 'App\\Form\\Type\\LsDefItemTypeType', 'getLsDefItemTypeTypeService', true],
            'App\\Form\\Type\\LsDefLicenceType' => ['privates', 'App\\Form\\Type\\LsDefLicenceType', 'getLsDefLicenceTypeService', true],
            'App\\Form\\Type\\LsDefSubjectType' => ['privates', 'App\\Form\\Type\\LsDefSubjectType', 'getLsDefSubjectTypeService', true],
            'App\\Form\\Type\\LsDocCreateType' => ['privates', 'App\\Form\\Type\\LsDocCreateType', 'getLsDocCreateTypeService', true],
            'App\\Form\\Type\\LsDocListType' => ['privates', 'App\\Form\\Type\\LsDocListType', 'getLsDocListTypeService', true],
            'App\\Form\\Type\\LsDocType' => ['privates', 'App\\Form\\Type\\LsDocType', 'getLsDocTypeService', true],
            'App\\Form\\Type\\LsItemParentType' => ['privates', 'App\\Form\\Type\\LsItemParentType', 'getLsItemParentTypeService', true],
            'App\\Form\\Type\\LsItemType' => ['privates', 'App\\Form\\Type\\LsItemType', 'getLsItemTypeService', true],
            'App\\Form\\Type\\MirroredFrameworkDTOType' => ['privates', 'App\\Form\\Type\\MirroredFrameworkDTOType', 'getMirroredFrameworkDTOTypeService', true],
            'App\\Form\\Type\\MirroredServerDTOType' => ['privates', 'App\\Form\\Type\\MirroredServerDTOType', 'getMirroredServerDTOTypeService', true],
            'App\\Form\\Type\\NewFrameworkType' => ['privates', 'App\\Form\\Type\\NewFrameworkType', 'getNewFrameworkTypeService', true],
            'App\\Form\\Type\\OAuthCredentialDTOType' => ['privates', 'App\\Form\\Type\\OAuthCredentialDTOType', 'getOAuthCredentialDTOTypeService', true],
            'App\\Form\\Type\\OrganizationType' => ['privates', 'App\\Form\\Type\\OrganizationType', 'getOrganizationTypeService', true],
            'App\\Form\\Type\\RemoteCaseServerType' => ['privates', 'App\\Form\\Type\\RemoteCaseServerType', 'getRemoteCaseServerTypeService', true],
            'App\\Form\\Type\\SignupType' => ['privates', 'App\\Form\\Type\\SignupType', 'getSignupTypeService', true],
            'App\\Form\\Type\\UserType' => ['privates', 'App\\Form\\Type\\UserType', 'getUserTypeService', true],
            'App\\Handler\\Comment\\AddCommentHandler' => ['privates', 'App\\Handler\\Comment\\AddCommentHandler', 'getAddCommentHandlerService', true],
            'App\\Handler\\Comment\\DeleteCommentHandler' => ['privates', 'App\\Handler\\Comment\\DeleteCommentHandler', 'getDeleteCommentHandlerService', true],
            'App\\Handler\\Comment\\DownvoteCommentHandler' => ['privates', 'App\\Handler\\Comment\\DownvoteCommentHandler', 'getDownvoteCommentHandlerService', true],
            'App\\Handler\\Comment\\UpdateCommentHandler' => ['privates', 'App\\Handler\\Comment\\UpdateCommentHandler', 'getUpdateCommentHandlerService', true],
            'App\\Handler\\Comment\\UpvoteCommentHandler' => ['privates', 'App\\Handler\\Comment\\UpvoteCommentHandler', 'getUpvoteCommentHandlerService', true],
            'App\\Handler\\Email\\SendAdminNotificationEmailHandler' => ['privates', 'App\\Handler\\Email\\SendAdminNotificationEmailHandler', 'getSendAdminNotificationEmailHandlerService', true],
            'App\\Handler\\Email\\SendSignupReceivedEmailHandler' => ['privates', 'App\\Handler\\Email\\SendSignupReceivedEmailHandler', 'getSendSignupReceivedEmailHandlerService', true],
            'App\\Handler\\Email\\SendUserApprovedEmailHandler' => ['privates', 'App\\Handler\\Email\\SendUserApprovedEmailHandler', 'getSendUserApprovedEmailHandlerService', true],
            'App\\Handler\\Framework\\AddAssociationGroupHandler' => ['privates', 'App\\Handler\\Framework\\AddAssociationGroupHandler', 'getAddAssociationGroupHandlerService', true],
            'App\\Handler\\Framework\\AddAssociationHandler' => ['privates', 'App\\Handler\\Framework\\AddAssociationHandler', 'getAddAssociationHandlerService', true],
            'App\\Handler\\Framework\\AddConceptHandler' => ['privates', 'App\\Handler\\Framework\\AddConceptHandler', 'getAddConceptHandlerService', true],
            'App\\Handler\\Framework\\AddDocumentHandler' => ['privates', 'App\\Handler\\Framework\\AddDocumentHandler', 'getAddDocumentHandlerService', true],
            'App\\Handler\\Framework\\AddExemplarToItemHandler' => ['privates', 'App\\Handler\\Framework\\AddExemplarToItemHandler', 'getAddExemplarToItemHandlerService', true],
            'App\\Handler\\Framework\\AddExternalDocHandler' => ['privates', 'App\\Handler\\Framework\\AddExternalDocHandler', 'getAddExternalDocHandlerService', true],
            'App\\Handler\\Framework\\AddGradeHandler' => ['privates', 'App\\Handler\\Framework\\AddGradeHandler', 'getAddGradeHandlerService', true],
            'App\\Handler\\Framework\\AddItemHandler' => ['privates', 'App\\Handler\\Framework\\AddItemHandler', 'getAddItemHandlerService', true],
            'App\\Handler\\Framework\\AddItemTypeHandler' => ['privates', 'App\\Handler\\Framework\\AddItemTypeHandler', 'getAddItemTypeHandlerService', true],
            'App\\Handler\\Framework\\AddLicenceHandler' => ['privates', 'App\\Handler\\Framework\\AddLicenceHandler', 'getAddLicenceHandlerService', true],
            'App\\Handler\\Framework\\AddSubjectHandler' => ['privates', 'App\\Handler\\Framework\\AddSubjectHandler', 'getAddSubjectHandlerService', true],
            'App\\Handler\\Framework\\AddTreeAssociationHandler' => ['privates', 'App\\Handler\\Framework\\AddTreeAssociationHandler', 'getAddTreeAssociationHandlerService', true],
            'App\\Handler\\Framework\\ChangeItemParentHandler' => ['privates', 'App\\Handler\\Framework\\ChangeItemParentHandler', 'getChangeItemParentHandlerService', true],
            'App\\Handler\\Framework\\CloneFrameworkHandler' => ['privates', 'App\\Handler\\Framework\\CloneFrameworkHandler', 'getCloneFrameworkHandlerService', true],
            'App\\Handler\\Framework\\CopyDocumentToItemHandler' => ['privates', 'App\\Handler\\Framework\\CopyDocumentToItemHandler', 'getCopyDocumentToItemHandlerService', true],
            'App\\Handler\\Framework\\CopyFrameworkHandler' => ['privates', 'App\\Handler\\Framework\\CopyFrameworkHandler', 'getCopyFrameworkHandlerService', true],
            'App\\Handler\\Framework\\CopyItemToDocHandler' => ['privates', 'App\\Handler\\Framework\\CopyItemToDocHandler', 'getCopyItemToDocHandlerService', true],
            'App\\Handler\\Framework\\DeleteAssociationGroupHandler' => ['privates', 'App\\Handler\\Framework\\DeleteAssociationGroupHandler', 'getDeleteAssociationGroupHandlerService', true],
            'App\\Handler\\Framework\\DeleteAssociationHandler' => ['privates', 'App\\Handler\\Framework\\DeleteAssociationHandler', 'getDeleteAssociationHandlerService', true],
            'App\\Handler\\Framework\\DeleteConceptHandler' => ['privates', 'App\\Handler\\Framework\\DeleteConceptHandler', 'getDeleteConceptHandlerService', true],
            'App\\Handler\\Framework\\DeleteDocumentHandler' => ['privates', 'App\\Handler\\Framework\\DeleteDocumentHandler', 'getDeleteDocumentHandlerService', true],
            'App\\Handler\\Framework\\DeleteGradeHandler' => ['privates', 'App\\Handler\\Framework\\DeleteGradeHandler', 'getDeleteGradeHandlerService', true],
            'App\\Handler\\Framework\\DeleteItemHandler' => ['privates', 'App\\Handler\\Framework\\DeleteItemHandler', 'getDeleteItemHandlerService', true],
            'App\\Handler\\Framework\\DeleteItemTypeHandler' => ['privates', 'App\\Handler\\Framework\\DeleteItemTypeHandler', 'getDeleteItemTypeHandlerService', true],
            'App\\Handler\\Framework\\DeleteItemWithChildrenHandler' => ['privates', 'App\\Handler\\Framework\\DeleteItemWithChildrenHandler', 'getDeleteItemWithChildrenHandlerService', true],
            'App\\Handler\\Framework\\DeleteLicenceHandler' => ['privates', 'App\\Handler\\Framework\\DeleteLicenceHandler', 'getDeleteLicenceHandlerService', true],
            'App\\Handler\\Framework\\DeleteSubjectHandler' => ['privates', 'App\\Handler\\Framework\\DeleteSubjectHandler', 'getDeleteSubjectHandlerService', true],
            'App\\Handler\\Framework\\DeriveDocumentHandler' => ['privates', 'App\\Handler\\Framework\\DeriveDocumentHandler', 'getDeriveDocumentHandlerService', true],
            'App\\Handler\\Framework\\LockDocumentHandler' => ['privates', 'App\\Handler\\Framework\\LockDocumentHandler', 'getLockDocumentHandlerService', true],
            'App\\Handler\\Framework\\LockItemHandler' => ['privates', 'App\\Handler\\Framework\\LockItemHandler', 'getLockItemHandlerService', true],
            'App\\Handler\\Framework\\RemoveChildHandler' => ['privates', 'App\\Handler\\Framework\\RemoveChildHandler', 'getRemoveChildHandlerService', true],
            'App\\Handler\\Framework\\UpdateAssociationGroupHandler' => ['privates', 'App\\Handler\\Framework\\UpdateAssociationGroupHandler', 'getUpdateAssociationGroupHandlerService', true],
            'App\\Handler\\Framework\\UpdateAssociationHandler' => ['privates', 'App\\Handler\\Framework\\UpdateAssociationHandler', 'getUpdateAssociationHandlerService', true],
            'App\\Handler\\Framework\\UpdateConceptHandler' => ['privates', 'App\\Handler\\Framework\\UpdateConceptHandler', 'getUpdateConceptHandlerService', true],
            'App\\Handler\\Framework\\UpdateDocumentHandler' => ['privates', 'App\\Handler\\Framework\\UpdateDocumentHandler', 'getUpdateDocumentHandlerService', true],
            'App\\Handler\\Framework\\UpdateFrameworkHandler' => ['privates', 'App\\Handler\\Framework\\UpdateFrameworkHandler', 'getUpdateFrameworkHandlerService', true],
            'App\\Handler\\Framework\\UpdateGradeHandler' => ['privates', 'App\\Handler\\Framework\\UpdateGradeHandler', 'getUpdateGradeHandlerService', true],
            'App\\Handler\\Framework\\UpdateItemHandler' => ['privates', 'App\\Handler\\Framework\\UpdateItemHandler', 'getUpdateItemHandlerService', true],
            'App\\Handler\\Framework\\UpdateItemTypeHandler' => ['privates', 'App\\Handler\\Framework\\UpdateItemTypeHandler', 'getUpdateItemTypeHandlerService', true],
            'App\\Handler\\Framework\\UpdateLicenceHandler' => ['privates', 'App\\Handler\\Framework\\UpdateLicenceHandler', 'getUpdateLicenceHandlerService', true],
            'App\\Handler\\Framework\\UpdateSubjectHandler' => ['privates', 'App\\Handler\\Framework\\UpdateSubjectHandler', 'getUpdateSubjectHandlerService', true],
            'App\\Handler\\Framework\\UpdateTreeItemsHandler' => ['privates', 'App\\Handler\\Framework\\UpdateTreeItemsHandler', 'getUpdateTreeItemsHandlerService', true],
            'App\\Handler\\Import\\ImportAsnFromUrlHandler' => ['privates', 'App\\Handler\\Import\\ImportAsnFromUrlHandler', 'getImportAsnFromUrlHandlerService', true],
            'App\\Handler\\Import\\ImportCaseJsonHandler' => ['privates', 'App\\Handler\\Import\\ImportCaseJsonHandler', 'getImportCaseJsonHandlerService', true],
            'App\\Handler\\Import\\ImportExcelFileHandler' => ['privates', 'App\\Handler\\Import\\ImportExcelFileHandler', 'getImportExcelFileHandlerService', true],
            'App\\Handler\\Import\\ImportGenericCsvHandler' => ['privates', 'App\\Handler\\Import\\ImportGenericCsvHandler', 'getImportGenericCsvHandlerService', true],
            'App\\Handler\\Import\\MarkImportLogsAsReadHandler' => ['privates', 'App\\Handler\\Import\\MarkImportLogsAsReadHandler', 'getMarkImportLogsAsReadHandlerService', true],
            'App\\Handler\\Import\\ParseCsvGithubDocumentHandler' => ['privates', 'App\\Handler\\Import\\ParseCsvGithubDocumentHandler', 'getParseCsvGithubDocumentHandlerService', true],
            'App\\Handler\\User\\ActivateUserHandler' => ['privates', 'App\\Handler\\User\\ActivateUserHandler', 'getActivateUserHandlerService', true],
            'App\\Handler\\User\\AddFrameworkUserAclHandler' => ['privates', 'App\\Handler\\User\\AddFrameworkUserAclHandler', 'getAddFrameworkUserAclHandlerService', true],
            'App\\Handler\\User\\AddFrameworkUsernameAclHandler' => ['privates', 'App\\Handler\\User\\AddFrameworkUsernameAclHandler', 'getAddFrameworkUsernameAclHandlerService', true],
            'App\\Handler\\User\\AddOrganizationByNameHandler' => ['privates', 'App\\Handler\\User\\AddOrganizationByNameHandler', 'getAddOrganizationByNameHandlerService', true],
            'App\\Handler\\User\\AddOrganizationHandler' => ['privates', 'App\\Handler\\User\\AddOrganizationHandler', 'getAddOrganizationHandlerService', true],
            'App\\Handler\\User\\AddUserByNameHandler' => ['privates', 'App\\Handler\\User\\AddUserByNameHandler', 'getAddUserByNameHandlerService', true],
            'App\\Handler\\User\\AddUserHandler' => ['privates', 'App\\Handler\\User\\AddUserHandler', 'getAddUserHandlerService', true],
            'App\\Handler\\User\\AddUserRoleHandler' => ['privates', 'App\\Handler\\User\\AddUserRoleHandler', 'getAddUserRoleHandlerService', true],
            'App\\Handler\\User\\ChangePasswordHandler' => ['privates', 'App\\Handler\\User\\ChangePasswordHandler', 'getChangePasswordHandlerService', true],
            'App\\Handler\\User\\DeleteFrameworkAclHandler' => ['privates', 'App\\Handler\\User\\DeleteFrameworkAclHandler', 'getDeleteFrameworkAclHandlerService', true],
            'App\\Handler\\User\\DeleteOrganizationHandler' => ['privates', 'App\\Handler\\User\\DeleteOrganizationHandler', 'getDeleteOrganizationHandlerService', true],
            'App\\Handler\\User\\DeleteUserHandler' => ['privates', 'App\\Handler\\User\\DeleteUserHandler', 'getDeleteUserHandlerService', true],
            'App\\Handler\\User\\RemoveUserRoleHandler' => ['privates', 'App\\Handler\\User\\RemoveUserRoleHandler', 'getRemoveUserRoleHandlerService', true],
            'App\\Handler\\User\\SetUserPasswordHandler' => ['privates', 'App\\Handler\\User\\SetUserPasswordHandler', 'getSetUserPasswordHandlerService', true],
            'App\\Handler\\User\\SuspendUserHandler' => ['privates', 'App\\Handler\\User\\SuspendUserHandler', 'getSuspendUserHandlerService', true],
            'App\\Handler\\User\\UpdateOrganizationHandler' => ['privates', 'App\\Handler\\User\\UpdateOrganizationHandler', 'getUpdateOrganizationHandlerService', true],
            'App\\Handler\\User\\UpdateUserHandler' => ['privates', 'App\\Handler\\User\\UpdateUserHandler', 'getUpdateUserHandlerService', true],
            'App\\Repository\\ChangeEntryRepository' => ['privates', 'App\\Repository\\ChangeEntryRepository', 'getChangeEntryRepositoryService', true],
            'App\\Repository\\CommentRepository' => ['privates', 'App\\Repository\\CommentRepository', 'getCommentRepositoryService', true],
            'App\\Repository\\Framework\\AdditionalFieldRepository' => ['privates', 'App\\Repository\\Framework\\AdditionalFieldRepository', 'getAdditionalFieldRepositoryService', true],
            'App\\Repository\\Framework\\AssociationSubtypeRepository' => ['privates', 'App\\Repository\\Framework\\AssociationSubtypeRepository', 'getAssociationSubtypeRepositoryService', true],
            'App\\Repository\\Framework\\CfRubricCriterionLevelRepository' => ['privates', 'App\\Repository\\Framework\\CfRubricCriterionLevelRepository', 'getCfRubricCriterionLevelRepositoryService', true],
            'App\\Repository\\Framework\\CfRubricCriterionRepository' => ['privates', 'App\\Repository\\Framework\\CfRubricCriterionRepository', 'getCfRubricCriterionRepositoryService', true],
            'App\\Repository\\Framework\\CfRubricRepository' => ['privates', 'App\\Repository\\Framework\\CfRubricRepository', 'getCfRubricRepositoryService', true],
            'App\\Repository\\Framework\\FrameworkTypeRepository' => ['privates', 'App\\Repository\\Framework\\FrameworkTypeRepository', 'getFrameworkTypeRepositoryService', true],
            'App\\Repository\\Framework\\LsAssociationRepository' => ['privates', 'App\\Repository\\Framework\\LsAssociationRepository', 'getLsAssociationRepositoryService', true],
            'App\\Repository\\Framework\\LsDefAssociationGroupingRepository' => ['privates', 'App\\Repository\\Framework\\LsDefAssociationGroupingRepository', 'getLsDefAssociationGroupingRepositoryService', true],
            'App\\Repository\\Framework\\LsDefConceptRepository' => ['privates', 'App\\Repository\\Framework\\LsDefConceptRepository', 'getLsDefConceptRepositoryService', true],
            'App\\Repository\\Framework\\LsDefGradeRepository' => ['privates', 'App\\Repository\\Framework\\LsDefGradeRepository', 'getLsDefGradeRepositoryService', true],
            'App\\Repository\\Framework\\LsDefItemTypeRepository' => ['privates', 'App\\Repository\\Framework\\LsDefItemTypeRepository', 'getLsDefItemTypeRepositoryService', true],
            'App\\Repository\\Framework\\LsDefLicenceRepository' => ['privates', 'App\\Repository\\Framework\\LsDefLicenceRepository', 'getLsDefLicenceRepositoryService', true],
            'App\\Repository\\Framework\\LsDefSubjectRepository' => ['privates', 'App\\Repository\\Framework\\LsDefSubjectRepository', 'getLsDefSubjectRepositoryService', true],
            'App\\Repository\\Framework\\LsDocAttributeRepository' => ['privates', 'App\\Repository\\Framework\\LsDocAttributeRepository', 'getLsDocAttributeRepositoryService', true],
            'App\\Repository\\Framework\\LsDocRepository' => ['privates', 'App\\Repository\\Framework\\LsDocRepository', 'getLsDocRepositoryService', true],
            'App\\Repository\\Framework\\LsItemRepository' => ['privates', 'App\\Repository\\Framework\\LsItemRepository', 'getLsItemRepositoryService', true],
            'App\\Repository\\Framework\\Mirror\\FrameworkRepository' => ['privates', 'App\\Repository\\Framework\\Mirror\\FrameworkRepository', 'getFrameworkRepositoryService', true],
            'App\\Repository\\Framework\\Mirror\\LogRepository' => ['privates', 'App\\Repository\\Framework\\Mirror\\LogRepository', 'getLogRepositoryService', true],
            'App\\Repository\\Framework\\Mirror\\OAuthCredentialRepository' => ['privates', 'App\\Repository\\Framework\\Mirror\\OAuthCredentialRepository', 'getOAuthCredentialRepositoryService', true],
            'App\\Repository\\Framework\\Mirror\\ServerRepository' => ['privates', 'App\\Repository\\Framework\\Mirror\\ServerRepository', 'getServerRepositoryService', true],
            'App\\Repository\\Framework\\ObjectLockRepository' => ['privates', 'App\\Repository\\Framework\\ObjectLockRepository', 'getObjectLockRepositoryService', true],
            'App\\Repository\\SessionRepository' => ['privates', 'App\\Repository\\SessionRepository', 'getSessionRepositoryService', true],
            'App\\Repository\\User\\OrganizationRepository' => ['privates', 'App\\Repository\\User\\OrganizationRepository', 'getOrganizationRepositoryService', true],
            'App\\Repository\\User\\UserDocAclRepository' => ['privates', 'App\\Repository\\User\\UserDocAclRepository', 'getUserDocAclRepositoryService', true],
            'App\\Repository\\User\\UserRepository' => ['privates', 'App\\Repository\\User\\UserRepository', 'getUserRepositoryService', true],
            'App\\Security\\LoginFormAuthenticator' => ['privates', 'App\\Security\\LoginFormAuthenticator', 'getLoginFormAuthenticatorService', true],
            'App\\Security\\Session\\SessionIdleHandler' => ['privates', 'App\\Security\\Session\\SessionIdleHandler', 'getSessionIdleHandlerService', false],
            'App\\Security\\UserChecker' => ['privates', 'App\\Security\\UserChecker', 'getUserCheckerService', true],
            'App\\Security\\Voter\\AssociationVoter' => ['privates', 'App\\Security\\Voter\\AssociationVoter', 'getAssociationVoterService', true],
            'App\\Security\\Voter\\CommentVoter' => ['privates', 'App\\Security\\Voter\\CommentVoter', 'getCommentVoterService', true],
            'App\\Security\\Voter\\FeatureVoter' => ['privates', 'App\\Security\\Voter\\FeatureVoter', 'getFeatureVoterService', true],
            'App\\Security\\Voter\\FrameworkAccessVoter' => ['privates', 'App\\Security\\Voter\\FrameworkAccessVoter', 'getFrameworkAccessVoterService', true],
            'App\\Security\\Voter\\FrameworkManageEditorsVoter' => ['privates', 'App\\Security\\Voter\\FrameworkManageEditorsVoter', 'getFrameworkManageEditorsVoterService', true],
            'App\\Security\\Voter\\ItemVoter' => ['privates', 'App\\Security\\Voter\\ItemVoter', 'getItemVoterService', true],
            'App\\Security\\Voter\\ManageAdditionalFieldVoter' => ['privates', 'App\\Security\\Voter\\ManageAdditionalFieldVoter', 'getManageAdditionalFieldVoterService', true],
            'App\\Security\\Voter\\ManageLogVoter' => ['privates', 'App\\Security\\Voter\\ManageLogVoter', 'getManageLogVoterService', true],
            'App\\Security\\Voter\\ManageMirrorVoter' => ['privates', 'App\\Security\\Voter\\ManageMirrorVoter', 'getManageMirrorVoterService', true],
            'App\\Security\\Voter\\ManageOrganizationVoter' => ['privates', 'App\\Security\\Voter\\ManageOrganizationVoter', 'getManageOrganizationVoterService', true],
            'App\\Security\\Voter\\ManageUserVoter' => ['privates', 'App\\Security\\Voter\\ManageUserVoter', 'getManageUserVoterService', true],
            'App\\Service\\AsnImport' => ['privates', 'App\\Service\\AsnImport', 'getAsnImportService', true],
            'App\\Service\\BucketFactory' => ['privates', 'App\\Service\\BucketFactory', 'getBucketFactoryService', true],
            'App\\Service\\BucketService' => ['privates', 'App\\Service\\BucketService', 'getBucketServiceService', true],
            'App\\Service\\CaseImport' => ['privates', 'App\\Service\\CaseImport', 'getCaseImportService', true],
            'App\\Service\\ExcelExport' => ['privates', 'App\\Service\\ExcelExport', 'getExcelExportService', true],
            'App\\Service\\ExcelImport' => ['privates', 'App\\Service\\ExcelImport', 'getExcelImportService', true],
            'App\\Service\\FirebaseFactory' => ['privates', 'App\\Service\\FirebaseFactory', 'getFirebaseFactoryService', true],
            'App\\Service\\FrameworkService' => ['privates', 'App\\Service\\FrameworkService', 'getFrameworkServiceService', true],
            'App\\Service\\FrameworkUpdater' => ['privates', 'App\\Service\\FrameworkUpdater', 'getFrameworkUpdaterService', true],
            'App\\Service\\GithubImport' => ['privates', 'App\\Service\\GithubImport', 'getGithubImportService', true],
            'App\\Service\\IdentifiableObjectHelper' => ['privates', 'App\\Service\\IdentifiableObjectHelper', 'getIdentifiableObjectHelperService', true],
            'App\\Service\\MirrorFramework' => ['privates', 'App\\Service\\MirrorFramework', 'getMirrorFrameworkService', true],
            'App\\Service\\MirrorServer' => ['privates', 'App\\Service\\MirrorServer', 'getMirrorServerService', true],
            'App\\Service\\UriGenerator' => ['privates', 'App\\Service\\UriGenerator', 'getUriGeneratorService', true],
            'App\\Service\\User\\UserManager' => ['privates', 'App\\Service\\User\\UserManager', 'getUserManagerService', true],
            'App\\Twig\\Extension\\CaseUriExtension' => ['privates', 'App\\Twig\\Extension\\CaseUriExtension', 'getCaseUriExtensionService', false],
            'App\\Twig\\Extension\\CaseUriRuntime' => ['privates', 'App\\Twig\\Extension\\CaseUriRuntime', 'getCaseUriRuntimeService', true],
            'App\\Validator\\Constraints\\PasswordFieldValidator' => ['privates', 'App\\Validator\\Constraints\\PasswordFieldValidator', 'getPasswordFieldValidatorService', true],
            'Doctrine\\Common\\Annotations\\Reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', false],
            'Doctrine\\Common\\Persistence\\ManagerRegistry' => ['services', 'doctrine', 'getDoctrineService', false],
            'Doctrine\\DBAL\\Connection' => ['services', 'doctrine.dbal.default_connection', 'getDoctrine_Dbal_DefaultConnectionService', false],
            'Doctrine\\DBAL\\Driver\\Connection' => ['services', 'doctrine.dbal.default_connection', 'getDoctrine_Dbal_DefaultConnectionService', false],
            'Doctrine\\ORM\\EntityManagerInterface' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', false],
            'Doctrine\\Persistence\\ManagerRegistry' => ['services', 'doctrine', 'getDoctrineService', false],
            'GBProd\\UuidNormalizer\\UuidDenormalizer' => ['privates', 'GBProd\\UuidNormalizer\\UuidDenormalizer', 'getUuidDenormalizerService', true],
            'GBProd\\UuidNormalizer\\UuidNormalizer' => ['privates', 'GBProd\\UuidNormalizer\\UuidNormalizer', 'getUuidNormalizerService', true],
            'GuzzleHttp\\Client' => ['services', 'csa_guzzle.client.json', 'getCsaGuzzle_Client_JsonService', true],
            'GuzzleHttp\\ClientInterface' => ['services', 'csa_guzzle.client.json', 'getCsaGuzzle_Client_JsonService', true],
            'JMS\\Serializer\\ArrayTransformerInterface' => ['services', 'jms_serializer', 'getJmsSerializerService', true],
            'JMS\\Serializer\\ContextFactory\\DeserializationContextFactoryInterface' => ['services', 'jms_serializer.deserialization_context_factory', 'getJmsSerializer_DeserializationContextFactoryService', true],
            'JMS\\Serializer\\ContextFactory\\SerializationContextFactoryInterface' => ['services', 'jms_serializer.serialization_context_factory', 'getJmsSerializer_SerializationContextFactoryService', true],
            'JMS\\Serializer\\SerializerInterface' => ['services', 'jms_serializer', 'getJmsSerializerService', true],
            'Kreait\\Firebase\\Database' => ['privates', 'Kreait\\Firebase\\Database', 'getDatabaseService', true],
            'League\\Flysystem\\AdapterInterface' => ['privates', 'League\\Flysystem\\AdapterInterface', 'getAdapterInterfaceService', true],
            'League\\Flysystem\\Filesystem' => ['privates', 'League\\Flysystem\\Filesystem', 'getFilesystem2Service', true],
            'Psr\\Cache\\CacheItemPoolInterface' => ['services', 'cache.app', 'getCache_AppService', false],
            'Psr\\Container\\ContainerInterface' => ['services', 'service_container', 'getServiceContainerService', true],
            'Psr\\Container\\ContainerInterface $parameterBag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'Psr\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Psr\\Log\\LoggerInterface' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
            'Psr\\Log\\LoggerInterface $cacheLogger' => ['privates', 'monolog.logger.cache', 'getMonolog_Logger_CacheService', false],
            'Psr\\Log\\LoggerInterface $consoleLogger' => ['privates', 'monolog.logger.console', 'getMonolog_Logger_ConsoleService', true],
            'Psr\\Log\\LoggerInterface $debugLogger' => ['privates', 'monolog.logger.debug', 'getMonolog_Logger_DebugService', true],
            'Psr\\Log\\LoggerInterface $doctrineLogger' => ['privates', 'monolog.logger.doctrine', 'getMonolog_Logger_DoctrineService', false],
            'Psr\\Log\\LoggerInterface $eventLogger' => ['privates', 'monolog.logger.event', 'getMonolog_Logger_EventService', false],
            'Psr\\Log\\LoggerInterface $phpLogger' => ['privates', 'monolog.logger.php', 'getMonolog_Logger_PhpService', false],
            'Psr\\Log\\LoggerInterface $profilerLogger' => ['privates', 'monolog.logger.profiler', 'getMonolog_Logger_ProfilerService', false],
            'Psr\\Log\\LoggerInterface $requestLogger' => ['privates', 'monolog.logger.request', 'getMonolog_Logger_RequestService', false],
            'Psr\\Log\\LoggerInterface $routerLogger' => ['privates', 'monolog.logger.router', 'getMonolog_Logger_RouterService', false],
            'Psr\\Log\\LoggerInterface $securityLogger' => ['privates', 'monolog.logger.security', 'getMonolog_Logger_SecurityService', true],
            'Psy\\Configuration' => ['privates', 'Psy\\Configuration', 'getConfigurationService', true],
            'Qandidate\\Toggle\\ContextFactory' => ['services', 'qandidate.toggle.user_context_factory', 'getQandidate_Toggle_UserContextFactoryService', false],
            'Qandidate\\Toggle\\ToggleManager' => ['services', 'qandidate.toggle.manager', 'getQandidate_Toggle_ManagerService', false],
            'SessionHandlerInterface' => ['privates', 'session.handler.pdo', 'getSession_Handler_PdoService', true],
            'SimpleThings\\EntityAudit\\AuditConfiguration' => ['services', 'simplethings_entityaudit.config', 'getSimplethingsEntityaudit_ConfigService', false],
            'SimpleThings\\EntityAudit\\AuditReader' => ['services', 'simplethings_entityaudit.reader', 'getSimplethingsEntityaudit_ReaderService', true],
            'Swift_Mailer' => ['services', 'swiftmailer.mailer.default', 'getSwiftmailer_Mailer_DefaultService', true],
            'Swift_Spool' => ['privates', 'swiftmailer.mailer.default.spool.memory', 'getSwiftmailer_Mailer_Default_Spool_MemoryService', true],
            'Swift_Transport' => ['services', 'swiftmailer.transport', 'getSwiftmailer_TransportService', true],
            'Symfony\\Bundle\\SwiftmailerBundle\\Command\\DebugCommand' => ['privates', 'Symfony\\Bundle\\SwiftmailerBundle\\Command\\DebugCommand', 'getDebugCommandService', true],
            'Symfony\\Bundle\\SwiftmailerBundle\\Command\\NewEmailCommand' => ['privates', 'Symfony\\Bundle\\SwiftmailerBundle\\Command\\NewEmailCommand', 'getNewEmailCommandService', true],
            'Symfony\\Bundle\\SwiftmailerBundle\\Command\\SendEmailCommand' => ['privates', 'Symfony\\Bundle\\SwiftmailerBundle\\Command\\SendEmailCommand', 'getSendEmailCommandService', true],
            'Symfony\\Component\\Asset\\PackageInterface $encorePackage' => ['privates', 'assets._package_encore', 'getAssets_PackageEncoreService', false],
            'Symfony\\Component\\Asset\\Packages' => ['privates', 'assets.packages', 'getAssets_PackagesService', false],
            'Symfony\\Component\\Cache\\Adapter\\AdapterInterface' => ['services', 'cache.app', 'getCache_AppService', false],
            'Symfony\\Component\\DependencyInjection\\ContainerInterface' => ['services', 'service_container', 'getServiceContainerService', true],
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Symfony\\Component\\Filesystem\\Filesystem' => ['services', 'filesystem', 'getFilesystemService', true],
            'Symfony\\Component\\Form\\FormFactoryInterface' => ['services', 'form.factory', 'getForm_FactoryService', true],
            'Symfony\\Component\\Form\\FormRegistryInterface' => ['privates', 'form.registry', 'getForm_RegistryService', true],
            'Symfony\\Component\\Form\\ResolvedFormTypeFactoryInterface' => ['privates', 'form.resolved_type_factory', 'getForm_ResolvedTypeFactoryService', true],
            'Symfony\\Component\\HttpFoundation\\RequestStack' => ['services', 'request_stack', 'getRequestStackService', false],
            'Symfony\\Component\\HttpFoundation\\Session\\SessionInterface' => ['services', 'session', 'getSessionService', true],
            'Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface' => ['privates', 'session.storage.native', 'getSession_Storage_NativeService', true],
            'Symfony\\Component\\HttpFoundation\\UrlHelper' => ['privates', 'url_helper', 'getUrlHelperService', false],
            'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => ['privates', 'file_locator', 'getFileLocatorService', true],
            'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', false],
            'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => ['services', 'http_kernel', 'getHttpKernelService', false],
            'Symfony\\Component\\HttpKernel\\KernelInterface' => ['services', 'kernel', 'getKernelService', false],
            'Symfony\\Component\\HttpKernel\\UriSigner' => ['privates', 'uri_signer', 'getUriSignerService', false],
            'Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface' => ['privates', 'property_accessor', 'getPropertyAccessorService', true],
            'Symfony\\Component\\PropertyInfo\\PropertyAccessExtractorInterface' => ['privates', 'property_info', 'getPropertyInfoService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyDescriptionExtractorInterface' => ['privates', 'property_info', 'getPropertyInfoService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyInfoExtractorInterface' => ['privates', 'property_info', 'getPropertyInfoService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyInitializableExtractorInterface' => ['privates', 'property_info', 'getPropertyInfoService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyListExtractorInterface' => ['privates', 'property_info', 'getPropertyInfoService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyReadInfoExtractorInterface' => ['privates', 'property_info.reflection_extractor', 'getPropertyInfo_ReflectionExtractorService', true],
            'Symfony\\Component\\PropertyInfo\\PropertyTypeExtractorInterface' => ['privates', 'property_info', 'getPropertyInfoService', false],
            'Symfony\\Component\\PropertyInfo\\PropertyWriteInfoExtractorInterface' => ['privates', 'property_info.reflection_extractor', 'getPropertyInfo_ReflectionExtractorService', true],
            'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\RequestContext' => ['privates', 'router.request_context', 'getRouter_RequestContextService', false],
            'Symfony\\Component\\Routing\\RequestContextAwareInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Routing\\RouterInterface' => ['services', 'router', 'getRouterService', false],
            'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationManagerInterface' => ['privates', 'security.authentication.manager', 'getSecurity_Authentication_ManagerService', false],
            'Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
            'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManagerInterface' => ['privates', 'debug.security.access.decision_manager', 'getDebug_Security_Access_DecisionManagerService', false],
            'Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationCheckerInterface' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface' => ['privates', 'security.encoder_factory.generic', 'getSecurity_EncoderFactory_GenericService', true],
            'Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface' => ['services', 'security.password_encoder', 'getSecurity_PasswordEncoderService', true],
            'Symfony\\Component\\Security\\Core\\Role\\RoleHierarchyInterface' => ['privates', 'security.role_hierarchy', 'getSecurity_RoleHierarchyService', false],
            'Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface' => ['services', 'security.csrf.token_manager', 'getSecurity_Csrf_TokenManagerService', true],
            'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\TokenGeneratorInterface' => ['privates', 'security.csrf.token_generator', 'getSecurity_Csrf_TokenGeneratorService', true],
            'Symfony\\Component\\Security\\Csrf\\TokenStorage\\TokenStorageInterface' => ['privates', 'security.csrf.token_storage', 'getSecurity_Csrf_TokenStorageService', true],
            'Symfony\\Component\\Security\\Guard\\GuardAuthenticatorHandler' => ['privates', 'security.authentication.guard_handler', 'getSecurity_Authentication_GuardHandlerService', true],
            'Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationUtils' => ['services', 'security.authentication_utils', 'getSecurity_AuthenticationUtilsService', true],
            'Symfony\\Component\\Security\\Http\\Firewall' => ['privates', 'debug.security.firewall', 'getDebug_Security_FirewallService', false],
            'Symfony\\Component\\Security\\Http\\HttpUtils' => ['privates', 'security.http_utils', 'getSecurity_HttpUtilsService', true],
            'Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface' => ['privates', 'security.authentication.session_strategy', 'getSecurity_Authentication_SessionStrategyService', true],
            'Symfony\\Component\\Serializer\\Encoder\\DecoderInterface' => ['services', 'serializer', 'getSerializerService', true],
            'Symfony\\Component\\Serializer\\Encoder\\EncoderInterface' => ['services', 'serializer', 'getSerializerService', true],
            'Symfony\\Component\\Serializer\\Mapping\\ClassDiscriminatorResolverInterface' => ['privates', 'serializer.mapping.class_discriminator_resolver', 'getSerializer_Mapping_ClassDiscriminatorResolverService', true],
            'Symfony\\Component\\Serializer\\Mapping\\Factory\\ClassMetadataFactoryInterface' => ['privates', 'serializer.mapping.cache_class_metadata_factory', 'getSerializer_Mapping_CacheClassMetadataFactoryService', true],
            'Symfony\\Component\\Serializer\\Normalizer\\DenormalizerInterface' => ['services', 'serializer', 'getSerializerService', true],
            'Symfony\\Component\\Serializer\\Normalizer\\NormalizerInterface' => ['services', 'serializer', 'getSerializerService', true],
            'Symfony\\Component\\Serializer\\Normalizer\\ObjectNormalizer' => ['privates', 'serializer.normalizer.object', 'getSerializer_Normalizer_ObjectService', true],
            'Symfony\\Component\\Serializer\\SerializerInterface' => ['services', 'serializer', 'getSerializerService', true],
            'Symfony\\Component\\Stopwatch\\Stopwatch' => ['privates', 'debug.stopwatch', 'getDebug_StopwatchService', false],
            'Symfony\\Component\\String\\Slugger\\SluggerInterface' => ['privates', 'slugger', 'getSluggerService', true],
            'Symfony\\Component\\Translation\\Extractor\\ExtractorInterface' => ['privates', 'translation.extractor', 'getTranslation_ExtractorService', true],
            'Symfony\\Component\\Translation\\Reader\\TranslationReaderInterface' => ['privates', 'translation.reader', 'getTranslation_ReaderService', true],
            'Symfony\\Component\\Translation\\Writer\\TranslationWriterInterface' => ['privates', 'translation.writer', 'getTranslation_WriterService', true],
            'Symfony\\Component\\Validator\\Validator\\ValidatorInterface' => ['services', 'validator', 'getValidatorService', false],
            'Symfony\\Contracts\\Cache\\CacheInterface' => ['services', 'cache.app', 'getCache_AppService', false],
            'Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'Symfony\\Contracts\\Translation\\TranslatorInterface' => ['services', 'translator', 'getTranslatorService', false],
            'Twig\\Environment' => ['services', 'twig', 'getTwigService', false],
            'Twig\\Extensions\\TextExtension' => ['privates', 'Twig\\Extensions\\TextExtension', 'getTextExtensionService', false],
            'Twig_Environment' => ['services', 'twig', 'getTwigService', false],
            'annotation_reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', false],
            'annotations.cache' => ['privates', 'annotations.cache', 'getAnnotations_CacheService', true],
            'annotations.cache_warmer' => ['privates', 'annotations.cache_warmer', 'getAnnotations_CacheWarmerService', true],
            'annotations.cached_reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', false],
            'annotations.dummy_registry' => ['privates', 'annotations.dummy_registry', 'getAnnotations_DummyRegistryService', false],
            'annotations.reader' => ['privates', 'annotations.reader', 'getAnnotations_ReaderService', false],
            'argument_metadata_factory' => ['privates', 'argument_metadata_factory', 'getArgumentMetadataFactoryService', false],
            'argument_resolver' => ['privates', 'debug.argument_resolver', 'getDebug_ArgumentResolverService', false],
            'argument_resolver.controller_locator' => ['privates', '.service_locator.gmOuYak', 'get_ServiceLocator_GmOuYakService', true],
            'argument_resolver.default' => ['privates', 'debug.argument_resolver.default', 'getDebug_ArgumentResolver_DefaultService', true],
            'argument_resolver.not_tagged_controller' => ['privates', 'debug.argument_resolver.not_tagged_controller', 'getDebug_ArgumentResolver_NotTaggedControllerService', true],
            'argument_resolver.request' => ['privates', 'debug.argument_resolver.request', 'getDebug_ArgumentResolver_RequestService', true],
            'argument_resolver.request_attribute' => ['privates', 'debug.argument_resolver.request_attribute', 'getDebug_ArgumentResolver_RequestAttributeService', true],
            'argument_resolver.service' => ['privates', 'debug.argument_resolver.service', 'getDebug_ArgumentResolver_ServiceService', true],
            'argument_resolver.session' => ['privates', 'debug.argument_resolver.session', 'getDebug_ArgumentResolver_SessionService', true],
            'argument_resolver.variadic' => ['privates', 'debug.argument_resolver.variadic', 'getDebug_ArgumentResolver_VariadicService', true],
            'assets._default_package' => ['privates', 'assets._default_package', 'getAssets_DefaultPackageService', false],
            'assets._package_encore' => ['privates', 'assets._package_encore', 'getAssets_PackageEncoreService', false],
            'assets._version__default' => ['privates', 'assets._version__default', 'getAssets_VersionDefaultService', false],
            'assets._version_encore' => ['privates', 'assets._version_encore', 'getAssets_VersionEncoreService', false],
            'assets.context' => ['privates', 'assets.context', 'getAssets_ContextService', false],
            'assets.packages' => ['privates', 'assets.packages', 'getAssets_PackagesService', false],
            'cache.annotations' => ['privates', 'cache.annotations', 'getCache_AnnotationsService', false],
            'cache.annotations.recorder_inner' => ['privates', 'cache.annotations.recorder_inner', 'getCache_Annotations_RecorderInnerService', false],
            'cache.app.recorder_inner' => ['privates', 'cache.app.recorder_inner', 'getCache_App_RecorderInnerService', false],
            'cache.default_clearer' => ['services', 'cache.app_clearer', 'getCache_AppClearerService', true],
            'cache.default_marshaller' => ['privates', 'cache.default_marshaller', 'getCache_DefaultMarshallerService', false],
            'cache.default_pdo_provider' => ['services', 'doctrine.dbal.default_connection', 'getDoctrine_Dbal_DefaultConnectionService', false],
            'cache.doctrine.orm.default.metadata' => ['privates', 'cache.doctrine.orm.default.metadata', 'getCache_Doctrine_Orm_Default_MetadataService', false],
            'cache.doctrine.orm.default.metadata.recorder_inner' => ['privates', 'cache.doctrine.orm.default.metadata.recorder_inner', 'getCache_Doctrine_Orm_Default_Metadata_RecorderInnerService', false],
            'cache.doctrine.orm.default.query' => ['privates', 'cache.doctrine.orm.default.query', 'getCache_Doctrine_Orm_Default_QueryService', false],
            'cache.doctrine.orm.default.query.recorder_inner' => ['privates', 'cache.doctrine.orm.default.query.recorder_inner', 'getCache_Doctrine_Orm_Default_Query_RecorderInnerService', false],
            'cache.doctrine.orm.default.result' => ['privates', 'cache.doctrine.orm.default.result', 'getCache_Doctrine_Orm_Default_ResultService', false],
            'cache.doctrine.orm.default.result.recorder_inner' => ['privates', 'cache.doctrine.orm.default.result.recorder_inner', 'getCache_Doctrine_Orm_Default_Result_RecorderInnerService', false],
            'cache.doctrine.orm.default.second_level.region_driver' => ['privates', 'cache.doctrine.orm.default.second_level.region_driver', 'getCache_Doctrine_Orm_Default_SecondLevel_RegionDriverService', false],
            'cache.doctrine.orm.default.second_level.region_driver.recorder_inner' => ['privates', 'cache.doctrine.orm.default.second_level.region_driver.recorder_inner', 'getCache_Doctrine_Orm_Default_SecondLevel_RegionDriver_RecorderInnerService', false],
            'cache.property_access' => ['privates', 'cache.property_access', 'getCache_PropertyAccessService', true],
            'cache.property_info' => ['privates', 'cache.property_info', 'getCache_PropertyInfoService', false],
            'cache.property_info.recorder_inner' => ['privates', 'cache.property_info.recorder_inner', 'getCache_PropertyInfo_RecorderInnerService', false],
            'cache.security_expression_language' => ['privates', 'cache.security_expression_language', 'getCache_SecurityExpressionLanguageService', false],
            'cache.security_expression_language.recorder_inner' => ['privates', 'cache.security_expression_language.recorder_inner', 'getCache_SecurityExpressionLanguage_RecorderInnerService', false],
            'cache.serializer' => ['privates', 'cache.serializer', 'getCache_SerializerService', false],
            'cache.serializer.recorder_inner' => ['privates', 'cache.serializer.recorder_inner', 'getCache_Serializer_RecorderInnerService', false],
            'cache.system.recorder_inner' => ['privates', 'cache.system.recorder_inner', 'getCache_System_RecorderInnerService', false],
            'cache.validator' => ['privates', 'cache.validator', 'getCache_ValidatorService', false],
            'cache.validator.recorder_inner' => ['privates', 'cache.validator.recorder_inner', 'getCache_Validator_RecorderInnerService', false],
            'cache_pool_clearer.cache_warmer' => ['privates', 'cache_pool_clearer.cache_warmer', 'getCachePoolClearer_CacheWarmerService', true],
            'config.resource.self_checking_resource_checker' => ['privates', 'config.resource.self_checking_resource_checker', 'getConfig_Resource_SelfCheckingResourceCheckerService', true],
            'config_cache_factory' => ['privates', 'config_cache_factory', 'getConfigCacheFactoryService', false],
            'console.command.about' => ['privates', 'console.command.about', 'getConsole_Command_AboutService', true],
            'console.command.assets_install' => ['privates', 'console.command.assets_install', 'getConsole_Command_AssetsInstallService', true],
            'console.command.cache_clear' => ['privates', 'console.command.cache_clear', 'getConsole_Command_CacheClearService', true],
            'console.command.cache_pool_clear' => ['privates', 'console.command.cache_pool_clear', 'getConsole_Command_CachePoolClearService', true],
            'console.command.cache_pool_delete' => ['privates', 'console.command.cache_pool_delete', 'getConsole_Command_CachePoolDeleteService', true],
            'console.command.cache_pool_list' => ['privates', 'console.command.cache_pool_list', 'getConsole_Command_CachePoolListService', true],
            'console.command.cache_pool_prune' => ['privates', 'console.command.cache_pool_prune', 'getConsole_Command_CachePoolPruneService', true],
            'console.command.cache_warmup' => ['privates', 'console.command.cache_warmup', 'getConsole_Command_CacheWarmupService', true],
            'console.command.config_debug' => ['privates', 'console.command.config_debug', 'getConsole_Command_ConfigDebugService', true],
            'console.command.config_dump_reference' => ['privates', 'console.command.config_dump_reference', 'getConsole_Command_ConfigDumpReferenceService', true],
            'console.command.container_debug' => ['privates', 'console.command.container_debug', 'getConsole_Command_ContainerDebugService', true],
            'console.command.container_lint' => ['privates', 'console.command.container_lint', 'getConsole_Command_ContainerLintService', true],
            'console.command.debug_autowiring' => ['privates', 'console.command.debug_autowiring', 'getConsole_Command_DebugAutowiringService', true],
            'console.command.event_dispatcher_debug' => ['privates', 'console.command.event_dispatcher_debug', 'getConsole_Command_EventDispatcherDebugService', true],
            'console.command.form_debug' => ['privates', 'console.command.form_debug', 'getConsole_Command_FormDebugService', true],
            'console.command.router_debug' => ['privates', 'console.command.router_debug', 'getConsole_Command_RouterDebugService', true],
            'console.command.router_match' => ['privates', 'console.command.router_match', 'getConsole_Command_RouterMatchService', true],
            'console.command.secrets_decrypt_to_local' => ['privates', 'console.command.secrets_decrypt_to_local', 'getConsole_Command_SecretsDecryptToLocalService', true],
            'console.command.secrets_encrypt_from_local' => ['privates', 'console.command.secrets_encrypt_from_local', 'getConsole_Command_SecretsEncryptFromLocalService', true],
            'console.command.secrets_generate_key' => ['privates', 'console.command.secrets_generate_key', 'getConsole_Command_SecretsGenerateKeyService', true],
            'console.command.secrets_list' => ['privates', 'console.command.secrets_list', 'getConsole_Command_SecretsListService', true],
            'console.command.secrets_remove' => ['privates', 'console.command.secrets_remove', 'getConsole_Command_SecretsRemoveService', true],
            'console.command.secrets_set' => ['privates', 'console.command.secrets_set', 'getConsole_Command_SecretsSetService', true],
            'console.command.translation_debug' => ['privates', 'console.command.translation_debug', 'getConsole_Command_TranslationDebugService', true],
            'console.command.translation_update' => ['privates', 'console.command.translation_update', 'getConsole_Command_TranslationUpdateService', true],
            'console.command.xliff_lint' => ['privates', 'console.command.xliff_lint', 'getConsole_Command_XliffLintService', true],
            'console.command.yaml_lint' => ['privates', 'console.command.yaml_lint', 'getConsole_Command_YamlLintService', true],
            'console.error_listener' => ['privates', 'console.error_listener', 'getConsole_ErrorListenerService', true],
            'console.suggest_missing_package_subscriber' => ['privates', 'console.suggest_missing_package_subscriber', 'getConsole_SuggestMissingPackageSubscriberService', true],
            'container.env_var_processor' => ['privates', 'container.env_var_processor', 'getContainer_EnvVarProcessorService', true],
            'container.getenv' => ['privates', 'container.getenv', 'getContainer_GetenvService', true],
            'controller_resolver' => ['privates', 'debug.controller_resolver', 'getDebug_ControllerResolverService', false],
            'csa_guzzle.data_collector.guzzle' => ['privates', 'csa_guzzle.data_collector.guzzle', 'getCsaGuzzle_DataCollector_GuzzleService', false],
            'csa_guzzle.logger.message_formatter' => ['privates', 'csa_guzzle.logger.message_formatter', 'getCsaGuzzle_Logger_MessageFormatterService', true],
            'csa_guzzle.middleware.history' => ['privates', 'csa_guzzle.middleware.history', 'getCsaGuzzle_Middleware_HistoryService', true],
            'csa_guzzle.middleware.logger' => ['privates', 'csa_guzzle.middleware.logger', 'getCsaGuzzle_Middleware_LoggerService', true],
            'csa_guzzle.middleware.stopwatch' => ['privates', 'csa_guzzle.middleware.stopwatch', 'getCsaGuzzle_Middleware_StopwatchService', true],
            'csa_guzzle.twig.extension' => ['privates', 'csa_guzzle.twig.extension', 'getCsaGuzzle_Twig_ExtensionService', false],
            'data_collector.ajax' => ['privates', 'data_collector.ajax', 'getDataCollector_AjaxService', false],
            'data_collector.cache' => ['privates', 'data_collector.cache', 'getDataCollector_CacheService', false],
            'data_collector.config' => ['privates', 'data_collector.config', 'getDataCollector_ConfigService', false],
            'data_collector.doctrine' => ['privates', 'data_collector.doctrine', 'getDataCollector_DoctrineService', false],
            'data_collector.events' => ['privates', 'data_collector.events', 'getDataCollector_EventsService', false],
            'data_collector.exception' => ['privates', 'data_collector.exception', 'getDataCollector_ExceptionService', false],
            'data_collector.form' => ['privates', 'data_collector.form', 'getDataCollector_FormService', false],
            'data_collector.form.extractor' => ['privates', 'data_collector.form.extractor', 'getDataCollector_Form_ExtractorService', false],
            'data_collector.logger' => ['privates', 'data_collector.logger', 'getDataCollector_LoggerService', false],
            'data_collector.memory' => ['privates', 'data_collector.memory', 'getDataCollector_MemoryService', false],
            'data_collector.request' => ['privates', 'data_collector.request', 'getDataCollector_RequestService', false],
            'data_collector.router' => ['privates', 'data_collector.router', 'getDataCollector_RouterService', false],
            'data_collector.security' => ['privates', 'data_collector.security', 'getDataCollector_SecurityService', false],
            'data_collector.time' => ['privates', 'data_collector.time', 'getDataCollector_TimeService', false],
            'data_collector.translation' => ['privates', 'data_collector.translation', 'getDataCollector_TranslationService', false],
            'data_collector.twig' => ['privates', 'data_collector.twig', 'getDataCollector_TwigService', false],
            'data_collector.validator' => ['privates', 'data_collector.validator', 'getDataCollector_ValidatorService', false],
            'debug.argument_resolver' => ['privates', 'debug.argument_resolver', 'getDebug_ArgumentResolverService', false],
            'debug.argument_resolver.default' => ['privates', 'debug.argument_resolver.default', 'getDebug_ArgumentResolver_DefaultService', true],
            'debug.argument_resolver.default.inner' => ['privates', 'debug.argument_resolver.default.inner', 'getDebug_ArgumentResolver_Default_InnerService', true],
            'debug.argument_resolver.inner' => ['privates', 'debug.argument_resolver.inner', 'getDebug_ArgumentResolver_InnerService', false],
            'debug.argument_resolver.not_tagged_controller' => ['privates', 'debug.argument_resolver.not_tagged_controller', 'getDebug_ArgumentResolver_NotTaggedControllerService', true],
            'debug.argument_resolver.not_tagged_controller.inner' => ['privates', 'debug.argument_resolver.not_tagged_controller.inner', 'getDebug_ArgumentResolver_NotTaggedController_InnerService', true],
            'debug.argument_resolver.request' => ['privates', 'debug.argument_resolver.request', 'getDebug_ArgumentResolver_RequestService', true],
            'debug.argument_resolver.request.inner' => ['privates', 'debug.argument_resolver.request.inner', 'getDebug_ArgumentResolver_Request_InnerService', true],
            'debug.argument_resolver.request_attribute' => ['privates', 'debug.argument_resolver.request_attribute', 'getDebug_ArgumentResolver_RequestAttributeService', true],
            'debug.argument_resolver.request_attribute.inner' => ['privates', 'debug.argument_resolver.request_attribute.inner', 'getDebug_ArgumentResolver_RequestAttribute_InnerService', true],
            'debug.argument_resolver.service' => ['privates', 'debug.argument_resolver.service', 'getDebug_ArgumentResolver_ServiceService', true],
            'debug.argument_resolver.service.inner' => ['privates', 'debug.argument_resolver.service.inner', 'getDebug_ArgumentResolver_Service_InnerService', true],
            'debug.argument_resolver.session' => ['privates', 'debug.argument_resolver.session', 'getDebug_ArgumentResolver_SessionService', true],
            'debug.argument_resolver.session.inner' => ['privates', 'debug.argument_resolver.session.inner', 'getDebug_ArgumentResolver_Session_InnerService', true],
            'debug.argument_resolver.variadic' => ['privates', 'debug.argument_resolver.variadic', 'getDebug_ArgumentResolver_VariadicService', true],
            'debug.argument_resolver.variadic.inner' => ['privates', 'debug.argument_resolver.variadic.inner', 'getDebug_ArgumentResolver_Variadic_InnerService', true],
            'debug.controller_resolver' => ['privates', 'debug.controller_resolver', 'getDebug_ControllerResolverService', false],
            'debug.controller_resolver.inner' => ['privates', 'debug.controller_resolver.inner', 'getDebug_ControllerResolver_InnerService', false],
            'debug.debug_handlers_listener' => ['privates', 'debug.debug_handlers_listener', 'getDebug_DebugHandlersListenerService', false],
            'debug.dump_listener' => ['privates', 'debug.dump_listener', 'getDebug_DumpListenerService', true],
            'debug.event_dispatcher' => ['services', 'event_dispatcher', 'getEventDispatcherService', false],
            'debug.event_dispatcher.inner' => ['privates', 'debug.event_dispatcher.inner', 'getDebug_EventDispatcher_InnerService', false],
            'debug.file_link_formatter' => ['privates', 'debug.file_link_formatter', 'getDebug_FileLinkFormatterService', false],
            'debug.file_link_formatter.url_format' => ['privates', 'debug.file_link_formatter.url_format', 'getDebug_FileLinkFormatter_UrlFormatService', true],
            'debug.log_processor' => ['privates', 'debug.log_processor', 'getDebug_LogProcessorService', false],
            'debug.security.access.decision_manager' => ['privates', 'debug.security.access.decision_manager', 'getDebug_Security_Access_DecisionManagerService', false],
            'debug.security.access.decision_manager.inner' => ['privates', 'debug.security.access.decision_manager.inner', 'getDebug_Security_Access_DecisionManager_InnerService', false],
            'debug.security.firewall' => ['privates', 'debug.security.firewall', 'getDebug_Security_FirewallService', false],
            'debug.security.user_value_resolver' => ['privates', 'debug.security.user_value_resolver', 'getDebug_Security_UserValueResolverService', true],
            'debug.security.user_value_resolver.inner' => ['privates', 'debug.security.user_value_resolver.inner', 'getDebug_Security_UserValueResolver_InnerService', true],
            'debug.security.voter.App\\Security\\Voter\\AssociationVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\AssociationVoter', 'getAssociationVoter2Service', true],
            'debug.security.voter.App\\Security\\Voter\\CommentVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\CommentVoter', 'getCommentVoter2Service', true],
            'debug.security.voter.App\\Security\\Voter\\FeatureVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\FeatureVoter', 'getFeatureVoter2Service', true],
            'debug.security.voter.App\\Security\\Voter\\FrameworkAccessVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\FrameworkAccessVoter', 'getFrameworkAccessVoter2Service', true],
            'debug.security.voter.App\\Security\\Voter\\FrameworkManageEditorsVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\FrameworkManageEditorsVoter', 'getFrameworkManageEditorsVoter2Service', true],
            'debug.security.voter.App\\Security\\Voter\\ItemVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\ItemVoter', 'getItemVoter2Service', true],
            'debug.security.voter.App\\Security\\Voter\\ManageAdditionalFieldVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\ManageAdditionalFieldVoter', 'getManageAdditionalFieldVoter2Service', true],
            'debug.security.voter.App\\Security\\Voter\\ManageLogVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\ManageLogVoter', 'getManageLogVoter2Service', true],
            'debug.security.voter.App\\Security\\Voter\\ManageMirrorVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\ManageMirrorVoter', 'getManageMirrorVoter2Service', true],
            'debug.security.voter.App\\Security\\Voter\\ManageOrganizationVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\ManageOrganizationVoter', 'getManageOrganizationVoter2Service', true],
            'debug.security.voter.App\\Security\\Voter\\ManageUserVoter' => ['privates', 'debug.security.voter.App\\Security\\Voter\\ManageUserVoter', 'getManageUserVoter2Service', true],
            'debug.security.voter.security.access.authenticated_voter' => ['privates', 'debug.security.voter.security.access.authenticated_voter', 'getDebug_Security_Voter_Security_Access_AuthenticatedVoterService', true],
            'debug.security.voter.security.access.expression_voter' => ['privates', 'debug.security.voter.security.access.expression_voter', 'getDebug_Security_Voter_Security_Access_ExpressionVoterService', true],
            'debug.security.voter.security.access.role_hierarchy_voter' => ['privates', 'debug.security.voter.security.access.role_hierarchy_voter', 'getDebug_Security_Voter_Security_Access_RoleHierarchyVoterService', true],
            'debug.security.voter.vote_listener' => ['privates', 'debug.security.voter.vote_listener', 'getDebug_Security_Voter_VoteListenerService', true],
            'debug.stopwatch' => ['privates', 'debug.stopwatch', 'getDebug_StopwatchService', false],
            'debug.validator' => ['services', 'validator', 'getValidatorService', false],
            'debug.validator.inner' => ['privates', 'debug.validator.inner', 'getDebug_Validator_InnerService', false],
            'dependency_injection.config.container_parameters_resource_checker' => ['privates', 'dependency_injection.config.container_parameters_resource_checker', 'getDependencyInjection_Config_ContainerParametersResourceCheckerService', true],
            'disallow_search_engine_index_response_listener' => ['privates', 'disallow_search_engine_index_response_listener', 'getDisallowSearchEngineIndexResponseListenerService', false],
            'doctrine.cache_clear_metadata_command' => ['privates', 'doctrine.cache_clear_metadata_command', 'getDoctrine_CacheClearMetadataCommandService', true],
            'doctrine.cache_clear_query_cache_command' => ['privates', 'doctrine.cache_clear_query_cache_command', 'getDoctrine_CacheClearQueryCacheCommandService', true],
            'doctrine.cache_clear_result_command' => ['privates', 'doctrine.cache_clear_result_command', 'getDoctrine_CacheClearResultCommandService', true],
            'doctrine.cache_collection_region_command' => ['privates', 'doctrine.cache_collection_region_command', 'getDoctrine_CacheCollectionRegionCommandService', true],
            'doctrine.clear_entity_region_command' => ['privates', 'doctrine.clear_entity_region_command', 'getDoctrine_ClearEntityRegionCommandService', true],
            'doctrine.clear_query_region_command' => ['privates', 'doctrine.clear_query_region_command', 'getDoctrine_ClearQueryRegionCommandService', true],
            'doctrine.database_create_command' => ['privates', 'doctrine.database_create_command', 'getDoctrine_DatabaseCreateCommandService', true],
            'doctrine.database_drop_command' => ['privates', 'doctrine.database_drop_command', 'getDoctrine_DatabaseDropCommandService', true],
            'doctrine.database_import_command' => ['privates', 'doctrine.database_import_command', 'getDoctrine_DatabaseImportCommandService', true],
            'doctrine.dbal.connection_factory' => ['privates', 'doctrine.dbal.connection_factory', 'getDoctrine_Dbal_ConnectionFactoryService', false],
            'doctrine.dbal.default_connection.configuration' => ['privates', 'doctrine.dbal.default_connection.configuration', 'getDoctrine_Dbal_DefaultConnection_ConfigurationService', false],
            'doctrine.dbal.default_connection.event_manager' => ['privates', 'doctrine.dbal.default_connection.event_manager', 'getDoctrine_Dbal_DefaultConnection_EventManagerService', false],
            'doctrine.dbal.default_regex_schema_filter' => ['privates', 'doctrine.dbal.default_regex_schema_filter', 'getDoctrine_Dbal_DefaultRegexSchemaFilterService', false],
            'doctrine.dbal.default_schema_asset_filter_manager' => ['privates', 'doctrine.dbal.default_schema_asset_filter_manager', 'getDoctrine_Dbal_DefaultSchemaAssetFilterManagerService', false],
            'doctrine.dbal.event_manager' => ['privates', 'doctrine.dbal.default_connection.event_manager', 'getDoctrine_Dbal_DefaultConnection_EventManagerService', false],
            'doctrine.dbal.logger' => ['privates', 'doctrine.dbal.logger', 'getDoctrine_Dbal_LoggerService', false],
            'doctrine.dbal.logger.chain.default' => ['privates', 'doctrine.dbal.logger.chain.default', 'getDoctrine_Dbal_Logger_Chain_DefaultService', false],
            'doctrine.dbal.logger.profiling.default' => ['privates', 'doctrine.dbal.logger.profiling.default', 'getDoctrine_Dbal_Logger_Profiling_DefaultService', false],
            'doctrine.dbal.well_known_schema_asset_filter' => ['privates', 'doctrine.dbal.well_known_schema_asset_filter', 'getDoctrine_Dbal_WellKnownSchemaAssetFilterService', false],
            'doctrine.ensure_production_settings_command' => ['privates', 'doctrine.ensure_production_settings_command', 'getDoctrine_EnsureProductionSettingsCommandService', true],
            'doctrine.fixtures.loader' => ['privates', 'doctrine.fixtures.loader', 'getDoctrine_Fixtures_LoaderService', true],
            'doctrine.fixtures_load_command' => ['privates', 'doctrine.fixtures_load_command', 'getDoctrine_FixturesLoadCommandService', true],
            'doctrine.mapping_convert_command' => ['privates', 'doctrine.mapping_convert_command', 'getDoctrine_MappingConvertCommandService', true],
            'doctrine.mapping_import_command' => ['privates', 'doctrine.mapping_import_command', 'getDoctrine_MappingImportCommandService', true],
            'doctrine.mapping_info_command' => ['privates', 'doctrine.mapping_info_command', 'getDoctrine_MappingInfoCommandService', true],
            'doctrine.migrations.configuration' => ['privates', 'doctrine.migrations.configuration', 'getDoctrine_Migrations_ConfigurationService', true],
            'doctrine.migrations.configuration_loader' => ['privates', 'doctrine.migrations.configuration_loader', 'getDoctrine_Migrations_ConfigurationLoaderService', true],
            'doctrine.migrations.dependency_factory' => ['privates', 'doctrine.migrations.dependency_factory', 'getDoctrine_Migrations_DependencyFactoryService', true],
            'doctrine.migrations.em_loader' => ['privates', 'doctrine.migrations.em_loader', 'getDoctrine_Migrations_EmLoaderService', true],
            'doctrine.migrations.metadata_storage' => ['privates', 'doctrine.migrations.storage.table_storage', 'getDoctrine_Migrations_Storage_TableStorageService', true],
            'doctrine.migrations.storage.table_storage' => ['privates', 'doctrine.migrations.storage.table_storage', 'getDoctrine_Migrations_Storage_TableStorageService', true],
            'doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata' => ['privates', 'doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata', 'getDoctrine_Orm_Cache_Provider_Cache_Doctrine_Orm_Default_MetadataService', false],
            'doctrine.orm.cache.provider.cache.doctrine.orm.default.query' => ['privates', 'doctrine.orm.cache.provider.cache.doctrine.orm.default.query', 'getDoctrine_Orm_Cache_Provider_Cache_Doctrine_Orm_Default_QueryService', false],
            'doctrine.orm.cache.provider.cache.doctrine.orm.default.result' => ['privates', 'doctrine.orm.cache.provider.cache.doctrine.orm.default.result', 'getDoctrine_Orm_Cache_Provider_Cache_Doctrine_Orm_Default_ResultService', false],
            'doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver' => ['privates', 'doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver', 'getDoctrine_Orm_Cache_Provider_Cache_Doctrine_Orm_Default_SecondLevel_RegionDriverService', false],
            'doctrine.orm.container_repository_factory' => ['privates', 'doctrine.orm.container_repository_factory', 'getDoctrine_Orm_ContainerRepositoryFactoryService', false],
            'doctrine.orm.default_annotation_metadata_driver' => ['privates', 'doctrine.orm.default_annotation_metadata_driver', 'getDoctrine_Orm_DefaultAnnotationMetadataDriverService', false],
            'doctrine.orm.default_configuration' => ['privates', 'doctrine.orm.default_configuration', 'getDoctrine_Orm_DefaultConfigurationService', false],
            'doctrine.orm.default_entity_listener_resolver' => ['privates', 'doctrine.orm.default_entity_listener_resolver', 'getDoctrine_Orm_DefaultEntityListenerResolverService', false],
            'doctrine.orm.default_entity_manager.event_manager' => ['privates', 'doctrine.dbal.default_connection.event_manager', 'getDoctrine_Dbal_DefaultConnection_EventManagerService', false],
            'doctrine.orm.default_entity_manager.property_info_extractor' => ['privates', 'doctrine.orm.default_entity_manager.property_info_extractor', 'getDoctrine_Orm_DefaultEntityManager_PropertyInfoExtractorService', true],
            'doctrine.orm.default_entity_manager.validator_loader' => ['privates', 'doctrine.orm.default_entity_manager.validator_loader', 'getDoctrine_Orm_DefaultEntityManager_ValidatorLoaderService', false],
            'doctrine.orm.default_listeners.attach_entity_listeners' => ['privates', 'doctrine.orm.default_listeners.attach_entity_listeners', 'getDoctrine_Orm_DefaultListeners_AttachEntityListenersService', true],
            'doctrine.orm.default_manager_configurator' => ['privates', 'doctrine.orm.default_manager_configurator', 'getDoctrine_Orm_DefaultManagerConfiguratorService', false],
            'doctrine.orm.default_metadata_cache' => ['privates', 'doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata', 'getDoctrine_Orm_Cache_Provider_Cache_Doctrine_Orm_Default_MetadataService', false],
            'doctrine.orm.default_metadata_driver' => ['privates', 'doctrine.orm.default_metadata_driver', 'getDoctrine_Orm_DefaultMetadataDriverService', false],
            'doctrine.orm.default_query_cache' => ['privates', 'doctrine.orm.cache.provider.cache.doctrine.orm.default.query', 'getDoctrine_Orm_Cache_Provider_Cache_Doctrine_Orm_Default_QueryService', false],
            'doctrine.orm.default_result_cache' => ['privates', 'doctrine.orm.cache.provider.cache.doctrine.orm.default.result', 'getDoctrine_Orm_Cache_Provider_Cache_Doctrine_Orm_Default_ResultService', false],
            'doctrine.orm.default_second_level_cache.region_cache_driver' => ['privates', 'doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver', 'getDoctrine_Orm_Cache_Provider_Cache_Doctrine_Orm_Default_SecondLevel_RegionDriverService', false],
            'doctrine.orm.default_second_level_cache.regions_configuration' => ['privates', 'doctrine.orm.default_second_level_cache.regions_configuration', 'getDoctrine_Orm_DefaultSecondLevelCache_RegionsConfigurationService', false],
            'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber' => ['privates', 'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber', 'getDoctrine_Orm_Listeners_PdoCacheAdapterDoctrineSchemaSubscriberService', false],
            'doctrine.orm.metadata.annotation_reader' => ['privates', 'annotations.cached_reader', 'getAnnotations_CachedReaderService', false],
            'doctrine.orm.naming_strategy.underscore_number_aware' => ['privates', 'doctrine.orm.naming_strategy.underscore_number_aware', 'getDoctrine_Orm_NamingStrategy_UnderscoreNumberAwareService', false],
            'doctrine.orm.proxy_cache_warmer' => ['privates', 'doctrine.orm.proxy_cache_warmer', 'getDoctrine_Orm_ProxyCacheWarmerService', true],
            'doctrine.orm.quote_strategy.default' => ['privates', 'doctrine.orm.quote_strategy.default', 'getDoctrine_Orm_QuoteStrategy_DefaultService', false],
            'doctrine.orm.validator.unique' => ['privates', 'doctrine.orm.validator.unique', 'getDoctrine_Orm_Validator_UniqueService', true],
            'doctrine.orm.validator_initializer' => ['privates', 'doctrine.orm.validator_initializer', 'getDoctrine_Orm_ValidatorInitializerService', false],
            'doctrine.query_dql_command' => ['privates', 'doctrine.query_dql_command', 'getDoctrine_QueryDqlCommandService', true],
            'doctrine.query_sql_command' => ['privates', 'doctrine.query_sql_command', 'getDoctrine_QuerySqlCommandService', true],
            'doctrine.schema_create_command' => ['privates', 'doctrine.schema_create_command', 'getDoctrine_SchemaCreateCommandService', true],
            'doctrine.schema_drop_command' => ['privates', 'doctrine.schema_drop_command', 'getDoctrine_SchemaDropCommandService', true],
            'doctrine.schema_update_command' => ['privates', 'doctrine.schema_update_command', 'getDoctrine_SchemaUpdateCommandService', true],
            'doctrine.schema_validate_command' => ['privates', 'doctrine.schema_validate_command', 'getDoctrine_SchemaValidateCommandService', true],
            'doctrine.twig.doctrine_extension' => ['privates', 'doctrine.twig.doctrine_extension', 'getDoctrine_Twig_DoctrineExtensionService', false],
            'doctrine_migrations.current_command' => ['privates', 'doctrine_migrations.current_command', 'getDoctrineMigrations_CurrentCommandService', true],
            'doctrine_migrations.diff_command' => ['privates', 'doctrine_migrations.diff_command', 'getDoctrineMigrations_DiffCommandService', true],
            'doctrine_migrations.dump_schema_command' => ['privates', 'doctrine_migrations.dump_schema_command', 'getDoctrineMigrations_DumpSchemaCommandService', true],
            'doctrine_migrations.execute_command' => ['privates', 'doctrine_migrations.execute_command', 'getDoctrineMigrations_ExecuteCommandService', true],
            'doctrine_migrations.generate_command' => ['privates', 'doctrine_migrations.generate_command', 'getDoctrineMigrations_GenerateCommandService', true],
            'doctrine_migrations.latest_command' => ['privates', 'doctrine_migrations.latest_command', 'getDoctrineMigrations_LatestCommandService', true],
            'doctrine_migrations.migrate_command' => ['privates', 'doctrine_migrations.migrate_command', 'getDoctrineMigrations_MigrateCommandService', true],
            'doctrine_migrations.rollup_command' => ['privates', 'doctrine_migrations.rollup_command', 'getDoctrineMigrations_RollupCommandService', true],
            'doctrine_migrations.status_command' => ['privates', 'doctrine_migrations.status_command', 'getDoctrineMigrations_StatusCommandService', true],
            'doctrine_migrations.sync_metadata_command' => ['privates', 'doctrine_migrations.sync_metadata_command', 'getDoctrineMigrations_SyncMetadataCommandService', true],
            'doctrine_migrations.up_to_date_command' => ['privates', 'doctrine_migrations.up_to_date_command', 'getDoctrineMigrations_UpToDateCommandService', true],
            'doctrine_migrations.version_command' => ['privates', 'doctrine_migrations.version_command', 'getDoctrineMigrations_VersionCommandService', true],
            'doctrine_migrations.versions_command' => ['privates', 'doctrine_migrations.versions_command', 'getDoctrineMigrations_VersionsCommandService', true],
            'error_handler.error_renderer.html' => ['privates', 'error_handler.error_renderer.html', 'getErrorHandler_ErrorRenderer_HtmlService', true],
            'error_handler.error_renderer.serializer' => ['privates', 'error_handler.error_renderer.serializer', 'getErrorHandler_ErrorRenderer_SerializerService', true],
            'error_renderer' => ['privates', 'error_handler.error_renderer.serializer', 'getErrorHandler_ErrorRenderer_SerializerService', true],
            'error_renderer.html' => ['privates', 'twig.error_renderer.html', 'getTwig_ErrorRenderer_HtmlService', true],
            'error_renderer.serializer' => ['privates', 'error_handler.error_renderer.serializer', 'getErrorHandler_ErrorRenderer_SerializerService', true],
            'esi' => ['privates', 'esi', 'getEsiService', false],
            'esi_listener' => ['privates', 'esi_listener', 'getEsiListenerService', false],
            'exception_listener' => ['privates', 'exception_listener', 'getExceptionListenerService', false],
            'file_locator' => ['privates', 'file_locator', 'getFileLocatorService', true],
            'form.choice_list_factory' => ['privates', 'form.choice_list_factory.cached', 'getForm_ChoiceListFactory_CachedService', true],
            'form.choice_list_factory.cached' => ['privates', 'form.choice_list_factory.cached', 'getForm_ChoiceListFactory_CachedService', true],
            'form.choice_list_factory.default' => ['privates', 'form.choice_list_factory.default', 'getForm_ChoiceListFactory_DefaultService', true],
            'form.choice_list_factory.property_access' => ['privates', 'form.choice_list_factory.property_access', 'getForm_ChoiceListFactory_PropertyAccessService', true],
            'form.extension' => ['privates', 'form.extension', 'getForm_ExtensionService', true],
            'form.property_accessor' => ['privates', 'property_accessor', 'getPropertyAccessorService', true],
            'form.registry' => ['privates', 'form.registry', 'getForm_RegistryService', true],
            'form.resolved_type_factory' => ['privates', 'form.resolved_type_factory', 'getForm_ResolvedTypeFactoryService', true],
            'form.server_params' => ['privates', 'form.server_params', 'getForm_ServerParamsService', true],
            'form.type.choice' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'form.type.color' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'form.type.entity' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', true],
            'form.type.form' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
            'form.type_extension.csrf' => ['privates', 'form.type_extension.csrf', 'getForm_TypeExtension_CsrfService', true],
            'form.type_extension.form.data_collector' => ['privates', 'form.type_extension.form.data_collector', 'getForm_TypeExtension_Form_DataCollectorService', true],
            'form.type_extension.form.http_foundation' => ['privates', 'form.type_extension.form.http_foundation', 'getForm_TypeExtension_Form_HttpFoundationService', true],
            'form.type_extension.form.request_handler' => ['privates', 'form.type_extension.form.request_handler', 'getForm_TypeExtension_Form_RequestHandlerService', true],
            'form.type_extension.form.transformation_failure_handling' => ['privates', 'form.type_extension.form.transformation_failure_handling', 'getForm_TypeExtension_Form_TransformationFailureHandlingService', true],
            'form.type_extension.form.validator' => ['privates', 'form.type_extension.form.validator', 'getForm_TypeExtension_Form_ValidatorService', true],
            'form.type_extension.repeated.validator' => ['privates', 'form.type_extension.repeated.validator', 'getForm_TypeExtension_Repeated_ValidatorService', true],
            'form.type_extension.submit.validator' => ['privates', 'form.type_extension.submit.validator', 'getForm_TypeExtension_Submit_ValidatorService', true],
            'form.type_extension.upload.validator' => ['privates', 'form.type_extension.upload.validator', 'getForm_TypeExtension_Upload_ValidatorService', true],
            'form.type_guesser.doctrine' => ['privates', 'form.type_guesser.doctrine', 'getForm_TypeGuesser_DoctrineService', true],
            'form.type_guesser.validator' => ['privates', 'form.type_guesser.validator', 'getForm_TypeGuesser_ValidatorService', true],
            'fragment.handler' => ['privates', 'fragment.handler', 'getFragment_HandlerService', true],
            'fragment.listener' => ['privates', 'fragment.listener', 'getFragment_ListenerService', false],
            'fragment.renderer.esi' => ['privates', 'fragment.renderer.esi', 'getFragment_Renderer_EsiService', true],
            'fragment.renderer.hinclude' => ['privates', 'fragment.renderer.hinclude', 'getFragment_Renderer_HincludeService', true],
            'fragment.renderer.inline' => ['privates', 'fragment.renderer.inline', 'getFragment_Renderer_InlineService', true],
            'framework_extra_bundle.argument_name_convertor' => ['privates', 'framework_extra_bundle.argument_name_convertor', 'getFrameworkExtraBundle_ArgumentNameConvertorService', false],
            'framework_extra_bundle.date_time_param_converter' => ['privates', 'framework_extra_bundle.date_time_param_converter', 'getFrameworkExtraBundle_DateTimeParamConverterService', false],
            'framework_extra_bundle.event.is_granted' => ['privates', 'framework_extra_bundle.event.is_granted', 'getFrameworkExtraBundle_Event_IsGrantedService', false],
            'identity_translator' => ['privates', 'identity_translator', 'getIdentityTranslatorService', false],
            'jms_serializer.accessor_strategy' => ['privates', 'jms_serializer.accessor_strategy.default', 'getJmsSerializer_AccessorStrategy_DefaultService', true],
            'jms_serializer.accessor_strategy.default' => ['privates', 'jms_serializer.accessor_strategy.default', 'getJmsSerializer_AccessorStrategy_DefaultService', true],
            'jms_serializer.array_collection_handler' => ['privates', 'jms_serializer.array_collection_handler', 'getJmsSerializer_ArrayCollectionHandlerService', true],
            'jms_serializer.camel_case_naming_strategy' => ['privates', 'jms_serializer.camel_case_naming_strategy', 'getJmsSerializer_CamelCaseNamingStrategyService', true],
            'jms_serializer.configured_deserialization_context_factory' => ['services', 'jms_serializer.deserialization_context_factory', 'getJmsSerializer_DeserializationContextFactoryService', true],
            'jms_serializer.configured_serialization_context_factory' => ['services', 'jms_serializer.serialization_context_factory', 'getJmsSerializer_SerializationContextFactoryService', true],
            'jms_serializer.constraint_violation_handler' => ['privates', 'jms_serializer.constraint_violation_handler', 'getJmsSerializer_ConstraintViolationHandlerService', true],
            'jms_serializer.datetime_handler' => ['privates', 'jms_serializer.datetime_handler', 'getJmsSerializer_DatetimeHandlerService', true],
            'jms_serializer.deserialization_graph_navigator_factory' => ['privates', 'jms_serializer.deserialization_graph_navigator_factory', 'getJmsSerializer_DeserializationGraphNavigatorFactoryService', true],
            'jms_serializer.doctrine_object_constructor' => ['privates', 'jms_serializer.doctrine_object_constructor', 'getJmsSerializer_DoctrineObjectConstructorService', true],
            'jms_serializer.doctrine_object_constructor.inner' => ['privates', 'jms_serializer.unserialize_object_constructor', 'getJmsSerializer_UnserializeObjectConstructorService', true],
            'jms_serializer.doctrine_proxy_subscriber' => ['privates', 'jms_serializer.doctrine_proxy_subscriber', 'getJmsSerializer_DoctrineProxySubscriberService', true],
            'jms_serializer.event_dispatcher' => ['privates', 'jms_serializer.event_dispatcher', 'getJmsSerializer_EventDispatcherService', true],
            'jms_serializer.expression_evaluator' => ['privates', 'jms_serializer.expression_evaluator', 'getJmsSerializer_ExpressionEvaluatorService', true],
            'jms_serializer.expression_language' => ['privates', 'jms_serializer.expression_language', 'getJmsSerializer_ExpressionLanguageService', true],
            'jms_serializer.expression_language.function_provider' => ['privates', 'jms_serializer.expression_language.function_provider', 'getJmsSerializer_ExpressionLanguage_FunctionProviderService', true],
            'jms_serializer.form_error_handler' => ['privates', 'jms_serializer.form_error_handler', 'getJmsSerializer_FormErrorHandlerService', true],
            'jms_serializer.handler_registry' => ['privates', 'jms_serializer.handler_registry', 'getJmsSerializer_HandlerRegistryService', true],
            'jms_serializer.iterator_handler' => ['privates', 'jms_serializer.iterator_handler', 'getJmsSerializer_IteratorHandlerService', true],
            'jms_serializer.json_deserialization_visitor' => ['privates', 'jms_serializer.json_deserialization_visitor', 'getJmsSerializer_JsonDeserializationVisitorService', true],
            'jms_serializer.json_serialization_visitor' => ['privates', 'jms_serializer.json_serialization_visitor', 'getJmsSerializer_JsonSerializationVisitorService', true],
            'jms_serializer.metadata.annotation_driver' => ['privates', 'jms_serializer.metadata.annotation_driver', 'getJmsSerializer_Metadata_AnnotationDriverService', true],
            'jms_serializer.metadata.cache' => ['privates', 'jms_serializer.metadata.cache.file_cache', 'getJmsSerializer_Metadata_Cache_FileCacheService', true],
            'jms_serializer.metadata.cache.file_cache' => ['privates', 'jms_serializer.metadata.cache.file_cache', 'getJmsSerializer_Metadata_Cache_FileCacheService', true],
            'jms_serializer.metadata.chain_driver' => ['privates', 'jms_serializer.metadata.chain_driver', 'getJmsSerializer_Metadata_ChainDriverService', true],
            'jms_serializer.metadata.doctrine_type_driver' => ['privates', 'jms_serializer.metadata.doctrine_type_driver', 'getJmsSerializer_Metadata_DoctrineTypeDriverService', true],
            'jms_serializer.metadata.doctrine_type_driver.inner' => ['privates', 'jms_serializer.metadata.chain_driver', 'getJmsSerializer_Metadata_ChainDriverService', true],
            'jms_serializer.metadata.file_locator' => ['privates', 'jms_serializer.metadata.file_locator', 'getJmsSerializer_Metadata_FileLocatorService', true],
            'jms_serializer.metadata.lazy_loading_driver' => ['privates', 'jms_serializer.metadata.lazy_loading_driver', 'getJmsSerializer_Metadata_LazyLoadingDriverService', true],
            'jms_serializer.metadata.service_locator' => ['privates', 'jms_serializer.metadata.service_locator', 'getJmsSerializer_Metadata_ServiceLocatorService', true],
            'jms_serializer.metadata.typed_properties_driver' => ['services', 'jms_serializer.metadata_driver', 'getJmsSerializer_MetadataDriverService', true],
            'jms_serializer.metadata.typed_properties_driver.inner' => ['privates', 'jms_serializer.metadata.doctrine_type_driver', 'getJmsSerializer_Metadata_DoctrineTypeDriverService', true],
            'jms_serializer.metadata.xml_driver' => ['privates', 'jms_serializer.metadata.xml_driver', 'getJmsSerializer_Metadata_XmlDriverService', true],
            'jms_serializer.metadata.yaml_driver' => ['privates', 'jms_serializer.metadata.yaml_driver', 'getJmsSerializer_Metadata_YamlDriverService', true],
            'jms_serializer.metadata_factory' => ['privates', 'jms_serializer.metadata_factory', 'getJmsSerializer_MetadataFactoryService', true],
            'jms_serializer.naming_strategy' => ['privates', 'jms_serializer.serialized_name_annotation_strategy', 'getJmsSerializer_SerializedNameAnnotationStrategyService', true],
            'jms_serializer.object_constructor' => ['privates', 'jms_serializer.doctrine_object_constructor', 'getJmsSerializer_DoctrineObjectConstructorService', true],
            'jms_serializer.serialization_graph_navigator_factory' => ['privates', 'jms_serializer.serialization_graph_navigator_factory', 'getJmsSerializer_SerializationGraphNavigatorFactoryService', true],
            'jms_serializer.serialized_name_annotation_strategy' => ['privates', 'jms_serializer.serialized_name_annotation_strategy', 'getJmsSerializer_SerializedNameAnnotationStrategyService', true],
            'jms_serializer.serializer' => ['services', 'jms_serializer', 'getJmsSerializerService', true],
            'jms_serializer.stopwatch_subscriber' => ['privates', 'jms_serializer.stopwatch_subscriber', 'getJmsSerializer_StopwatchSubscriberService', true],
            'jms_serializer.twig_extension.serializer' => ['privates', 'jms_serializer.twig_extension.serializer', 'getJmsSerializer_TwigExtension_SerializerService', false],
            'jms_serializer.type_parser' => ['privates', 'jms_serializer.type_parser', 'getJmsSerializer_TypeParserService', true],
            'jms_serializer.unserialize_object_constructor' => ['privates', 'jms_serializer.unserialize_object_constructor', 'getJmsSerializer_UnserializeObjectConstructorService', true],
            'jms_serializer.xml_deserialization_visitor' => ['privates', 'jms_serializer.xml_deserialization_visitor', 'getJmsSerializer_XmlDeserializationVisitorService', true],
            'jms_serializer.xml_serialization_visitor' => ['privates', 'jms_serializer.xml_serialization_visitor', 'getJmsSerializer_XmlSerializationVisitorService', true],
            'locale_aware_listener' => ['privates', 'locale_aware_listener', 'getLocaleAwareListenerService', false],
            'locale_listener' => ['privates', 'locale_listener', 'getLocaleListenerService', false],
            'logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
            'maker.auto_command.make_auth' => ['privates', 'maker.auto_command.make_auth', 'getMaker_AutoCommand_MakeAuthService', true],
            'maker.auto_command.make_command' => ['privates', 'maker.auto_command.make_command', 'getMaker_AutoCommand_MakeCommandService', true],
            'maker.auto_command.make_controller' => ['privates', 'maker.auto_command.make_controller', 'getMaker_AutoCommand_MakeControllerService', true],
            'maker.auto_command.make_crud' => ['privates', 'maker.auto_command.make_crud', 'getMaker_AutoCommand_MakeCrudService', true],
            'maker.auto_command.make_docker_database' => ['privates', 'maker.auto_command.make_docker_database', 'getMaker_AutoCommand_MakeDockerDatabaseService', true],
            'maker.auto_command.make_entity' => ['privates', 'maker.auto_command.make_entity', 'getMaker_AutoCommand_MakeEntityService', true],
            'maker.auto_command.make_fixtures' => ['privates', 'maker.auto_command.make_fixtures', 'getMaker_AutoCommand_MakeFixturesService', true],
            'maker.auto_command.make_form' => ['privates', 'maker.auto_command.make_form', 'getMaker_AutoCommand_MakeFormService', true],
            'maker.auto_command.make_functional_test' => ['privates', 'maker.auto_command.make_functional_test', 'getMaker_AutoCommand_MakeFunctionalTestService', true],
            'maker.auto_command.make_message' => ['privates', 'maker.auto_command.make_message', 'getMaker_AutoCommand_MakeMessageService', true],
            'maker.auto_command.make_messenger_middleware' => ['privates', 'maker.auto_command.make_messenger_middleware', 'getMaker_AutoCommand_MakeMessengerMiddlewareService', true],
            'maker.auto_command.make_migration' => ['privates', 'maker.auto_command.make_migration', 'getMaker_AutoCommand_MakeMigrationService', true],
            'maker.auto_command.make_registration_form' => ['privates', 'maker.auto_command.make_registration_form', 'getMaker_AutoCommand_MakeRegistrationFormService', true],
            'maker.auto_command.make_reset_password' => ['privates', 'maker.auto_command.make_reset_password', 'getMaker_AutoCommand_MakeResetPasswordService', true],
            'maker.auto_command.make_serializer_encoder' => ['privates', 'maker.auto_command.make_serializer_encoder', 'getMaker_AutoCommand_MakeSerializerEncoderService', true],
            'maker.auto_command.make_serializer_normalizer' => ['privates', 'maker.auto_command.make_serializer_normalizer', 'getMaker_AutoCommand_MakeSerializerNormalizerService', true],
            'maker.auto_command.make_subscriber' => ['privates', 'maker.auto_command.make_subscriber', 'getMaker_AutoCommand_MakeSubscriberService', true],
            'maker.auto_command.make_twig_extension' => ['privates', 'maker.auto_command.make_twig_extension', 'getMaker_AutoCommand_MakeTwigExtensionService', true],
            'maker.auto_command.make_unit_test' => ['privates', 'maker.auto_command.make_unit_test', 'getMaker_AutoCommand_MakeUnitTestService', true],
            'maker.auto_command.make_user' => ['privates', 'maker.auto_command.make_user', 'getMaker_AutoCommand_MakeUserService', true],
            'maker.auto_command.make_validator' => ['privates', 'maker.auto_command.make_validator', 'getMaker_AutoCommand_MakeValidatorService', true],
            'maker.auto_command.make_voter' => ['privates', 'maker.auto_command.make_voter', 'getMaker_AutoCommand_MakeVoterService', true],
            'maker.autoloader_finder' => ['privates', 'maker.autoloader_finder', 'getMaker_AutoloaderFinderService', true],
            'maker.autoloader_util' => ['privates', 'maker.autoloader_util', 'getMaker_AutoloaderUtilService', true],
            'maker.console_error_listener' => ['privates', 'maker.console_error_listener', 'getMaker_ConsoleErrorListenerService', true],
            'maker.doctrine_helper' => ['privates', 'maker.doctrine_helper', 'getMaker_DoctrineHelperService', true],
            'maker.entity_class_generator' => ['privates', 'maker.entity_class_generator', 'getMaker_EntityClassGeneratorService', true],
            'maker.event_registry' => ['privates', 'maker.event_registry', 'getMaker_EventRegistryService', true],
            'maker.file_link_formatter' => ['privates', 'maker.file_link_formatter', 'getMaker_FileLinkFormatterService', true],
            'maker.file_manager' => ['privates', 'maker.file_manager', 'getMaker_FileManagerService', true],
            'maker.generator' => ['privates', 'maker.generator', 'getMaker_GeneratorService', true],
            'maker.maker.make_authenticator' => ['privates', 'maker.maker.make_authenticator', 'getMaker_Maker_MakeAuthenticatorService', true],
            'maker.maker.make_command' => ['privates', 'maker.maker.make_command', 'getMaker_Maker_MakeCommandService', true],
            'maker.maker.make_controller' => ['privates', 'maker.maker.make_controller', 'getMaker_Maker_MakeControllerService', true],
            'maker.maker.make_crud' => ['privates', 'maker.maker.make_crud', 'getMaker_Maker_MakeCrudService', true],
            'maker.maker.make_docker_database' => ['privates', 'maker.maker.make_docker_database', 'getMaker_Maker_MakeDockerDatabaseService', true],
            'maker.maker.make_entity' => ['privates', 'maker.maker.make_entity', 'getMaker_Maker_MakeEntityService', true],
            'maker.maker.make_fixtures' => ['privates', 'maker.maker.make_fixtures', 'getMaker_Maker_MakeFixturesService', true],
            'maker.maker.make_form' => ['privates', 'maker.maker.make_form', 'getMaker_Maker_MakeFormService', true],
            'maker.maker.make_functional_test' => ['privates', 'maker.maker.make_functional_test', 'getMaker_Maker_MakeFunctionalTestService', true],
            'maker.maker.make_message' => ['privates', 'maker.maker.make_message', 'getMaker_Maker_MakeMessageService', true],
            'maker.maker.make_messenger_middleware' => ['privates', 'maker.maker.make_messenger_middleware', 'getMaker_Maker_MakeMessengerMiddlewareService', true],
            'maker.maker.make_migration' => ['privates', 'maker.maker.make_migration', 'getMaker_Maker_MakeMigrationService', true],
            'maker.maker.make_registration_form' => ['privates', 'maker.maker.make_registration_form', 'getMaker_Maker_MakeRegistrationFormService', true],
            'maker.maker.make_reset_password' => ['privates', 'maker.maker.make_reset_password', 'getMaker_Maker_MakeResetPasswordService', true],
            'maker.maker.make_serializer_encoder' => ['privates', 'maker.maker.make_serializer_encoder', 'getMaker_Maker_MakeSerializerEncoderService', true],
            'maker.maker.make_serializer_normalizer' => ['privates', 'maker.maker.make_serializer_normalizer', 'getMaker_Maker_MakeSerializerNormalizerService', true],
            'maker.maker.make_subscriber' => ['privates', 'maker.maker.make_subscriber', 'getMaker_Maker_MakeSubscriberService', true],
            'maker.maker.make_twig_extension' => ['privates', 'maker.maker.make_twig_extension', 'getMaker_Maker_MakeTwigExtensionService', true],
            'maker.maker.make_unit_test' => ['privates', 'maker.maker.make_unit_test', 'getMaker_Maker_MakeUnitTestService', true],
            'maker.maker.make_user' => ['privates', 'maker.maker.make_user', 'getMaker_Maker_MakeUserService', true],
            'maker.maker.make_validator' => ['privates', 'maker.maker.make_validator', 'getMaker_Maker_MakeValidatorService', true],
            'maker.maker.make_voter' => ['privates', 'maker.maker.make_voter', 'getMaker_Maker_MakeVoterService', true],
            'maker.renderer.form_type_renderer' => ['privates', 'maker.renderer.form_type_renderer', 'getMaker_Renderer_FormTypeRendererService', true],
            'maker.security_config_updater' => ['privates', 'maker.security_config_updater', 'getMaker_SecurityConfigUpdaterService', true],
            'maker.user_class_builder' => ['privates', 'maker.user_class_builder', 'getMaker_UserClassBuilderService', true],
            'mime_types' => ['privates', 'mime_types', 'getMimeTypesService', true],
            'monolog.command.server_log' => ['privates', 'monolog.command.server_log', 'getMonolog_Command_ServerLogService', true],
            'monolog.handler.console' => ['privates', 'monolog.handler.console', 'getMonolog_Handler_ConsoleService', false],
            'monolog.handler.main' => ['privates', 'monolog.handler.main', 'getMonolog_Handler_MainService', false],
            'monolog.handler.null_internal' => ['privates', 'monolog.handler.null_internal', 'getMonolog_Handler_NullInternalService', false],
            'monolog.logger' => ['privates', 'monolog.logger', 'getMonolog_LoggerService', false],
            'monolog.logger.cache' => ['privates', 'monolog.logger.cache', 'getMonolog_Logger_CacheService', false],
            'monolog.logger.console' => ['privates', 'monolog.logger.console', 'getMonolog_Logger_ConsoleService', true],
            'monolog.logger.debug' => ['privates', 'monolog.logger.debug', 'getMonolog_Logger_DebugService', true],
            'monolog.logger.doctrine' => ['privates', 'monolog.logger.doctrine', 'getMonolog_Logger_DoctrineService', false],
            'monolog.logger.event' => ['privates', 'monolog.logger.event', 'getMonolog_Logger_EventService', false],
            'monolog.logger.php' => ['privates', 'monolog.logger.php', 'getMonolog_Logger_PhpService', false],
            'monolog.logger.profiler' => ['privates', 'monolog.logger.profiler', 'getMonolog_Logger_ProfilerService', false],
            'monolog.logger.request' => ['privates', 'monolog.logger.request', 'getMonolog_Logger_RequestService', false],
            'monolog.logger.router' => ['privates', 'monolog.logger.router', 'getMonolog_Logger_RouterService', false],
            'monolog.logger.security' => ['privates', 'monolog.logger.security', 'getMonolog_Logger_SecurityService', true],
            'monolog.processor.psr_log_message' => ['privates', 'monolog.processor.psr_log_message', 'getMonolog_Processor_PsrLogMessageService', false],
            'nelmio_cors.cacheable_response_vary_listener' => ['privates', 'nelmio_cors.cacheable_response_vary_listener', 'getNelmioCors_CacheableResponseVaryListenerService', false],
            'nelmio_cors.cors_listener' => ['privates', 'nelmio_cors.cors_listener', 'getNelmioCors_CorsListenerService', false],
            'nelmio_cors.options_provider.config' => ['privates', 'nelmio_cors.options_provider.config', 'getNelmioCors_OptionsProvider_ConfigService', false],
            'nelmio_cors.options_resolver' => ['privates', 'nelmio_cors.options_resolver', 'getNelmioCors_OptionsResolverService', false],
            'nelmio_security.clickjacking_listener' => ['privates', 'nelmio_security.clickjacking_listener', 'getNelmioSecurity_ClickjackingListenerService', false],
            'nelmio_security.content_type_listener' => ['privates', 'nelmio_security.content_type_listener', 'getNelmioSecurity_ContentTypeListenerService', false],
            'nelmio_security.csp_listener' => ['privates', 'nelmio_security.csp_listener', 'getNelmioSecurity_CspListenerService', false],
            'nelmio_security.csp_report.filter' => ['privates', 'nelmio_security.csp_report.filter', 'getNelmioSecurity_CspReport_FilterService', true],
            'nelmio_security.csp_report.filter.noise_detector_browser_bugs' => ['privates', 'nelmio_security.csp_report.filter.noise_detector_browser_bugs', 'getNelmioSecurity_CspReport_Filter_NoiseDetectorBrowserBugsService', true],
            'nelmio_security.csp_report.filter.noise_detector_domains' => ['privates', 'nelmio_security.csp_report.filter.noise_detector_domains', 'getNelmioSecurity_CspReport_Filter_NoiseDetectorDomainsService', true],
            'nelmio_security.csp_report.filter.noise_detector_domains_regex' => ['privates', 'nelmio_security.csp_report.filter.noise_detector_domains_regex', 'getNelmioSecurity_CspReport_Filter_NoiseDetectorDomainsRegexService', true],
            'nelmio_security.csp_report.filter.noise_detector_injected_scripts' => ['privates', 'nelmio_security.csp_report.filter.noise_detector_injected_scripts', 'getNelmioSecurity_CspReport_Filter_NoiseDetectorInjectedScriptsService', true],
            'nelmio_security.csp_report.filter.noise_detector_schemes' => ['privates', 'nelmio_security.csp_report.filter.noise_detector_schemes', 'getNelmioSecurity_CspReport_Filter_NoiseDetectorSchemesService', true],
            'nelmio_security.csp_report.log_formatter' => ['privates', 'nelmio_security.csp_report.log_formatter', 'getNelmioSecurity_CspReport_LogFormatterService', true],
            'nelmio_security.csp_report.logger' => ['privates', 'nelmio_security.csp_report.logger', 'getNelmioSecurity_CspReport_LoggerService', true],
            'nelmio_security.external_redirect.target_validator' => ['privates', 'nelmio_security.external_redirect.target_validator.whitelist', 'getNelmioSecurity_ExternalRedirect_TargetValidator_WhitelistService', false],
            'nelmio_security.external_redirect.target_validator.whitelist' => ['privates', 'nelmio_security.external_redirect.target_validator.whitelist', 'getNelmioSecurity_ExternalRedirect_TargetValidator_WhitelistService', false],
            'nelmio_security.external_redirect_listener' => ['privates', 'nelmio_security.external_redirect_listener', 'getNelmioSecurity_ExternalRedirectListenerService', false],
            'nelmio_security.nonce_generator' => ['privates', 'nelmio_security.nonce_generator', 'getNelmioSecurity_NonceGeneratorService', false],
            'nelmio_security.referrer_policy_listener' => ['privates', 'nelmio_security.referrer_policy_listener', 'getNelmioSecurity_ReferrerPolicyListenerService', false],
            'nelmio_security.sha_computer' => ['privates', 'nelmio_security.sha_computer', 'getNelmioSecurity_ShaComputerService', false],
            'nelmio_security.twig_extension' => ['privates', 'nelmio_security.twig_extension', 'getNelmioSecurity_TwigExtensionService', false],
            'nelmio_security.ua_parser.ua_php.provider' => ['privates', 'nelmio_security.ua_parser.ua_php.provider', 'getNelmioSecurity_UaParser_UaPhp_ProviderService', true],
            'nelmio_security.xss_protection_listener' => ['privates', 'nelmio_security.xss_protection_listener', 'getNelmioSecurity_XssProtectionListenerService', false],
            'parameter_bag' => ['privates', 'parameter_bag', 'getParameterBagService', false],
            'profiler.storage' => ['privates', 'profiler.storage', 'getProfiler_StorageService', false],
            'profiler_listener' => ['privates', 'profiler_listener', 'getProfilerListenerService', false],
            'property_accessor' => ['privates', 'property_accessor', 'getPropertyAccessorService', true],
            'property_info' => ['privates', 'property_info', 'getPropertyInfoService', false],
            'property_info.php_doc_extractor' => ['privates', 'property_info.php_doc_extractor', 'getPropertyInfo_PhpDocExtractorService', true],
            'property_info.reflection_extractor' => ['privates', 'property_info.reflection_extractor', 'getPropertyInfo_ReflectionExtractorService', true],
            'property_info.serializer_extractor' => ['privates', 'property_info.serializer_extractor', 'getPropertyInfo_SerializerExtractorService', true],
            'psysh.shell' => ['privates', 'psysh.shell', 'getPsysh_ShellService', true],
            'qandidate.toggle.collection.factory' => ['services', 'qandidate.toggle.collection', 'getQandidate_Toggle_CollectionService', false],
            'qandidate.toggle.collection.in_memory' => ['services', 'qandidate.toggle.collection.in_memory', 'getQandidate_Toggle_Collection_InMemoryService', false],
            'qandidate.toggle.collection.serializer.in_memory' => ['privates', 'qandidate.toggle.collection.serializer.in_memory', 'getQandidate_Toggle_Collection_Serializer_InMemoryService', false],
            'qandidate.toggle.context' => ['privates', 'qandidate.toggle.context', 'getQandidate_Toggle_ContextService', false],
            'qandidate.toggle.context_factory' => ['services', 'qandidate.toggle.user_context_factory', 'getQandidate_Toggle_UserContextFactoryService', false],
            'qandidate.toggle.data_collector.toggle_collector' => ['privates', 'qandidate.toggle.data_collector.toggle_collector', 'getQandidate_Toggle_DataCollector_ToggleCollectorService', false],
            'qandidate.toggle.toggle.listener' => ['privates', 'qandidate.toggle.toggle.listener', 'getQandidate_Toggle_Toggle_ListenerService', false],
            'qandidate.toggle.twig_extension' => ['privates', 'qandidate.toggle.twig_extension', 'getQandidate_Toggle_TwigExtensionService', false],
            'request.add_request_formats_listener' => ['privates', 'request.add_request_formats_listener', 'getRequest_AddRequestFormatsListenerService', false],
            'response_listener' => ['privates', 'response_listener', 'getResponseListenerService', false],
            'router.cache_warmer' => ['privates', 'router.cache_warmer', 'getRouter_CacheWarmerService', true],
            'router.default' => ['services', 'router', 'getRouterService', false],
            'router.expression_language_provider' => ['privates', 'router.expression_language_provider', 'getRouter_ExpressionLanguageProviderService', false],
            'router.request_context' => ['privates', 'router.request_context', 'getRouter_RequestContextService', false],
            'router_listener' => ['privates', 'router_listener', 'getRouterListenerService', false],
            'routing.loader.annotation' => ['privates', 'routing.loader.annotation', 'getRouting_Loader_AnnotationService', true],
            'routing.loader.annotation.directory' => ['privates', 'routing.loader.annotation.directory', 'getRouting_Loader_Annotation_DirectoryService', true],
            'routing.loader.annotation.file' => ['privates', 'routing.loader.annotation.file', 'getRouting_Loader_Annotation_FileService', true],
            'routing.loader.container' => ['privates', 'routing.loader.container', 'getRouting_Loader_ContainerService', true],
            'routing.loader.directory' => ['privates', 'routing.loader.directory', 'getRouting_Loader_DirectoryService', true],
            'routing.loader.glob' => ['privates', 'routing.loader.glob', 'getRouting_Loader_GlobService', true],
            'routing.loader.php' => ['privates', 'routing.loader.php', 'getRouting_Loader_PhpService', true],
            'routing.loader.xml' => ['privates', 'routing.loader.xml', 'getRouting_Loader_XmlService', true],
            'routing.loader.yml' => ['privates', 'routing.loader.yml', 'getRouting_Loader_YmlService', true],
            'routing.resolver' => ['privates', 'routing.resolver', 'getRouting_ResolverService', true],
            'salt.cache.external_docs' => ['privates', 'salt.cache.external_docs', 'getSalt_Cache_ExternalDocsService', false],
            'secrets.decryption_key' => ['privates', 'secrets.decryption_key', 'getSecrets_DecryptionKeyService', true],
            'secrets.local_vault' => ['privates', 'secrets.local_vault', 'getSecrets_LocalVaultService', true],
            'secrets.vault' => ['privates', 'secrets.vault', 'getSecrets_VaultService', true],
            'security.access.authenticated_voter' => ['privates', 'security.access.authenticated_voter', 'getSecurity_Access_AuthenticatedVoterService', true],
            'security.access.decision_manager' => ['privates', 'debug.security.access.decision_manager', 'getDebug_Security_Access_DecisionManagerService', false],
            'security.access.expression_voter' => ['privates', 'security.access.expression_voter', 'getSecurity_Access_ExpressionVoterService', true],
            'security.access.role_hierarchy_voter' => ['privates', 'security.access.role_hierarchy_voter', 'getSecurity_Access_RoleHierarchyVoterService', true],
            'security.access_listener' => ['privates', 'security.access_listener', 'getSecurity_AccessListenerService', true],
            'security.access_map' => ['privates', 'security.access_map', 'getSecurity_AccessMapService', true],
            'security.authentication.guard_handler' => ['privates', 'security.authentication.guard_handler', 'getSecurity_Authentication_GuardHandlerService', true],
            'security.authentication.listener.anonymous.main' => ['privates', 'security.authentication.listener.anonymous.main', 'getSecurity_Authentication_Listener_Anonymous_MainService', true],
            'security.authentication.listener.guard.main' => ['privates', 'security.authentication.listener.guard.main', 'getSecurity_Authentication_Listener_Guard_MainService', true],
            'security.authentication.manager' => ['privates', 'security.authentication.manager', 'getSecurity_Authentication_ManagerService', false],
            'security.authentication.provider.anonymous.main' => ['privates', 'security.authentication.provider.anonymous.main', 'getSecurity_Authentication_Provider_Anonymous_MainService', true],
            'security.authentication.provider.guard.main' => ['privates', 'security.authentication.provider.guard.main', 'getSecurity_Authentication_Provider_Guard_MainService', true],
            'security.authentication.retry_entry_point' => ['privates', 'security.authentication.retry_entry_point', 'getSecurity_Authentication_RetryEntryPointService', true],
            'security.authentication.session_strategy' => ['privates', 'security.authentication.session_strategy', 'getSecurity_Authentication_SessionStrategyService', true],
            'security.authentication.session_strategy.main' => ['privates', 'security.authentication.session_strategy', 'getSecurity_Authentication_SessionStrategyService', true],
            'security.authentication.trust_resolver' => ['privates', 'security.authentication.trust_resolver', 'getSecurity_Authentication_TrustResolverService', false],
            'security.channel_listener' => ['privates', 'security.channel_listener', 'getSecurity_ChannelListenerService', true],
            'security.command.user_password_encoder' => ['privates', 'security.command.user_password_encoder', 'getSecurity_Command_UserPasswordEncoderService', true],
            'security.context_listener.0' => ['privates', 'security.context_listener.0', 'getSecurity_ContextListener_0Service', true],
            'security.csrf.token_generator' => ['privates', 'security.csrf.token_generator', 'getSecurity_Csrf_TokenGeneratorService', true],
            'security.csrf.token_storage' => ['privates', 'security.csrf.token_storage', 'getSecurity_Csrf_TokenStorageService', true],
            'security.encoder_factory' => ['privates', 'security.encoder_factory.generic', 'getSecurity_EncoderFactory_GenericService', true],
            'security.encoder_factory.generic' => ['privates', 'security.encoder_factory.generic', 'getSecurity_EncoderFactory_GenericService', true],
            'security.event_dispatcher.main' => ['privates', 'security.event_dispatcher.main', 'getSecurity_EventDispatcher_MainService', true],
            'security.exception_listener.main' => ['privates', 'security.exception_listener.main', 'getSecurity_ExceptionListener_MainService', true],
            'security.expression_language' => ['privates', 'security.expression_language', 'getSecurity_ExpressionLanguageService', true],
            'security.firewall' => ['privates', 'debug.security.firewall', 'getDebug_Security_FirewallService', false],
            'security.firewall.map' => ['privates', 'security.firewall.map', 'getSecurity_Firewall_MapService', false],
            'security.firewall.map.config.dev' => ['privates', 'security.firewall.map.config.dev', 'getSecurity_Firewall_Map_Config_DevService', true],
            'security.firewall.map.config.main' => ['privates', 'security.firewall.map.config.main', 'getSecurity_Firewall_Map_Config_MainService', true],
            'security.firewall.map.config.read_api' => ['privates', 'security.firewall.map.config.read_api', 'getSecurity_Firewall_Map_Config_ReadApiService', true],
            'security.firewall.map.config.session_check' => ['privates', 'security.firewall.map.config.session_check', 'getSecurity_Firewall_Map_Config_SessionCheckService', true],
            'security.firewall.map.context.dev' => ['privates', 'security.firewall.map.context.dev', 'getSecurity_Firewall_Map_Context_DevService', true],
            'security.firewall.map.context.main' => ['privates', 'security.firewall.map.context.main', 'getSecurity_Firewall_Map_Context_MainService', true],
            'security.firewall.map.context.read_api' => ['privates', 'security.firewall.map.context.read_api', 'getSecurity_Firewall_Map_Context_ReadApiService', true],
            'security.firewall.map.context.session_check' => ['privates', 'security.firewall.map.context.session_check', 'getSecurity_Firewall_Map_Context_SessionCheckService', true],
            'security.http_utils' => ['privates', 'security.http_utils', 'getSecurity_HttpUtilsService', true],
            'security.logout.listener.csrf_token_clearing' => ['privates', 'security.logout.listener.csrf_token_clearing', 'getSecurity_Logout_Listener_CsrfTokenClearingService', true],
            'security.logout.listener.default.main' => ['privates', 'security.logout.listener.default.main', 'getSecurity_Logout_Listener_Default_MainService', true],
            'security.logout.listener.session.main' => ['privates', 'security.logout.listener.session.main', 'getSecurity_Logout_Listener_Session_MainService', true],
            'security.logout_listener.main' => ['privates', 'security.logout_listener.main', 'getSecurity_LogoutListener_MainService', true],
            'security.logout_url_generator' => ['privates', 'security.logout_url_generator', 'getSecurity_LogoutUrlGeneratorService', false],
            'security.rememberme.response_listener' => ['privates', 'security.rememberme.response_listener', 'getSecurity_Rememberme_ResponseListenerService', false],
            'security.role_hierarchy' => ['privates', 'security.role_hierarchy', 'getSecurity_RoleHierarchyService', false],
            'security.untracked_token_storage' => ['privates', 'security.untracked_token_storage', 'getSecurity_UntrackedTokenStorageService', false],
            'security.user.provider.concrete.in_memory' => ['privates', 'security.user.provider.concrete.in_memory', 'getSecurity_User_Provider_Concrete_InMemoryService', true],
            'security.user.provider.concrete.local_db_provider' => ['privates', 'security.user.provider.concrete.local_db_provider', 'getSecurity_User_Provider_Concrete_LocalDbProviderService', true],
            'security.user_checker.main' => ['privates', 'App\\Security\\UserChecker', 'getUserCheckerService', true],
            'security.user_password_encoder.generic' => ['services', 'security.password_encoder', 'getSecurity_PasswordEncoderService', true],
            'security.user_value_resolver' => ['privates', 'debug.security.user_value_resolver', 'getDebug_Security_UserValueResolverService', true],
            'security.validator.user_password' => ['privates', 'security.validator.user_password', 'getSecurity_Validator_UserPasswordService', true],
            'sensio_framework_extra.cache.listener' => ['privates', 'sensio_framework_extra.cache.listener', 'getSensioFrameworkExtra_Cache_ListenerService', false],
            'sensio_framework_extra.controller.listener' => ['privates', 'sensio_framework_extra.controller.listener', 'getSensioFrameworkExtra_Controller_ListenerService', false],
            'sensio_framework_extra.converter.doctrine.orm' => ['privates', 'sensio_framework_extra.converter.doctrine.orm', 'getSensioFrameworkExtra_Converter_Doctrine_OrmService', false],
            'sensio_framework_extra.converter.doctrine.orm.expression_language' => ['privates', 'sensio_framework_extra.converter.doctrine.orm.expression_language.default', 'getSensioFrameworkExtra_Converter_Doctrine_Orm_ExpressionLanguage_DefaultService', false],
            'sensio_framework_extra.converter.doctrine.orm.expression_language.default' => ['privates', 'sensio_framework_extra.converter.doctrine.orm.expression_language.default', 'getSensioFrameworkExtra_Converter_Doctrine_Orm_ExpressionLanguage_DefaultService', false],
            'sensio_framework_extra.converter.listener' => ['privates', 'sensio_framework_extra.converter.listener', 'getSensioFrameworkExtra_Converter_ListenerService', false],
            'sensio_framework_extra.converter.manager' => ['privates', 'sensio_framework_extra.converter.manager', 'getSensioFrameworkExtra_Converter_ManagerService', false],
            'sensio_framework_extra.security.expression_language' => ['privates', 'sensio_framework_extra.security.expression_language.default', 'getSensioFrameworkExtra_Security_ExpressionLanguage_DefaultService', false],
            'sensio_framework_extra.security.expression_language.default' => ['privates', 'sensio_framework_extra.security.expression_language.default', 'getSensioFrameworkExtra_Security_ExpressionLanguage_DefaultService', false],
            'sensio_framework_extra.security.listener' => ['privates', 'sensio_framework_extra.security.listener', 'getSensioFrameworkExtra_Security_ListenerService', false],
            'sensio_framework_extra.view.guesser' => ['privates', 'sensio_framework_extra.view.guesser', 'getSensioFrameworkExtra_View_GuesserService', false],
            'sensio_framework_extra.view.listener' => ['privates', 'sensio_framework_extra.view.listener', 'getSensioFrameworkExtra_View_ListenerService', false],
            'serializer.denormalizer.array' => ['privates', 'serializer.denormalizer.array', 'getSerializer_Denormalizer_ArrayService', true],
            'serializer.denormalizer.unwrapping' => ['privates', 'serializer.denormalizer.unwrapping', 'getSerializer_Denormalizer_UnwrappingService', true],
            'serializer.encoder.csv' => ['privates', 'serializer.encoder.csv', 'getSerializer_Encoder_CsvService', true],
            'serializer.encoder.json' => ['privates', 'serializer.encoder.json', 'getSerializer_Encoder_JsonService', true],
            'serializer.encoder.xml' => ['privates', 'serializer.encoder.xml', 'getSerializer_Encoder_XmlService', true],
            'serializer.encoder.yaml' => ['privates', 'serializer.encoder.yaml', 'getSerializer_Encoder_YamlService', true],
            'serializer.mapping.cache.symfony' => ['privates', 'serializer.mapping.cache.symfony', 'getSerializer_Mapping_Cache_SymfonyService', true],
            'serializer.mapping.cache_class_metadata_factory' => ['privates', 'serializer.mapping.cache_class_metadata_factory', 'getSerializer_Mapping_CacheClassMetadataFactoryService', true],
            'serializer.mapping.cache_class_metadata_factory.inner' => ['privates', 'serializer.mapping.cache_class_metadata_factory.inner', 'getSerializer_Mapping_CacheClassMetadataFactory_InnerService', true],
            'serializer.mapping.cache_warmer' => ['privates', 'serializer.mapping.cache_warmer', 'getSerializer_Mapping_CacheWarmerService', true],
            'serializer.mapping.chain_loader' => ['privates', 'serializer.mapping.chain_loader', 'getSerializer_Mapping_ChainLoaderService', true],
            'serializer.mapping.class_discriminator_resolver' => ['privates', 'serializer.mapping.class_discriminator_resolver', 'getSerializer_Mapping_ClassDiscriminatorResolverService', true],
            'serializer.mapping.class_metadata_factory' => ['privates', 'serializer.mapping.cache_class_metadata_factory', 'getSerializer_Mapping_CacheClassMetadataFactoryService', true],
            'serializer.name_converter.metadata_aware' => ['privates', 'serializer.name_converter.metadata_aware', 'getSerializer_NameConverter_MetadataAwareService', true],
            'serializer.normalizer.constraint_violation_list' => ['privates', 'serializer.normalizer.constraint_violation_list', 'getSerializer_Normalizer_ConstraintViolationListService', true],
            'serializer.normalizer.data_uri' => ['privates', 'serializer.normalizer.data_uri', 'getSerializer_Normalizer_DataUriService', true],
            'serializer.normalizer.dateinterval' => ['privates', 'serializer.normalizer.dateinterval', 'getSerializer_Normalizer_DateintervalService', true],
            'serializer.normalizer.datetime' => ['privates', 'serializer.normalizer.datetime', 'getSerializer_Normalizer_DatetimeService', true],
            'serializer.normalizer.datetimezone' => ['privates', 'serializer.normalizer.datetimezone', 'getSerializer_Normalizer_DatetimezoneService', true],
            'serializer.normalizer.json_serializable' => ['privates', 'serializer.normalizer.json_serializable', 'getSerializer_Normalizer_JsonSerializableService', true],
            'serializer.normalizer.object' => ['privates', 'serializer.normalizer.object', 'getSerializer_Normalizer_ObjectService', true],
            'serializer.normalizer.problem' => ['privates', 'serializer.normalizer.problem', 'getSerializer_Normalizer_ProblemService', true],
            'serializer.property_accessor' => ['privates', 'property_accessor', 'getPropertyAccessorService', true],
            'session.handler' => ['privates', 'session.handler.pdo', 'getSession_Handler_PdoService', true],
            'session.handler.pdo' => ['privates', 'session.handler.pdo', 'getSession_Handler_PdoService', true],
            'session.storage' => ['privates', 'session.storage.native', 'getSession_Storage_NativeService', true],
            'session.storage.metadata_bag' => ['privates', 'session.storage.metadata_bag', 'getSession_Storage_MetadataBagService', true],
            'session.storage.native' => ['privates', 'session.storage.native', 'getSession_Storage_NativeService', true],
            'session_listener' => ['privates', 'session_listener', 'getSessionListenerService', false],
            'simplethings_entityaudit.create_schema_listener' => ['privates', 'simplethings_entityaudit.create_schema_listener', 'getSimplethingsEntityaudit_CreateSchemaListenerService', false],
            'simplethings_entityaudit.log_revisions_listener' => ['privates', 'simplethings_entityaudit.log_revisions_listener', 'getSimplethingsEntityaudit_LogRevisionsListenerService', false],
            'simplethings_entityaudit.username_callable' => ['privates', 'simplethings_entityaudit.username_callable.token_storage', 'getSimplethingsEntityaudit_UsernameCallable_TokenStorageService', false],
            'simplethings_entityaudit.username_callable.token_storage' => ['privates', 'simplethings_entityaudit.username_callable.token_storage', 'getSimplethingsEntityaudit_UsernameCallable_TokenStorageService', false],
            'slugger' => ['privates', 'slugger', 'getSluggerService', true],
            'stof_doctrine_extensions.listener.timestampable' => ['privates', 'stof_doctrine_extensions.listener.timestampable', 'getStofDoctrineExtensions_Listener_TimestampableService', false],
            'stof_doctrine_extensions.listener.tree' => ['privates', 'stof_doctrine_extensions.listener.tree', 'getStofDoctrineExtensions_Listener_TreeService', false],
            'streamed_response_listener' => ['privates', 'streamed_response_listener', 'getStreamedResponseListenerService', false],
            'swiftmailer.command.debug' => ['privates', 'swiftmailer.command.debug', 'getSwiftmailer_Command_DebugService', true],
            'swiftmailer.command.new_email' => ['privates', 'swiftmailer.command.new_email', 'getSwiftmailer_Command_NewEmailService', true],
            'swiftmailer.command.send_email' => ['privates', 'swiftmailer.command.send_email', 'getSwiftmailer_Command_SendEmailService', true],
            'swiftmailer.data_collector' => ['privates', 'swiftmailer.data_collector', 'getSwiftmailer_DataCollectorService', false],
            'swiftmailer.email_sender.listener' => ['privates', 'swiftmailer.email_sender.listener', 'getSwiftmailer_EmailSender_ListenerService', true],
            'swiftmailer.mailer' => ['services', 'swiftmailer.mailer.default', 'getSwiftmailer_Mailer_DefaultService', true],
            'swiftmailer.mailer.default.spool' => ['privates', 'swiftmailer.mailer.default.spool.memory', 'getSwiftmailer_Mailer_Default_Spool_MemoryService', true],
            'swiftmailer.mailer.default.spool.memory' => ['privates', 'swiftmailer.mailer.default.spool.memory', 'getSwiftmailer_Mailer_Default_Spool_MemoryService', true],
            'swiftmailer.mailer.default.transport' => ['services', 'swiftmailer.transport', 'getSwiftmailer_TransportService', true],
            'swiftmailer.mailer.default.transport.dynamic' => ['services', 'swiftmailer.mailer.default.transport.real', 'getSwiftmailer_Mailer_Default_Transport_RealService', true],
            'swiftmailer.mailer.default.transport.eventdispatcher' => ['privates', 'swiftmailer.mailer.default.transport.eventdispatcher', 'getSwiftmailer_Mailer_Default_Transport_EventdispatcherService', true],
            'swiftmailer.mailer.default.transport.spool' => ['services', 'swiftmailer.transport', 'getSwiftmailer_TransportService', true],
            'swiftmailer.plugin.messagelogger' => ['services', 'swiftmailer.mailer.default.plugin.messagelogger', 'getSwiftmailer_Mailer_Default_Plugin_MessageloggerService', true],
            'swiftmailer.spool' => ['privates', 'swiftmailer.mailer.default.spool.memory', 'getSwiftmailer_Mailer_Default_Spool_MemoryService', true],
            'swiftmailer.transport.real' => ['services', 'swiftmailer.mailer.default.transport.real', 'getSwiftmailer_Mailer_Default_Transport_RealService', true],
            'tetranz_select2entity.select2entity_type' => ['privates', 'tetranz_select2entity.select2entity_type', 'getTetranzSelect2entity_Select2entityTypeService', true],
            'translation.dumper.csv' => ['privates', 'translation.dumper.csv', 'getTranslation_Dumper_CsvService', true],
            'translation.dumper.ini' => ['privates', 'translation.dumper.ini', 'getTranslation_Dumper_IniService', true],
            'translation.dumper.json' => ['privates', 'translation.dumper.json', 'getTranslation_Dumper_JsonService', true],
            'translation.dumper.mo' => ['privates', 'translation.dumper.mo', 'getTranslation_Dumper_MoService', true],
            'translation.dumper.php' => ['privates', 'translation.dumper.php', 'getTranslation_Dumper_PhpService', true],
            'translation.dumper.po' => ['privates', 'translation.dumper.po', 'getTranslation_Dumper_PoService', true],
            'translation.dumper.qt' => ['privates', 'translation.dumper.qt', 'getTranslation_Dumper_QtService', true],
            'translation.dumper.res' => ['privates', 'translation.dumper.res', 'getTranslation_Dumper_ResService', true],
            'translation.dumper.xliff' => ['privates', 'translation.dumper.xliff', 'getTranslation_Dumper_XliffService', true],
            'translation.dumper.yaml' => ['privates', 'translation.dumper.yaml', 'getTranslation_Dumper_YamlService', true],
            'translation.dumper.yml' => ['privates', 'translation.dumper.yml', 'getTranslation_Dumper_YmlService', true],
            'translation.extractor' => ['privates', 'translation.extractor', 'getTranslation_ExtractorService', true],
            'translation.extractor.php' => ['privates', 'translation.extractor.php', 'getTranslation_Extractor_PhpService', true],
            'translation.loader.csv' => ['privates', 'translation.loader.csv', 'getTranslation_Loader_CsvService', true],
            'translation.loader.dat' => ['privates', 'translation.loader.dat', 'getTranslation_Loader_DatService', true],
            'translation.loader.ini' => ['privates', 'translation.loader.ini', 'getTranslation_Loader_IniService', true],
            'translation.loader.json' => ['privates', 'translation.loader.json', 'getTranslation_Loader_JsonService', true],
            'translation.loader.mo' => ['privates', 'translation.loader.mo', 'getTranslation_Loader_MoService', true],
            'translation.loader.php' => ['privates', 'translation.loader.php', 'getTranslation_Loader_PhpService', true],
            'translation.loader.po' => ['privates', 'translation.loader.po', 'getTranslation_Loader_PoService', true],
            'translation.loader.qt' => ['privates', 'translation.loader.qt', 'getTranslation_Loader_QtService', true],
            'translation.loader.res' => ['privates', 'translation.loader.res', 'getTranslation_Loader_ResService', true],
            'translation.loader.xliff' => ['privates', 'translation.loader.xliff', 'getTranslation_Loader_XliffService', true],
            'translation.loader.yml' => ['privates', 'translation.loader.yml', 'getTranslation_Loader_YmlService', true],
            'translation.reader' => ['privates', 'translation.reader', 'getTranslation_ReaderService', true],
            'translation.warmer' => ['privates', 'translation.warmer', 'getTranslation_WarmerService', true],
            'translation.writer' => ['privates', 'translation.writer', 'getTranslation_WriterService', true],
            'translator.data_collector' => ['services', 'translator', 'getTranslatorService', false],
            'translator.data_collector.inner' => ['privates', 'translator.default', 'getTranslator_DefaultService', false],
            'translator.default' => ['privates', 'translator.default', 'getTranslator_DefaultService', false],
            'translator.formatter' => ['privates', 'translator.formatter.default', 'getTranslator_Formatter_DefaultService', false],
            'translator.formatter.default' => ['privates', 'translator.formatter.default', 'getTranslator_Formatter_DefaultService', false],
            'twig.app_variable' => ['privates', 'twig.app_variable', 'getTwig_AppVariableService', false],
            'twig.command.debug' => ['privates', 'twig.command.debug', 'getTwig_Command_DebugService', true],
            'twig.command.lint' => ['privates', 'twig.command.lint', 'getTwig_Command_LintService', true],
            'twig.configurator.environment' => ['privates', 'twig.configurator.environment', 'getTwig_Configurator_EnvironmentService', false],
            'twig.error_renderer.html' => ['privates', 'twig.error_renderer.html', 'getTwig_ErrorRenderer_HtmlService', true],
            'twig.error_renderer.html.inner' => ['privates', 'error_handler.error_renderer.html', 'getErrorHandler_ErrorRenderer_HtmlService', true],
            'twig.extension.assets' => ['privates', 'twig.extension.assets', 'getTwig_Extension_AssetsService', false],
            'twig.extension.code' => ['privates', 'twig.extension.code', 'getTwig_Extension_CodeService', false],
            'twig.extension.debug.stopwatch' => ['privates', 'twig.extension.debug.stopwatch', 'getTwig_Extension_Debug_StopwatchService', false],
            'twig.extension.dump' => ['privates', 'twig.extension.dump', 'getTwig_Extension_DumpService', false],
            'twig.extension.expression' => ['privates', 'twig.extension.expression', 'getTwig_Extension_ExpressionService', false],
            'twig.extension.form' => ['privates', 'twig.extension.form', 'getTwig_Extension_FormService', false],
            'twig.extension.httpfoundation' => ['privates', 'twig.extension.httpfoundation', 'getTwig_Extension_HttpfoundationService', false],
            'twig.extension.httpkernel' => ['privates', 'twig.extension.httpkernel', 'getTwig_Extension_HttpkernelService', false],
            'twig.extension.logout_url' => ['privates', 'twig.extension.logout_url', 'getTwig_Extension_LogoutUrlService', false],
            'twig.extension.profiler' => ['privates', 'twig.extension.profiler', 'getTwig_Extension_ProfilerService', false],
            'twig.extension.routing' => ['privates', 'twig.extension.routing', 'getTwig_Extension_RoutingService', false],
            'twig.extension.security' => ['privates', 'twig.extension.security', 'getTwig_Extension_SecurityService', false],
            'twig.extension.security_csrf' => ['privates', 'twig.extension.security_csrf', 'getTwig_Extension_SecurityCsrfService', false],
            'twig.extension.trans' => ['privates', 'twig.extension.trans', 'getTwig_Extension_TransService', false],
            'twig.extension.weblink' => ['privates', 'twig.extension.weblink', 'getTwig_Extension_WeblinkService', false],
            'twig.extension.webprofiler' => ['privates', 'twig.extension.webprofiler', 'getTwig_Extension_WebprofilerService', false],
            'twig.extension.yaml' => ['privates', 'twig.extension.yaml', 'getTwig_Extension_YamlService', false],
            'twig.form.engine' => ['privates', 'twig.form.engine', 'getTwig_Form_EngineService', true],
            'twig.form.renderer' => ['privates', 'twig.form.renderer', 'getTwig_Form_RendererService', true],
            'twig.loader' => ['privates', 'twig.loader.native_filesystem', 'getTwig_Loader_NativeFilesystemService', false],
            'twig.loader.filesystem' => ['privates', 'twig.loader.native_filesystem', 'getTwig_Loader_NativeFilesystemService', false],
            'twig.loader.native_filesystem' => ['privates', 'twig.loader.native_filesystem', 'getTwig_Loader_NativeFilesystemService', false],
            'twig.missing_extension_suggestor' => ['privates', 'twig.missing_extension_suggestor', 'getTwig_MissingExtensionSuggestorService', false],
            'twig.profile' => ['privates', 'twig.profile', 'getTwig_ProfileService', false],
            'twig.runtime.httpkernel' => ['privates', 'twig.runtime.httpkernel', 'getTwig_Runtime_HttpkernelService', true],
            'twig.runtime.security_csrf' => ['privates', 'twig.runtime.security_csrf', 'getTwig_Runtime_SecurityCsrfService', true],
            'twig.runtime_loader' => ['privates', 'twig.runtime_loader', 'getTwig_RuntimeLoaderService', false],
            'twig.template_cache_warmer' => ['privates', 'twig.template_cache_warmer', 'getTwig_TemplateCacheWarmerService', true],
            'twig.template_iterator' => ['privates', 'twig.template_iterator', 'getTwig_TemplateIteratorService', true],
            'twig.translation.extractor' => ['privates', 'twig.translation.extractor', 'getTwig_Translation_ExtractorService', true],
            'uri_signer' => ['privates', 'uri_signer', 'getUriSignerService', false],
            'url_helper' => ['privates', 'url_helper', 'getUrlHelperService', false],
            'validate_request_listener' => ['privates', 'validate_request_listener', 'getValidateRequestListenerService', false],
            'validator.builder' => ['privates', 'validator.builder', 'getValidator_BuilderService', false],
            'validator.email' => ['privates', 'validator.email', 'getValidator_EmailService', true],
            'validator.expression' => ['privates', 'validator.expression', 'getValidator_ExpressionService', true],
            'validator.mapping.cache_warmer' => ['privates', 'validator.mapping.cache_warmer', 'getValidator_Mapping_CacheWarmerService', true],
            'validator.mapping.class_metadata_factory' => ['services', 'validator', 'getValidatorService', false],
            'validator.not_compromised_password' => ['privates', 'validator.not_compromised_password', 'getValidator_NotCompromisedPasswordService', true],
            'validator.property_info_loader' => ['privates', 'validator.property_info_loader', 'getValidator_PropertyInfoLoaderService', false],
            'validator.validator_factory' => ['privates', 'validator.validator_factory', 'getValidator_ValidatorFactoryService', false],
            'var_dumper.cli_dumper' => ['privates', 'var_dumper.contextualized_cli_dumper', 'getVarDumper_ContextualizedCliDumperService', true],
            'var_dumper.command.server_dump' => ['privates', 'var_dumper.command.server_dump', 'getVarDumper_Command_ServerDumpService', true],
            'var_dumper.contextualized_cli_dumper' => ['privates', 'var_dumper.contextualized_cli_dumper', 'getVarDumper_ContextualizedCliDumperService', true],
            'var_dumper.contextualized_cli_dumper.inner' => ['privates', 'var_dumper.contextualized_cli_dumper.inner', 'getVarDumper_ContextualizedCliDumper_InnerService', true],
            'var_dumper.dump_server' => ['privates', 'var_dumper.dump_server', 'getVarDumper_DumpServerService', true],
            'var_dumper.html_dumper' => ['privates', 'var_dumper.html_dumper', 'getVarDumper_HtmlDumperService', false],
            'var_dumper.server_connection' => ['privates', 'var_dumper.server_connection', 'getVarDumper_ServerConnectionService', false],
            'web_link.add_link_header_listener' => ['privates', 'web_link.add_link_header_listener', 'getWebLink_AddLinkHeaderListenerService', false],
            'web_profiler.csp.handler' => ['privates', 'web_profiler.csp.handler', 'getWebProfiler_Csp_HandlerService', false],
            'web_profiler.debug_toolbar' => ['privates', 'web_profiler.debug_toolbar', 'getWebProfiler_DebugToolbarService', false],
        ], [
            'App\\Console\\ClearFirebaseNotificationsCommand' => '?',
            'App\\Console\\Framework\\CfpackageDeleteCommand' => '?',
            'App\\Console\\Framework\\CopyDocumentToItemCommand' => '?',
            'App\\Console\\Import\\ImportAsnCommand' => '?',
            'App\\Console\\Import\\ImportCaseJsonCommand' => '?',
            'App\\Console\\Import\\ImportGeneric1Command' => '?',
            'App\\Console\\Mirror\\MirrorFrameworkCommand' => '?',
            'App\\Console\\Mirror\\MirrorJobCommand' => '?',
            'App\\Console\\Mirror\\UpdateListCommand' => '?',
            'App\\Console\\User\\OrgAddCommand' => '?',
            'App\\Console\\User\\UserAddCommand' => '?',
            'App\\Console\\User\\UserAddRoleCommand' => '?',
            'App\\Console\\User\\UserRemoveRoleCommand' => '?',
            'App\\Console\\User\\UserSetPasswordCommand' => '?',
            'App\\DataTransformer\\CaseJson\\AssociationGroupingsTransformer' => '?',
            'App\\DataTransformer\\CaseJson\\AssociationsTransformer' => '?',
            'App\\DataTransformer\\CaseJson\\ConceptsTransformer' => '?',
            'App\\DataTransformer\\CaseJson\\DefinitionsTransformer' => '?',
            'App\\DataTransformer\\CaseJson\\DocumentTransformer' => '?',
            'App\\DataTransformer\\CaseJson\\ItemTypesTransformer' => '?',
            'App\\DataTransformer\\CaseJson\\ItemsTransformer' => '?',
            'App\\DataTransformer\\CaseJson\\LicencesTransformer' => '?',
            'App\\DataTransformer\\CaseJson\\PackageTransformer' => '?',
            'App\\DataTransformer\\CaseJson\\RubricsTransformer' => '?',
            'App\\DataTransformer\\CaseJson\\SubjectsTransformer' => '?',
            'App\\EventListener\\ApiExceptionListener' => '?',
            'App\\EventListener\\CommandEventRouter' => '?',
            'App\\EventListener\\LoginCaptchaListener' => '?',
            'App\\EventListener\\NotificationLoggingListener' => '?',
            'App\\EventListener\\NotificationToFirebaseListener' => '?',
            'App\\EventListener\\SiteVersionListener' => '?',
            'App\\EventListener\\VaryOriginListener' => '?',
            'App\\Form\\Type\\AddAclUserType' => '?',
            'App\\Form\\Type\\AddAclUsernameType' => '?',
            'App\\Form\\Type\\AdditionalFieldType' => '?',
            'App\\Form\\Type\\ChangePasswordType' => '?',
            'App\\Form\\Type\\CustomFieldsType' => '?',
            'App\\Form\\Type\\DatalistType' => '?',
            'App\\Form\\Type\\LsAssociationAjaxType' => '?',
            'App\\Form\\Type\\LsAssociationTreeType' => '?',
            'App\\Form\\Type\\LsAssociationType' => '?',
            'App\\Form\\Type\\LsDefAssociationGroupingType' => '?',
            'App\\Form\\Type\\LsDefConceptType' => '?',
            'App\\Form\\Type\\LsDefGradeType' => '?',
            'App\\Form\\Type\\LsDefItemTypeType' => '?',
            'App\\Form\\Type\\LsDefLicenceType' => '?',
            'App\\Form\\Type\\LsDefSubjectType' => '?',
            'App\\Form\\Type\\LsDocCreateType' => '?',
            'App\\Form\\Type\\LsDocListType' => '?',
            'App\\Form\\Type\\LsDocType' => '?',
            'App\\Form\\Type\\LsItemParentType' => '?',
            'App\\Form\\Type\\LsItemType' => '?',
            'App\\Form\\Type\\MirroredFrameworkDTOType' => '?',
            'App\\Form\\Type\\MirroredServerDTOType' => '?',
            'App\\Form\\Type\\NewFrameworkType' => '?',
            'App\\Form\\Type\\OAuthCredentialDTOType' => '?',
            'App\\Form\\Type\\OrganizationType' => '?',
            'App\\Form\\Type\\RemoteCaseServerType' => '?',
            'App\\Form\\Type\\SignupType' => '?',
            'App\\Form\\Type\\UserType' => '?',
            'App\\Handler\\Comment\\AddCommentHandler' => '?',
            'App\\Handler\\Comment\\DeleteCommentHandler' => '?',
            'App\\Handler\\Comment\\DownvoteCommentHandler' => '?',
            'App\\Handler\\Comment\\UpdateCommentHandler' => '?',
            'App\\Handler\\Comment\\UpvoteCommentHandler' => '?',
            'App\\Handler\\Email\\SendAdminNotificationEmailHandler' => '?',
            'App\\Handler\\Email\\SendSignupReceivedEmailHandler' => '?',
            'App\\Handler\\Email\\SendUserApprovedEmailHandler' => '?',
            'App\\Handler\\Framework\\AddAssociationGroupHandler' => '?',
            'App\\Handler\\Framework\\AddAssociationHandler' => '?',
            'App\\Handler\\Framework\\AddConceptHandler' => '?',
            'App\\Handler\\Framework\\AddDocumentHandler' => '?',
            'App\\Handler\\Framework\\AddExemplarToItemHandler' => '?',
            'App\\Handler\\Framework\\AddExternalDocHandler' => '?',
            'App\\Handler\\Framework\\AddGradeHandler' => '?',
            'App\\Handler\\Framework\\AddItemHandler' => '?',
            'App\\Handler\\Framework\\AddItemTypeHandler' => '?',
            'App\\Handler\\Framework\\AddLicenceHandler' => '?',
            'App\\Handler\\Framework\\AddSubjectHandler' => '?',
            'App\\Handler\\Framework\\AddTreeAssociationHandler' => '?',
            'App\\Handler\\Framework\\ChangeItemParentHandler' => '?',
            'App\\Handler\\Framework\\CloneFrameworkHandler' => '?',
            'App\\Handler\\Framework\\CopyDocumentToItemHandler' => '?',
            'App\\Handler\\Framework\\CopyFrameworkHandler' => '?',
            'App\\Handler\\Framework\\CopyItemToDocHandler' => '?',
            'App\\Handler\\Framework\\DeleteAssociationGroupHandler' => '?',
            'App\\Handler\\Framework\\DeleteAssociationHandler' => '?',
            'App\\Handler\\Framework\\DeleteConceptHandler' => '?',
            'App\\Handler\\Framework\\DeleteDocumentHandler' => '?',
            'App\\Handler\\Framework\\DeleteGradeHandler' => '?',
            'App\\Handler\\Framework\\DeleteItemHandler' => '?',
            'App\\Handler\\Framework\\DeleteItemTypeHandler' => '?',
            'App\\Handler\\Framework\\DeleteItemWithChildrenHandler' => '?',
            'App\\Handler\\Framework\\DeleteLicenceHandler' => '?',
            'App\\Handler\\Framework\\DeleteSubjectHandler' => '?',
            'App\\Handler\\Framework\\DeriveDocumentHandler' => '?',
            'App\\Handler\\Framework\\LockDocumentHandler' => '?',
            'App\\Handler\\Framework\\LockItemHandler' => '?',
            'App\\Handler\\Framework\\RemoveChildHandler' => '?',
            'App\\Handler\\Framework\\UpdateAssociationGroupHandler' => '?',
            'App\\Handler\\Framework\\UpdateAssociationHandler' => '?',
            'App\\Handler\\Framework\\UpdateConceptHandler' => '?',
            'App\\Handler\\Framework\\UpdateDocumentHandler' => '?',
            'App\\Handler\\Framework\\UpdateFrameworkHandler' => '?',
            'App\\Handler\\Framework\\UpdateGradeHandler' => '?',
            'App\\Handler\\Framework\\UpdateItemHandler' => '?',
            'App\\Handler\\Framework\\UpdateItemTypeHandler' => '?',
            'App\\Handler\\Framework\\UpdateLicenceHandler' => '?',
            'App\\Handler\\Framework\\UpdateSubjectHandler' => '?',
            'App\\Handler\\Framework\\UpdateTreeItemsHandler' => '?',
            'App\\Handler\\Import\\ImportAsnFromUrlHandler' => '?',
            'App\\Handler\\Import\\ImportCaseJsonHandler' => '?',
            'App\\Handler\\Import\\ImportExcelFileHandler' => '?',
            'App\\Handler\\Import\\ImportGenericCsvHandler' => '?',
            'App\\Handler\\Import\\MarkImportLogsAsReadHandler' => '?',
            'App\\Handler\\Import\\ParseCsvGithubDocumentHandler' => '?',
            'App\\Handler\\User\\ActivateUserHandler' => '?',
            'App\\Handler\\User\\AddFrameworkUserAclHandler' => '?',
            'App\\Handler\\User\\AddFrameworkUsernameAclHandler' => '?',
            'App\\Handler\\User\\AddOrganizationByNameHandler' => '?',
            'App\\Handler\\User\\AddOrganizationHandler' => '?',
            'App\\Handler\\User\\AddUserByNameHandler' => '?',
            'App\\Handler\\User\\AddUserHandler' => '?',
            'App\\Handler\\User\\AddUserRoleHandler' => '?',
            'App\\Handler\\User\\ChangePasswordHandler' => '?',
            'App\\Handler\\User\\DeleteFrameworkAclHandler' => '?',
            'App\\Handler\\User\\DeleteOrganizationHandler' => '?',
            'App\\Handler\\User\\DeleteUserHandler' => '?',
            'App\\Handler\\User\\RemoveUserRoleHandler' => '?',
            'App\\Handler\\User\\SetUserPasswordHandler' => '?',
            'App\\Handler\\User\\SuspendUserHandler' => '?',
            'App\\Handler\\User\\UpdateOrganizationHandler' => '?',
            'App\\Handler\\User\\UpdateUserHandler' => '?',
            'App\\Repository\\ChangeEntryRepository' => '?',
            'App\\Repository\\CommentRepository' => '?',
            'App\\Repository\\Framework\\AdditionalFieldRepository' => '?',
            'App\\Repository\\Framework\\AssociationSubtypeRepository' => '?',
            'App\\Repository\\Framework\\CfRubricCriterionLevelRepository' => '?',
            'App\\Repository\\Framework\\CfRubricCriterionRepository' => '?',
            'App\\Repository\\Framework\\CfRubricRepository' => '?',
            'App\\Repository\\Framework\\FrameworkTypeRepository' => '?',
            'App\\Repository\\Framework\\LsAssociationRepository' => '?',
            'App\\Repository\\Framework\\LsDefAssociationGroupingRepository' => '?',
            'App\\Repository\\Framework\\LsDefConceptRepository' => '?',
            'App\\Repository\\Framework\\LsDefGradeRepository' => '?',
            'App\\Repository\\Framework\\LsDefItemTypeRepository' => '?',
            'App\\Repository\\Framework\\LsDefLicenceRepository' => '?',
            'App\\Repository\\Framework\\LsDefSubjectRepository' => '?',
            'App\\Repository\\Framework\\LsDocAttributeRepository' => '?',
            'App\\Repository\\Framework\\LsDocRepository' => '?',
            'App\\Repository\\Framework\\LsItemRepository' => '?',
            'App\\Repository\\Framework\\Mirror\\FrameworkRepository' => '?',
            'App\\Repository\\Framework\\Mirror\\LogRepository' => '?',
            'App\\Repository\\Framework\\Mirror\\OAuthCredentialRepository' => '?',
            'App\\Repository\\Framework\\Mirror\\ServerRepository' => '?',
            'App\\Repository\\Framework\\ObjectLockRepository' => '?',
            'App\\Repository\\SessionRepository' => '?',
            'App\\Repository\\User\\OrganizationRepository' => '?',
            'App\\Repository\\User\\UserDocAclRepository' => '?',
            'App\\Repository\\User\\UserRepository' => '?',
            'App\\Security\\LoginFormAuthenticator' => '?',
            'App\\Security\\Session\\SessionIdleHandler' => '?',
            'App\\Security\\UserChecker' => '?',
            'App\\Security\\Voter\\AssociationVoter' => '?',
            'App\\Security\\Voter\\CommentVoter' => '?',
            'App\\Security\\Voter\\FeatureVoter' => '?',
            'App\\Security\\Voter\\FrameworkAccessVoter' => '?',
            'App\\Security\\Voter\\FrameworkManageEditorsVoter' => '?',
            'App\\Security\\Voter\\ItemVoter' => '?',
            'App\\Security\\Voter\\ManageAdditionalFieldVoter' => '?',
            'App\\Security\\Voter\\ManageLogVoter' => '?',
            'App\\Security\\Voter\\ManageMirrorVoter' => '?',
            'App\\Security\\Voter\\ManageOrganizationVoter' => '?',
            'App\\Security\\Voter\\ManageUserVoter' => '?',
            'App\\Service\\AsnImport' => '?',
            'App\\Service\\BucketFactory' => '?',
            'App\\Service\\BucketService' => '?',
            'App\\Service\\CaseImport' => '?',
            'App\\Service\\ExcelExport' => '?',
            'App\\Service\\ExcelImport' => '?',
            'App\\Service\\FirebaseFactory' => '?',
            'App\\Service\\FrameworkService' => '?',
            'App\\Service\\FrameworkUpdater' => '?',
            'App\\Service\\GithubImport' => '?',
            'App\\Service\\IdentifiableObjectHelper' => '?',
            'App\\Service\\MirrorFramework' => '?',
            'App\\Service\\MirrorServer' => '?',
            'App\\Service\\UriGenerator' => '?',
            'App\\Service\\User\\UserManager' => '?',
            'App\\Twig\\Extension\\CaseUriExtension' => '?',
            'App\\Twig\\Extension\\CaseUriRuntime' => '?',
            'App\\Validator\\Constraints\\PasswordFieldValidator' => '?',
            'Doctrine\\Common\\Annotations\\Reader' => '?',
            'Doctrine\\Common\\Persistence\\ManagerRegistry' => '?',
            'Doctrine\\DBAL\\Connection' => '?',
            'Doctrine\\DBAL\\Driver\\Connection' => '?',
            'Doctrine\\ORM\\EntityManagerInterface' => '?',
            'Doctrine\\Persistence\\ManagerRegistry' => '?',
            'GBProd\\UuidNormalizer\\UuidDenormalizer' => '?',
            'GBProd\\UuidNormalizer\\UuidNormalizer' => '?',
            'GuzzleHttp\\Client' => '?',
            'GuzzleHttp\\ClientInterface' => '?',
            'JMS\\Serializer\\ArrayTransformerInterface' => '?',
            'JMS\\Serializer\\ContextFactory\\DeserializationContextFactoryInterface' => '?',
            'JMS\\Serializer\\ContextFactory\\SerializationContextFactoryInterface' => '?',
            'JMS\\Serializer\\SerializerInterface' => '?',
            'Kreait\\Firebase\\Database' => '?',
            'League\\Flysystem\\AdapterInterface' => '?',
            'League\\Flysystem\\Filesystem' => '?',
            'Psr\\Cache\\CacheItemPoolInterface' => '?',
            'Psr\\Container\\ContainerInterface' => '?',
            'Psr\\Container\\ContainerInterface $parameterBag' => '?',
            'Psr\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Psr\\Log\\LoggerInterface' => '?',
            'Psr\\Log\\LoggerInterface $cacheLogger' => '?',
            'Psr\\Log\\LoggerInterface $consoleLogger' => '?',
            'Psr\\Log\\LoggerInterface $debugLogger' => '?',
            'Psr\\Log\\LoggerInterface $doctrineLogger' => '?',
            'Psr\\Log\\LoggerInterface $eventLogger' => '?',
            'Psr\\Log\\LoggerInterface $phpLogger' => '?',
            'Psr\\Log\\LoggerInterface $profilerLogger' => '?',
            'Psr\\Log\\LoggerInterface $requestLogger' => '?',
            'Psr\\Log\\LoggerInterface $routerLogger' => '?',
            'Psr\\Log\\LoggerInterface $securityLogger' => '?',
            'Psy\\Configuration' => '?',
            'Qandidate\\Toggle\\ContextFactory' => '?',
            'Qandidate\\Toggle\\ToggleManager' => '?',
            'SessionHandlerInterface' => '?',
            'SimpleThings\\EntityAudit\\AuditConfiguration' => '?',
            'SimpleThings\\EntityAudit\\AuditReader' => '?',
            'Swift_Mailer' => '?',
            'Swift_Spool' => '?',
            'Swift_Transport' => '?',
            'Symfony\\Bundle\\SwiftmailerBundle\\Command\\DebugCommand' => '?',
            'Symfony\\Bundle\\SwiftmailerBundle\\Command\\NewEmailCommand' => '?',
            'Symfony\\Bundle\\SwiftmailerBundle\\Command\\SendEmailCommand' => '?',
            'Symfony\\Component\\Asset\\PackageInterface $encorePackage' => '?',
            'Symfony\\Component\\Asset\\Packages' => '?',
            'Symfony\\Component\\Cache\\Adapter\\AdapterInterface' => '?',
            'Symfony\\Component\\DependencyInjection\\ContainerInterface' => '?',
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ContainerBagInterface' => '?',
            'Symfony\\Component\\DependencyInjection\\ParameterBag\\ParameterBagInterface' => '?',
            'Symfony\\Component\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Symfony\\Component\\Filesystem\\Filesystem' => '?',
            'Symfony\\Component\\Form\\FormFactoryInterface' => '?',
            'Symfony\\Component\\Form\\FormRegistryInterface' => '?',
            'Symfony\\Component\\Form\\ResolvedFormTypeFactoryInterface' => '?',
            'Symfony\\Component\\HttpFoundation\\RequestStack' => '?',
            'Symfony\\Component\\HttpFoundation\\Session\\SessionInterface' => '?',
            'Symfony\\Component\\HttpFoundation\\Session\\Storage\\SessionStorageInterface' => '?',
            'Symfony\\Component\\HttpFoundation\\UrlHelper' => '?',
            'Symfony\\Component\\HttpKernel\\Config\\FileLocator' => '?',
            'Symfony\\Component\\HttpKernel\\Debug\\FileLinkFormatter' => '?',
            'Symfony\\Component\\HttpKernel\\HttpKernelInterface' => '?',
            'Symfony\\Component\\HttpKernel\\KernelInterface' => '?',
            'Symfony\\Component\\HttpKernel\\UriSigner' => '?',
            'Symfony\\Component\\PropertyAccess\\PropertyAccessorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyAccessExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyDescriptionExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyInfoExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyInitializableExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyListExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyReadInfoExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyTypeExtractorInterface' => '?',
            'Symfony\\Component\\PropertyInfo\\PropertyWriteInfoExtractorInterface' => '?',
            'Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface' => '?',
            'Symfony\\Component\\Routing\\Matcher\\UrlMatcherInterface' => '?',
            'Symfony\\Component\\Routing\\RequestContext' => '?',
            'Symfony\\Component\\Routing\\RequestContextAwareInterface' => '?',
            'Symfony\\Component\\Routing\\RouterInterface' => '?',
            'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationManagerInterface' => '?',
            'Symfony\\Component\\Security\\Core\\Authentication\\Token\\Storage\\TokenStorageInterface' => '?',
            'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManagerInterface' => '?',
            'Symfony\\Component\\Security\\Core\\Authorization\\AuthorizationCheckerInterface' => '?',
            'Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactoryInterface' => '?',
            'Symfony\\Component\\Security\\Core\\Encoder\\UserPasswordEncoderInterface' => '?',
            'Symfony\\Component\\Security\\Core\\Role\\RoleHierarchyInterface' => '?',
            'Symfony\\Component\\Security\\Csrf\\CsrfTokenManagerInterface' => '?',
            'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\TokenGeneratorInterface' => '?',
            'Symfony\\Component\\Security\\Csrf\\TokenStorage\\TokenStorageInterface' => '?',
            'Symfony\\Component\\Security\\Guard\\GuardAuthenticatorHandler' => '?',
            'Symfony\\Component\\Security\\Http\\Authentication\\AuthenticationUtils' => '?',
            'Symfony\\Component\\Security\\Http\\Firewall' => '?',
            'Symfony\\Component\\Security\\Http\\HttpUtils' => '?',
            'Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategyInterface' => '?',
            'Symfony\\Component\\Serializer\\Encoder\\DecoderInterface' => '?',
            'Symfony\\Component\\Serializer\\Encoder\\EncoderInterface' => '?',
            'Symfony\\Component\\Serializer\\Mapping\\ClassDiscriminatorResolverInterface' => '?',
            'Symfony\\Component\\Serializer\\Mapping\\Factory\\ClassMetadataFactoryInterface' => '?',
            'Symfony\\Component\\Serializer\\Normalizer\\DenormalizerInterface' => '?',
            'Symfony\\Component\\Serializer\\Normalizer\\NormalizerInterface' => '?',
            'Symfony\\Component\\Serializer\\Normalizer\\ObjectNormalizer' => '?',
            'Symfony\\Component\\Serializer\\SerializerInterface' => '?',
            'Symfony\\Component\\Stopwatch\\Stopwatch' => '?',
            'Symfony\\Component\\String\\Slugger\\SluggerInterface' => '?',
            'Symfony\\Component\\Translation\\Extractor\\ExtractorInterface' => '?',
            'Symfony\\Component\\Translation\\Reader\\TranslationReaderInterface' => '?',
            'Symfony\\Component\\Translation\\Writer\\TranslationWriterInterface' => '?',
            'Symfony\\Component\\Validator\\Validator\\ValidatorInterface' => '?',
            'Symfony\\Contracts\\Cache\\CacheInterface' => '?',
            'Symfony\\Contracts\\EventDispatcher\\EventDispatcherInterface' => '?',
            'Symfony\\Contracts\\Translation\\TranslatorInterface' => '?',
            'Twig\\Environment' => '?',
            'Twig\\Extensions\\TextExtension' => '?',
            'Twig_Environment' => '?',
            'annotation_reader' => '?',
            'annotations.cache' => '?',
            'annotations.cache_warmer' => '?',
            'annotations.cached_reader' => '?',
            'annotations.dummy_registry' => '?',
            'annotations.reader' => '?',
            'argument_metadata_factory' => '?',
            'argument_resolver' => '?',
            'argument_resolver.controller_locator' => '?',
            'argument_resolver.default' => '?',
            'argument_resolver.not_tagged_controller' => '?',
            'argument_resolver.request' => '?',
            'argument_resolver.request_attribute' => '?',
            'argument_resolver.service' => '?',
            'argument_resolver.session' => '?',
            'argument_resolver.variadic' => '?',
            'assets._default_package' => '?',
            'assets._package_encore' => '?',
            'assets._version__default' => '?',
            'assets._version_encore' => '?',
            'assets.context' => '?',
            'assets.packages' => '?',
            'cache.annotations' => '?',
            'cache.annotations.recorder_inner' => '?',
            'cache.app.recorder_inner' => '?',
            'cache.default_clearer' => '?',
            'cache.default_marshaller' => '?',
            'cache.default_pdo_provider' => '?',
            'cache.doctrine.orm.default.metadata' => '?',
            'cache.doctrine.orm.default.metadata.recorder_inner' => '?',
            'cache.doctrine.orm.default.query' => '?',
            'cache.doctrine.orm.default.query.recorder_inner' => '?',
            'cache.doctrine.orm.default.result' => '?',
            'cache.doctrine.orm.default.result.recorder_inner' => '?',
            'cache.doctrine.orm.default.second_level.region_driver' => '?',
            'cache.doctrine.orm.default.second_level.region_driver.recorder_inner' => '?',
            'cache.property_access' => '?',
            'cache.property_info' => '?',
            'cache.property_info.recorder_inner' => '?',
            'cache.security_expression_language' => '?',
            'cache.security_expression_language.recorder_inner' => '?',
            'cache.serializer' => '?',
            'cache.serializer.recorder_inner' => '?',
            'cache.system.recorder_inner' => '?',
            'cache.validator' => '?',
            'cache.validator.recorder_inner' => '?',
            'cache_pool_clearer.cache_warmer' => '?',
            'config.resource.self_checking_resource_checker' => '?',
            'config_cache_factory' => '?',
            'console.command.about' => '?',
            'console.command.assets_install' => '?',
            'console.command.cache_clear' => '?',
            'console.command.cache_pool_clear' => '?',
            'console.command.cache_pool_delete' => '?',
            'console.command.cache_pool_list' => '?',
            'console.command.cache_pool_prune' => '?',
            'console.command.cache_warmup' => '?',
            'console.command.config_debug' => '?',
            'console.command.config_dump_reference' => '?',
            'console.command.container_debug' => '?',
            'console.command.container_lint' => '?',
            'console.command.debug_autowiring' => '?',
            'console.command.event_dispatcher_debug' => '?',
            'console.command.form_debug' => '?',
            'console.command.router_debug' => '?',
            'console.command.router_match' => '?',
            'console.command.secrets_decrypt_to_local' => '?',
            'console.command.secrets_encrypt_from_local' => '?',
            'console.command.secrets_generate_key' => '?',
            'console.command.secrets_list' => '?',
            'console.command.secrets_remove' => '?',
            'console.command.secrets_set' => '?',
            'console.command.translation_debug' => '?',
            'console.command.translation_update' => '?',
            'console.command.xliff_lint' => '?',
            'console.command.yaml_lint' => '?',
            'console.error_listener' => '?',
            'console.suggest_missing_package_subscriber' => '?',
            'container.env_var_processor' => '?',
            'container.getenv' => '?',
            'controller_resolver' => '?',
            'csa_guzzle.data_collector.guzzle' => '?',
            'csa_guzzle.logger.message_formatter' => '?',
            'csa_guzzle.middleware.history' => '?',
            'csa_guzzle.middleware.logger' => '?',
            'csa_guzzle.middleware.stopwatch' => '?',
            'csa_guzzle.twig.extension' => '?',
            'data_collector.ajax' => '?',
            'data_collector.cache' => '?',
            'data_collector.config' => '?',
            'data_collector.doctrine' => '?',
            'data_collector.events' => '?',
            'data_collector.exception' => '?',
            'data_collector.form' => '?',
            'data_collector.form.extractor' => '?',
            'data_collector.logger' => '?',
            'data_collector.memory' => '?',
            'data_collector.request' => '?',
            'data_collector.router' => '?',
            'data_collector.security' => '?',
            'data_collector.time' => '?',
            'data_collector.translation' => '?',
            'data_collector.twig' => '?',
            'data_collector.validator' => '?',
            'debug.argument_resolver' => '?',
            'debug.argument_resolver.default' => '?',
            'debug.argument_resolver.default.inner' => '?',
            'debug.argument_resolver.inner' => '?',
            'debug.argument_resolver.not_tagged_controller' => '?',
            'debug.argument_resolver.not_tagged_controller.inner' => '?',
            'debug.argument_resolver.request' => '?',
            'debug.argument_resolver.request.inner' => '?',
            'debug.argument_resolver.request_attribute' => '?',
            'debug.argument_resolver.request_attribute.inner' => '?',
            'debug.argument_resolver.service' => '?',
            'debug.argument_resolver.service.inner' => '?',
            'debug.argument_resolver.session' => '?',
            'debug.argument_resolver.session.inner' => '?',
            'debug.argument_resolver.variadic' => '?',
            'debug.argument_resolver.variadic.inner' => '?',
            'debug.controller_resolver' => '?',
            'debug.controller_resolver.inner' => '?',
            'debug.debug_handlers_listener' => '?',
            'debug.dump_listener' => '?',
            'debug.event_dispatcher' => '?',
            'debug.event_dispatcher.inner' => '?',
            'debug.file_link_formatter' => '?',
            'debug.file_link_formatter.url_format' => '?',
            'debug.log_processor' => '?',
            'debug.security.access.decision_manager' => '?',
            'debug.security.access.decision_manager.inner' => '?',
            'debug.security.firewall' => '?',
            'debug.security.user_value_resolver' => '?',
            'debug.security.user_value_resolver.inner' => '?',
            'debug.security.voter.App\\Security\\Voter\\AssociationVoter' => '?',
            'debug.security.voter.App\\Security\\Voter\\CommentVoter' => '?',
            'debug.security.voter.App\\Security\\Voter\\FeatureVoter' => '?',
            'debug.security.voter.App\\Security\\Voter\\FrameworkAccessVoter' => '?',
            'debug.security.voter.App\\Security\\Voter\\FrameworkManageEditorsVoter' => '?',
            'debug.security.voter.App\\Security\\Voter\\ItemVoter' => '?',
            'debug.security.voter.App\\Security\\Voter\\ManageAdditionalFieldVoter' => '?',
            'debug.security.voter.App\\Security\\Voter\\ManageLogVoter' => '?',
            'debug.security.voter.App\\Security\\Voter\\ManageMirrorVoter' => '?',
            'debug.security.voter.App\\Security\\Voter\\ManageOrganizationVoter' => '?',
            'debug.security.voter.App\\Security\\Voter\\ManageUserVoter' => '?',
            'debug.security.voter.security.access.authenticated_voter' => '?',
            'debug.security.voter.security.access.expression_voter' => '?',
            'debug.security.voter.security.access.role_hierarchy_voter' => '?',
            'debug.security.voter.vote_listener' => '?',
            'debug.stopwatch' => '?',
            'debug.validator' => '?',
            'debug.validator.inner' => '?',
            'dependency_injection.config.container_parameters_resource_checker' => '?',
            'disallow_search_engine_index_response_listener' => '?',
            'doctrine.cache_clear_metadata_command' => '?',
            'doctrine.cache_clear_query_cache_command' => '?',
            'doctrine.cache_clear_result_command' => '?',
            'doctrine.cache_collection_region_command' => '?',
            'doctrine.clear_entity_region_command' => '?',
            'doctrine.clear_query_region_command' => '?',
            'doctrine.database_create_command' => '?',
            'doctrine.database_drop_command' => '?',
            'doctrine.database_import_command' => '?',
            'doctrine.dbal.connection_factory' => '?',
            'doctrine.dbal.default_connection.configuration' => '?',
            'doctrine.dbal.default_connection.event_manager' => '?',
            'doctrine.dbal.default_regex_schema_filter' => '?',
            'doctrine.dbal.default_schema_asset_filter_manager' => '?',
            'doctrine.dbal.event_manager' => '?',
            'doctrine.dbal.logger' => '?',
            'doctrine.dbal.logger.chain.default' => '?',
            'doctrine.dbal.logger.profiling.default' => '?',
            'doctrine.dbal.well_known_schema_asset_filter' => '?',
            'doctrine.ensure_production_settings_command' => '?',
            'doctrine.fixtures.loader' => '?',
            'doctrine.fixtures_load_command' => '?',
            'doctrine.mapping_convert_command' => '?',
            'doctrine.mapping_import_command' => '?',
            'doctrine.mapping_info_command' => '?',
            'doctrine.migrations.configuration' => '?',
            'doctrine.migrations.configuration_loader' => '?',
            'doctrine.migrations.dependency_factory' => '?',
            'doctrine.migrations.em_loader' => '?',
            'doctrine.migrations.metadata_storage' => '?',
            'doctrine.migrations.storage.table_storage' => '?',
            'doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata' => '?',
            'doctrine.orm.cache.provider.cache.doctrine.orm.default.query' => '?',
            'doctrine.orm.cache.provider.cache.doctrine.orm.default.result' => '?',
            'doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver' => '?',
            'doctrine.orm.container_repository_factory' => '?',
            'doctrine.orm.default_annotation_metadata_driver' => '?',
            'doctrine.orm.default_configuration' => '?',
            'doctrine.orm.default_entity_listener_resolver' => '?',
            'doctrine.orm.default_entity_manager.event_manager' => '?',
            'doctrine.orm.default_entity_manager.property_info_extractor' => '?',
            'doctrine.orm.default_entity_manager.validator_loader' => '?',
            'doctrine.orm.default_listeners.attach_entity_listeners' => '?',
            'doctrine.orm.default_manager_configurator' => '?',
            'doctrine.orm.default_metadata_cache' => '?',
            'doctrine.orm.default_metadata_driver' => '?',
            'doctrine.orm.default_query_cache' => '?',
            'doctrine.orm.default_result_cache' => '?',
            'doctrine.orm.default_second_level_cache.region_cache_driver' => '?',
            'doctrine.orm.default_second_level_cache.regions_configuration' => '?',
            'doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber' => '?',
            'doctrine.orm.metadata.annotation_reader' => '?',
            'doctrine.orm.naming_strategy.underscore_number_aware' => '?',
            'doctrine.orm.proxy_cache_warmer' => '?',
            'doctrine.orm.quote_strategy.default' => '?',
            'doctrine.orm.validator.unique' => '?',
            'doctrine.orm.validator_initializer' => '?',
            'doctrine.query_dql_command' => '?',
            'doctrine.query_sql_command' => '?',
            'doctrine.schema_create_command' => '?',
            'doctrine.schema_drop_command' => '?',
            'doctrine.schema_update_command' => '?',
            'doctrine.schema_validate_command' => '?',
            'doctrine.twig.doctrine_extension' => '?',
            'doctrine_migrations.current_command' => '?',
            'doctrine_migrations.diff_command' => '?',
            'doctrine_migrations.dump_schema_command' => '?',
            'doctrine_migrations.execute_command' => '?',
            'doctrine_migrations.generate_command' => '?',
            'doctrine_migrations.latest_command' => '?',
            'doctrine_migrations.migrate_command' => '?',
            'doctrine_migrations.rollup_command' => '?',
            'doctrine_migrations.status_command' => '?',
            'doctrine_migrations.sync_metadata_command' => '?',
            'doctrine_migrations.up_to_date_command' => '?',
            'doctrine_migrations.version_command' => '?',
            'doctrine_migrations.versions_command' => '?',
            'error_handler.error_renderer.html' => '?',
            'error_handler.error_renderer.serializer' => '?',
            'error_renderer' => '?',
            'error_renderer.html' => '?',
            'error_renderer.serializer' => '?',
            'esi' => '?',
            'esi_listener' => '?',
            'exception_listener' => '?',
            'file_locator' => '?',
            'form.choice_list_factory' => '?',
            'form.choice_list_factory.cached' => '?',
            'form.choice_list_factory.default' => '?',
            'form.choice_list_factory.property_access' => '?',
            'form.extension' => '?',
            'form.property_accessor' => '?',
            'form.registry' => '?',
            'form.resolved_type_factory' => '?',
            'form.server_params' => '?',
            'form.type.choice' => '?',
            'form.type.color' => '?',
            'form.type.entity' => '?',
            'form.type.form' => '?',
            'form.type_extension.csrf' => '?',
            'form.type_extension.form.data_collector' => '?',
            'form.type_extension.form.http_foundation' => '?',
            'form.type_extension.form.request_handler' => '?',
            'form.type_extension.form.transformation_failure_handling' => '?',
            'form.type_extension.form.validator' => '?',
            'form.type_extension.repeated.validator' => '?',
            'form.type_extension.submit.validator' => '?',
            'form.type_extension.upload.validator' => '?',
            'form.type_guesser.doctrine' => '?',
            'form.type_guesser.validator' => '?',
            'fragment.handler' => '?',
            'fragment.listener' => '?',
            'fragment.renderer.esi' => '?',
            'fragment.renderer.hinclude' => '?',
            'fragment.renderer.inline' => '?',
            'framework_extra_bundle.argument_name_convertor' => '?',
            'framework_extra_bundle.date_time_param_converter' => '?',
            'framework_extra_bundle.event.is_granted' => '?',
            'identity_translator' => '?',
            'jms_serializer.accessor_strategy' => '?',
            'jms_serializer.accessor_strategy.default' => '?',
            'jms_serializer.array_collection_handler' => '?',
            'jms_serializer.camel_case_naming_strategy' => '?',
            'jms_serializer.configured_deserialization_context_factory' => '?',
            'jms_serializer.configured_serialization_context_factory' => '?',
            'jms_serializer.constraint_violation_handler' => '?',
            'jms_serializer.datetime_handler' => '?',
            'jms_serializer.deserialization_graph_navigator_factory' => '?',
            'jms_serializer.doctrine_object_constructor' => '?',
            'jms_serializer.doctrine_object_constructor.inner' => '?',
            'jms_serializer.doctrine_proxy_subscriber' => '?',
            'jms_serializer.event_dispatcher' => '?',
            'jms_serializer.expression_evaluator' => '?',
            'jms_serializer.expression_language' => '?',
            'jms_serializer.expression_language.function_provider' => '?',
            'jms_serializer.form_error_handler' => '?',
            'jms_serializer.handler_registry' => '?',
            'jms_serializer.iterator_handler' => '?',
            'jms_serializer.json_deserialization_visitor' => '?',
            'jms_serializer.json_serialization_visitor' => '?',
            'jms_serializer.metadata.annotation_driver' => '?',
            'jms_serializer.metadata.cache' => '?',
            'jms_serializer.metadata.cache.file_cache' => '?',
            'jms_serializer.metadata.chain_driver' => '?',
            'jms_serializer.metadata.doctrine_type_driver' => '?',
            'jms_serializer.metadata.doctrine_type_driver.inner' => '?',
            'jms_serializer.metadata.file_locator' => '?',
            'jms_serializer.metadata.lazy_loading_driver' => '?',
            'jms_serializer.metadata.service_locator' => '?',
            'jms_serializer.metadata.typed_properties_driver' => '?',
            'jms_serializer.metadata.typed_properties_driver.inner' => '?',
            'jms_serializer.metadata.xml_driver' => '?',
            'jms_serializer.metadata.yaml_driver' => '?',
            'jms_serializer.metadata_factory' => '?',
            'jms_serializer.naming_strategy' => '?',
            'jms_serializer.object_constructor' => '?',
            'jms_serializer.serialization_graph_navigator_factory' => '?',
            'jms_serializer.serialized_name_annotation_strategy' => '?',
            'jms_serializer.serializer' => '?',
            'jms_serializer.stopwatch_subscriber' => '?',
            'jms_serializer.twig_extension.serializer' => '?',
            'jms_serializer.type_parser' => '?',
            'jms_serializer.unserialize_object_constructor' => '?',
            'jms_serializer.xml_deserialization_visitor' => '?',
            'jms_serializer.xml_serialization_visitor' => '?',
            'locale_aware_listener' => '?',
            'locale_listener' => '?',
            'logger' => '?',
            'maker.auto_command.make_auth' => '?',
            'maker.auto_command.make_command' => '?',
            'maker.auto_command.make_controller' => '?',
            'maker.auto_command.make_crud' => '?',
            'maker.auto_command.make_docker_database' => '?',
            'maker.auto_command.make_entity' => '?',
            'maker.auto_command.make_fixtures' => '?',
            'maker.auto_command.make_form' => '?',
            'maker.auto_command.make_functional_test' => '?',
            'maker.auto_command.make_message' => '?',
            'maker.auto_command.make_messenger_middleware' => '?',
            'maker.auto_command.make_migration' => '?',
            'maker.auto_command.make_registration_form' => '?',
            'maker.auto_command.make_reset_password' => '?',
            'maker.auto_command.make_serializer_encoder' => '?',
            'maker.auto_command.make_serializer_normalizer' => '?',
            'maker.auto_command.make_subscriber' => '?',
            'maker.auto_command.make_twig_extension' => '?',
            'maker.auto_command.make_unit_test' => '?',
            'maker.auto_command.make_user' => '?',
            'maker.auto_command.make_validator' => '?',
            'maker.auto_command.make_voter' => '?',
            'maker.autoloader_finder' => '?',
            'maker.autoloader_util' => '?',
            'maker.console_error_listener' => '?',
            'maker.doctrine_helper' => '?',
            'maker.entity_class_generator' => '?',
            'maker.event_registry' => '?',
            'maker.file_link_formatter' => '?',
            'maker.file_manager' => '?',
            'maker.generator' => '?',
            'maker.maker.make_authenticator' => '?',
            'maker.maker.make_command' => '?',
            'maker.maker.make_controller' => '?',
            'maker.maker.make_crud' => '?',
            'maker.maker.make_docker_database' => '?',
            'maker.maker.make_entity' => '?',
            'maker.maker.make_fixtures' => '?',
            'maker.maker.make_form' => '?',
            'maker.maker.make_functional_test' => '?',
            'maker.maker.make_message' => '?',
            'maker.maker.make_messenger_middleware' => '?',
            'maker.maker.make_migration' => '?',
            'maker.maker.make_registration_form' => '?',
            'maker.maker.make_reset_password' => '?',
            'maker.maker.make_serializer_encoder' => '?',
            'maker.maker.make_serializer_normalizer' => '?',
            'maker.maker.make_subscriber' => '?',
            'maker.maker.make_twig_extension' => '?',
            'maker.maker.make_unit_test' => '?',
            'maker.maker.make_user' => '?',
            'maker.maker.make_validator' => '?',
            'maker.maker.make_voter' => '?',
            'maker.renderer.form_type_renderer' => '?',
            'maker.security_config_updater' => '?',
            'maker.user_class_builder' => '?',
            'mime_types' => '?',
            'monolog.command.server_log' => '?',
            'monolog.handler.console' => '?',
            'monolog.handler.main' => '?',
            'monolog.handler.null_internal' => '?',
            'monolog.logger' => '?',
            'monolog.logger.cache' => '?',
            'monolog.logger.console' => '?',
            'monolog.logger.debug' => '?',
            'monolog.logger.doctrine' => '?',
            'monolog.logger.event' => '?',
            'monolog.logger.php' => '?',
            'monolog.logger.profiler' => '?',
            'monolog.logger.request' => '?',
            'monolog.logger.router' => '?',
            'monolog.logger.security' => '?',
            'monolog.processor.psr_log_message' => '?',
            'nelmio_cors.cacheable_response_vary_listener' => '?',
            'nelmio_cors.cors_listener' => '?',
            'nelmio_cors.options_provider.config' => '?',
            'nelmio_cors.options_resolver' => '?',
            'nelmio_security.clickjacking_listener' => '?',
            'nelmio_security.content_type_listener' => '?',
            'nelmio_security.csp_listener' => '?',
            'nelmio_security.csp_report.filter' => '?',
            'nelmio_security.csp_report.filter.noise_detector_browser_bugs' => '?',
            'nelmio_security.csp_report.filter.noise_detector_domains' => '?',
            'nelmio_security.csp_report.filter.noise_detector_domains_regex' => '?',
            'nelmio_security.csp_report.filter.noise_detector_injected_scripts' => '?',
            'nelmio_security.csp_report.filter.noise_detector_schemes' => '?',
            'nelmio_security.csp_report.log_formatter' => '?',
            'nelmio_security.csp_report.logger' => '?',
            'nelmio_security.external_redirect.target_validator' => '?',
            'nelmio_security.external_redirect.target_validator.whitelist' => '?',
            'nelmio_security.external_redirect_listener' => '?',
            'nelmio_security.nonce_generator' => '?',
            'nelmio_security.referrer_policy_listener' => '?',
            'nelmio_security.sha_computer' => '?',
            'nelmio_security.twig_extension' => '?',
            'nelmio_security.ua_parser.ua_php.provider' => '?',
            'nelmio_security.xss_protection_listener' => '?',
            'parameter_bag' => '?',
            'profiler.storage' => '?',
            'profiler_listener' => '?',
            'property_accessor' => '?',
            'property_info' => '?',
            'property_info.php_doc_extractor' => '?',
            'property_info.reflection_extractor' => '?',
            'property_info.serializer_extractor' => '?',
            'psysh.shell' => '?',
            'qandidate.toggle.collection.factory' => '?',
            'qandidate.toggle.collection.in_memory' => '?',
            'qandidate.toggle.collection.serializer.in_memory' => '?',
            'qandidate.toggle.context' => '?',
            'qandidate.toggle.context_factory' => '?',
            'qandidate.toggle.data_collector.toggle_collector' => '?',
            'qandidate.toggle.toggle.listener' => '?',
            'qandidate.toggle.twig_extension' => '?',
            'request.add_request_formats_listener' => '?',
            'response_listener' => '?',
            'router.cache_warmer' => '?',
            'router.default' => '?',
            'router.expression_language_provider' => '?',
            'router.request_context' => '?',
            'router_listener' => '?',
            'routing.loader.annotation' => '?',
            'routing.loader.annotation.directory' => '?',
            'routing.loader.annotation.file' => '?',
            'routing.loader.container' => '?',
            'routing.loader.directory' => '?',
            'routing.loader.glob' => '?',
            'routing.loader.php' => '?',
            'routing.loader.xml' => '?',
            'routing.loader.yml' => '?',
            'routing.resolver' => '?',
            'salt.cache.external_docs' => '?',
            'secrets.decryption_key' => '?',
            'secrets.local_vault' => '?',
            'secrets.vault' => '?',
            'security.access.authenticated_voter' => '?',
            'security.access.decision_manager' => '?',
            'security.access.expression_voter' => '?',
            'security.access.role_hierarchy_voter' => '?',
            'security.access_listener' => '?',
            'security.access_map' => '?',
            'security.authentication.guard_handler' => '?',
            'security.authentication.listener.anonymous.main' => '?',
            'security.authentication.listener.guard.main' => '?',
            'security.authentication.manager' => '?',
            'security.authentication.provider.anonymous.main' => '?',
            'security.authentication.provider.guard.main' => '?',
            'security.authentication.retry_entry_point' => '?',
            'security.authentication.session_strategy' => '?',
            'security.authentication.session_strategy.main' => '?',
            'security.authentication.trust_resolver' => '?',
            'security.channel_listener' => '?',
            'security.command.user_password_encoder' => '?',
            'security.context_listener.0' => '?',
            'security.csrf.token_generator' => '?',
            'security.csrf.token_storage' => '?',
            'security.encoder_factory' => '?',
            'security.encoder_factory.generic' => '?',
            'security.event_dispatcher.main' => '?',
            'security.exception_listener.main' => '?',
            'security.expression_language' => '?',
            'security.firewall' => '?',
            'security.firewall.map' => '?',
            'security.firewall.map.config.dev' => '?',
            'security.firewall.map.config.main' => '?',
            'security.firewall.map.config.read_api' => '?',
            'security.firewall.map.config.session_check' => '?',
            'security.firewall.map.context.dev' => '?',
            'security.firewall.map.context.main' => '?',
            'security.firewall.map.context.read_api' => '?',
            'security.firewall.map.context.session_check' => '?',
            'security.http_utils' => '?',
            'security.logout.listener.csrf_token_clearing' => '?',
            'security.logout.listener.default.main' => '?',
            'security.logout.listener.session.main' => '?',
            'security.logout_listener.main' => '?',
            'security.logout_url_generator' => '?',
            'security.rememberme.response_listener' => '?',
            'security.role_hierarchy' => '?',
            'security.untracked_token_storage' => '?',
            'security.user.provider.concrete.in_memory' => '?',
            'security.user.provider.concrete.local_db_provider' => '?',
            'security.user_checker.main' => '?',
            'security.user_password_encoder.generic' => '?',
            'security.user_value_resolver' => '?',
            'security.validator.user_password' => '?',
            'sensio_framework_extra.cache.listener' => '?',
            'sensio_framework_extra.controller.listener' => '?',
            'sensio_framework_extra.converter.doctrine.orm' => '?',
            'sensio_framework_extra.converter.doctrine.orm.expression_language' => '?',
            'sensio_framework_extra.converter.doctrine.orm.expression_language.default' => '?',
            'sensio_framework_extra.converter.listener' => '?',
            'sensio_framework_extra.converter.manager' => '?',
            'sensio_framework_extra.security.expression_language' => '?',
            'sensio_framework_extra.security.expression_language.default' => '?',
            'sensio_framework_extra.security.listener' => '?',
            'sensio_framework_extra.view.guesser' => '?',
            'sensio_framework_extra.view.listener' => '?',
            'serializer.denormalizer.array' => '?',
            'serializer.denormalizer.unwrapping' => '?',
            'serializer.encoder.csv' => '?',
            'serializer.encoder.json' => '?',
            'serializer.encoder.xml' => '?',
            'serializer.encoder.yaml' => '?',
            'serializer.mapping.cache.symfony' => '?',
            'serializer.mapping.cache_class_metadata_factory' => '?',
            'serializer.mapping.cache_class_metadata_factory.inner' => '?',
            'serializer.mapping.cache_warmer' => '?',
            'serializer.mapping.chain_loader' => '?',
            'serializer.mapping.class_discriminator_resolver' => '?',
            'serializer.mapping.class_metadata_factory' => '?',
            'serializer.name_converter.metadata_aware' => '?',
            'serializer.normalizer.constraint_violation_list' => '?',
            'serializer.normalizer.data_uri' => '?',
            'serializer.normalizer.dateinterval' => '?',
            'serializer.normalizer.datetime' => '?',
            'serializer.normalizer.datetimezone' => '?',
            'serializer.normalizer.json_serializable' => '?',
            'serializer.normalizer.object' => '?',
            'serializer.normalizer.problem' => '?',
            'serializer.property_accessor' => '?',
            'session.handler' => '?',
            'session.handler.pdo' => '?',
            'session.storage' => '?',
            'session.storage.metadata_bag' => '?',
            'session.storage.native' => '?',
            'session_listener' => '?',
            'simplethings_entityaudit.create_schema_listener' => '?',
            'simplethings_entityaudit.log_revisions_listener' => '?',
            'simplethings_entityaudit.username_callable' => '?',
            'simplethings_entityaudit.username_callable.token_storage' => '?',
            'slugger' => '?',
            'stof_doctrine_extensions.listener.timestampable' => '?',
            'stof_doctrine_extensions.listener.tree' => '?',
            'streamed_response_listener' => '?',
            'swiftmailer.command.debug' => '?',
            'swiftmailer.command.new_email' => '?',
            'swiftmailer.command.send_email' => '?',
            'swiftmailer.data_collector' => '?',
            'swiftmailer.email_sender.listener' => '?',
            'swiftmailer.mailer' => '?',
            'swiftmailer.mailer.default.spool' => '?',
            'swiftmailer.mailer.default.spool.memory' => '?',
            'swiftmailer.mailer.default.transport' => '?',
            'swiftmailer.mailer.default.transport.dynamic' => '?',
            'swiftmailer.mailer.default.transport.eventdispatcher' => '?',
            'swiftmailer.mailer.default.transport.spool' => '?',
            'swiftmailer.plugin.messagelogger' => '?',
            'swiftmailer.spool' => '?',
            'swiftmailer.transport.real' => '?',
            'tetranz_select2entity.select2entity_type' => '?',
            'translation.dumper.csv' => '?',
            'translation.dumper.ini' => '?',
            'translation.dumper.json' => '?',
            'translation.dumper.mo' => '?',
            'translation.dumper.php' => '?',
            'translation.dumper.po' => '?',
            'translation.dumper.qt' => '?',
            'translation.dumper.res' => '?',
            'translation.dumper.xliff' => '?',
            'translation.dumper.yaml' => '?',
            'translation.dumper.yml' => '?',
            'translation.extractor' => '?',
            'translation.extractor.php' => '?',
            'translation.loader.csv' => '?',
            'translation.loader.dat' => '?',
            'translation.loader.ini' => '?',
            'translation.loader.json' => '?',
            'translation.loader.mo' => '?',
            'translation.loader.php' => '?',
            'translation.loader.po' => '?',
            'translation.loader.qt' => '?',
            'translation.loader.res' => '?',
            'translation.loader.xliff' => '?',
            'translation.loader.yml' => '?',
            'translation.reader' => '?',
            'translation.warmer' => '?',
            'translation.writer' => '?',
            'translator.data_collector' => '?',
            'translator.data_collector.inner' => '?',
            'translator.default' => '?',
            'translator.formatter' => '?',
            'translator.formatter.default' => '?',
            'twig.app_variable' => '?',
            'twig.command.debug' => '?',
            'twig.command.lint' => '?',
            'twig.configurator.environment' => '?',
            'twig.error_renderer.html' => '?',
            'twig.error_renderer.html.inner' => '?',
            'twig.extension.assets' => '?',
            'twig.extension.code' => '?',
            'twig.extension.debug.stopwatch' => '?',
            'twig.extension.dump' => '?',
            'twig.extension.expression' => '?',
            'twig.extension.form' => '?',
            'twig.extension.httpfoundation' => '?',
            'twig.extension.httpkernel' => '?',
            'twig.extension.logout_url' => '?',
            'twig.extension.profiler' => '?',
            'twig.extension.routing' => '?',
            'twig.extension.security' => '?',
            'twig.extension.security_csrf' => '?',
            'twig.extension.trans' => '?',
            'twig.extension.weblink' => '?',
            'twig.extension.webprofiler' => '?',
            'twig.extension.yaml' => '?',
            'twig.form.engine' => '?',
            'twig.form.renderer' => '?',
            'twig.loader' => '?',
            'twig.loader.filesystem' => '?',
            'twig.loader.native_filesystem' => '?',
            'twig.missing_extension_suggestor' => '?',
            'twig.profile' => '?',
            'twig.runtime.httpkernel' => '?',
            'twig.runtime.security_csrf' => '?',
            'twig.runtime_loader' => '?',
            'twig.template_cache_warmer' => '?',
            'twig.template_iterator' => '?',
            'twig.translation.extractor' => '?',
            'uri_signer' => '?',
            'url_helper' => '?',
            'validate_request_listener' => '?',
            'validator.builder' => '?',
            'validator.email' => '?',
            'validator.expression' => '?',
            'validator.mapping.cache_warmer' => '?',
            'validator.mapping.class_metadata_factory' => '?',
            'validator.not_compromised_password' => '?',
            'validator.property_info_loader' => '?',
            'validator.validator_factory' => '?',
            'var_dumper.cli_dumper' => '?',
            'var_dumper.command.server_dump' => '?',
            'var_dumper.contextualized_cli_dumper' => '?',
            'var_dumper.contextualized_cli_dumper.inner' => '?',
            'var_dumper.dump_server' => '?',
            'var_dumper.html_dumper' => '?',
            'var_dumper.server_connection' => '?',
            'web_link.add_link_header_listener' => '?',
            'web_profiler.csp.handler' => '?',
            'web_profiler.debug_toolbar' => '?',
        ]);
    }
}
