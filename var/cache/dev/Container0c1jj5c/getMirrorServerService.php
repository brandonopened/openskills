<?php

namespace Container0c1jj5c;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMirrorServerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Service\MirrorServer' shared autowired service.
     *
     * @return \App\Service\MirrorServer
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/psr/log/Psr/Log/LoggerTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Service/LoggerTrait.php';
        include_once \dirname(__DIR__, 4).'/src/Service/MirrorServer.php';

        $container->privates['App\\Service\\MirrorServer'] = $instance = new \App\Service\MirrorServer(($container->services['csa_guzzle.client.json'] ?? $container->load('getCsaGuzzle_Client_JsonService')), new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['csa_guzzle.middleware.stopwatch'] ?? $container->load('getCsaGuzzle_Middleware_StopwatchService'));
            yield 1 => ($container->privates['csa_guzzle.middleware.logger'] ?? $container->load('getCsaGuzzle_Middleware_LoggerService'));
            yield 2 => ($container->privates['csa_guzzle.middleware.history'] ?? $container->load('getCsaGuzzle_Middleware_HistoryService'));
        }, 3), ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService()));

        $instance->setLogger(($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));

        return $instance;
    }
}
