<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.project_dir">/var/www/html</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.cache_dir">/var/www/html/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/var/www/html/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="SimpleThingsEntityAuditBundle">SimpleThings\EntityAudit\SimpleThingsEntityAuditBundle</parameter>
      <parameter key="CsaGuzzleBundle">Csa\Bundle\GuzzleBundle\CsaGuzzleBundle</parameter>
      <parameter key="NelmioSecurityBundle">Nelmio\SecurityBundle\NelmioSecurityBundle</parameter>
      <parameter key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</parameter>
      <parameter key="TetranzSelect2EntityBundle">Tetranz\Select2EntityBundle\TetranzSelect2EntityBundle</parameter>
      <parameter key="QandidateToggleBundle">Qandidate\Bundle\ToggleBundle\QandidateToggleBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
      <parameter key="PsyshBundle">Fidry\PsyshBundle\PsyshBundle</parameter>
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</parameter>
      <parameter key="TwigExtraBundle">Twig\Extra\TwigExtraBundle\TwigExtraBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/symfony/swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/jms/serializer-bundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/doctrine/doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="SimpleThingsEntityAuditBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit</parameter>
        <parameter key="namespace">SimpleThings\EntityAudit</parameter>
      </parameter>
      <parameter key="CsaGuzzleBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/csa/guzzle-bundle/src</parameter>
        <parameter key="namespace">Csa\Bundle\GuzzleBundle</parameter>
      </parameter>
      <parameter key="NelmioSecurityBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/nelmio/security-bundle</parameter>
        <parameter key="namespace">Nelmio\SecurityBundle</parameter>
      </parameter>
      <parameter key="NelmioCorsBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/nelmio/cors-bundle</parameter>
        <parameter key="namespace">Nelmio\CorsBundle</parameter>
      </parameter>
      <parameter key="TetranzSelect2EntityBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/tetranz/select2entity-bundle</parameter>
        <parameter key="namespace">Tetranz\Select2EntityBundle</parameter>
      </parameter>
      <parameter key="QandidateToggleBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/qandidate/toggle-bundle</parameter>
        <parameter key="namespace">Qandidate\Bundle\ToggleBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/symfony/maker-bundle/src</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
      <parameter key="PsyshBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/theofidry/psysh-bundle/src</parameter>
        <parameter key="namespace">Fidry\PsyshBundle</parameter>
      </parameter>
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/symfony/web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/symfony/debug-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="StofDoctrineExtensionsBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/antishov/doctrine-extensions-bundle</parameter>
        <parameter key="namespace">Stof\DoctrineExtensionsBundle</parameter>
      </parameter>
      <parameter key="TwigExtraBundle" type="collection">
        <parameter key="path">/var/www/html/vendor/twig/extra-bundle/src</parameter>
        <parameter key="namespace">Twig\Extra\TwigExtraBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">App_KernelDevDebugContainer</parameter>
    <parameter key="env(DATABASE_URL)"></parameter>
    <parameter key="pdo_options">null</parameter>
    <parameter key="env(MYSQL_HOST)">null</parameter>
    <parameter key="env(MYSQL_PORT)" type="string">3306</parameter>
    <parameter key="env(MYSQL_DATABASE)">null</parameter>
    <parameter key="env(MYSQL_USER)">null</parameter>
    <parameter key="env(MYSQL_PASSWORD)">null</parameter>
    <parameter key="env(MAILER_TRANSPORT)">smtp</parameter>
    <parameter key="env(MAILER_HOST)">127.0.0.1</parameter>
    <parameter key="env(MAILER_USER)">null</parameter>
    <parameter key="env(MAILER_PASSWORD)">null</parameter>
    <parameter key="env(MAILER_AUTH_MODE)">null</parameter>
    <parameter key="env(MAILER_PORT)">null</parameter>
    <parameter key="env(APP_SECRET)">null</parameter>
    <parameter key="env(COOKIE_SECRET)">null</parameter>
    <parameter key="env(GITHUB_CLIENT_ID)">null</parameter>
    <parameter key="env(GITHUB_CLIENT_SECRET)">null</parameter>
    <parameter key="env(COMMENTS_FEATURE)">inactive</parameter>
    <parameter key="env(COMMENT_ATTACHMENTS)">inactive</parameter>
    <parameter key="env(CREATE_ACCOUNT_FEATURE)">inactive</parameter>
    <parameter key="env(USE_MAIL_FEATURE)">inactive</parameter>
    <parameter key="env(MAIL_FEATURE_FROM_EMAIL)">null</parameter>
    <parameter key="env(BRAND_LOGO_URL)">null</parameter>
    <parameter key="env(BRAND_LOGO_STYLE)">null</parameter>
    <parameter key="env(BRAND_LINK_URL)">null</parameter>
    <parameter key="env(BRAND_LINK_STYLE)">null</parameter>
    <parameter key="env(FIREBASE_API_KEY)">null</parameter>
    <parameter key="env(FIREBASE_DB_URL)">null</parameter>
    <parameter key="env(FIREBASE_AUTH_DOMAIN)">null</parameter>
    <parameter key="env(FIREBASE_PROJECT_ID)">null</parameter>
    <parameter key="env(FIREBASE_CLIENT_ID)">null</parameter>
    <parameter key="env(FIREBASE_CLIENT_EMAIL)">null</parameter>
    <parameter key="env(FIREBASE_PRIVATE_KEY)">null</parameter>
    <parameter key="env(FIREBASE_PREFIX)">opensalt</parameter>
    <parameter key="env(GOOGLE_CAPTCHA_SITE_KEY)">null</parameter>
    <parameter key="env(GOOGLE_CAPTCHA_SECRET_KEY)">null</parameter>
    <parameter key="env(SESSION_MAX_IDLE_TIME)" type="string">3600</parameter>
    <parameter key="env(AWS_ACCESS_KEY_ID)">null</parameter>
    <parameter key="env(AWS_SECRET_ACCESS_KEY)">null</parameter>
    <parameter key="env(AWS_S3_PREFIX)">null</parameter>
    <parameter key="env(AWS_S3_REGION)">null</parameter>
    <parameter key="env(AWS_S3_BUCKET)">null</parameter>
    <parameter key="env(ATTACHMENT_URL_PREFIX)">null</parameter>
    <parameter key="env(BUCKET_PROVIDER)">null</parameter>
    <parameter key="env(LOCAL_FILESYSTEM_PATH)">null</parameter>
    <parameter key="env(FOOTER_LEFT_TEXT)">null</parameter>
    <parameter key="env(CASE_NETWORK_CLIENT_ID)">null</parameter>
    <parameter key="env(CASE_NETWORK_CLIENT_SECRET)">null</parameter>
    <parameter key="env(CASE_NETWORK_TOKEN_ENDPOINT)">https://oauth2-case.imsglobal.org/oauth2server/clienttoken</parameter>
    <parameter key="env(CASE_NETWORK_SCOPE)">http://purl.imsglobal.org/casenetwork/case/v1p0/scope/all.readonly</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="database_host">%env(MYSQL_HOST)%</parameter>
    <parameter key="database_port">%env(int:MYSQL_PORT)%</parameter>
    <parameter key="database_name">%env(MYSQL_DATABASE)%</parameter>
    <parameter key="database_user">%env(MYSQL_USER)%</parameter>
    <parameter key="database_password">%env(MYSQL_PASSWORD)%</parameter>
    <parameter key="mailer_transport">%env(MAILER_TRANSPORT)%</parameter>
    <parameter key="mailer_host">%env(MAILER_HOST)%</parameter>
    <parameter key="mailer_user">%env(MAILER_USER)%</parameter>
    <parameter key="mailer_password">%env(MAILER_PASSWORD)%</parameter>
    <parameter key="mailer_auth_mode">%env(MAILER_AUTH_MODE)%</parameter>
    <parameter key="mailer_port">%env(int:MAILER_PORT)%</parameter>
    <parameter key="secret">%env(APP_SECRET)%</parameter>
    <parameter key="cookie_secret">%env(COOKIE_SECRET)%</parameter>
    <parameter key="github_client_id">%env(GITHUB_CLIENT_ID)%</parameter>
    <parameter key="github_client_secret">%env(GITHUB_CLIENT_SECRET)%</parameter>
    <parameter key="brand_logo_url">%env(BRAND_LOGO_URL)%</parameter>
    <parameter key="brand_logo_style">%env(BRAND_LOGO_STYLE)%</parameter>
    <parameter key="brand_link_url">%env(BRAND_LINK_URL)%</parameter>
    <parameter key="brand_link_style">%env(BRAND_LINK_STYLE)%</parameter>
    <parameter key="comments_feature">%env(COMMENTS_FEATURE)%</parameter>
    <parameter key="comment_attachments">%env(COMMENT_ATTACHMENTS)%</parameter>
    <parameter key="firebase_api_key">%env(FIREBASE_API_KEY)%</parameter>
    <parameter key="firebase_db_url">%env(FIREBASE_DB_URL)%</parameter>
    <parameter key="firebase_auth_domain">%env(FIREBASE_AUTH_DOMAIN)%</parameter>
    <parameter key="firebase_project_id">%env(FIREBASE_PROJECT_ID)%</parameter>
    <parameter key="firebase_client_id">%env(FIREBASE_CLIENT_ID)%</parameter>
    <parameter key="firebase_client_email">%env(FIREBASE_CLIENT_EMAIL)%</parameter>
    <parameter key="firebase_private_key">%env(FIREBASE_PRIVATE_KEY)%</parameter>
    <parameter key="firebase_prefix">%env(FIREBASE_PREFIX)%</parameter>
    <parameter key="create_account_feature">%env(CREATE_ACCOUNT_FEATURE)%</parameter>
    <parameter key="use_mail_feature">%env(USE_MAIL_FEATURE)%</parameter>
    <parameter key="mail_feature_from_email">%env(MAIL_FEATURE_FROM_EMAIL)%</parameter>
    <parameter key="google_captcha_site_key">%env(GOOGLE_CAPTCHA_SITE_KEY)%</parameter>
    <parameter key="google_captcha_secret_key">%env(GOOGLE_CAPTCHA_SECRET_KEY)%</parameter>
    <parameter key="session_max_idle_time">%env(int:SESSION_MAX_IDLE_TIME)%</parameter>
    <parameter key="aws_key">%env(AWS_ACCESS_KEY_ID)%</parameter>
    <parameter key="aws_secret">%env(AWS_SECRET_ACCESS_KEY)%</parameter>
    <parameter key="aws_prefix">%env(AWS_S3_PREFIX)%</parameter>
    <parameter key="aws_region">%env(AWS_S3_REGION)%</parameter>
    <parameter key="aws_bucket">%env(AWS_S3_BUCKET)%</parameter>
    <parameter key="attachment_url_prefix">%env(ATTACHMENT_URL_PREFIX)%</parameter>
    <parameter key="bucket_provider">%env(BUCKET_PROVIDER)%</parameter>
    <parameter key="local_filesystem_path">%env(LOCAL_FILESYSTEM_PATH)%</parameter>
    <parameter key="footer_left_text">%env(FOOTER_LEFT_TEXT)%</parameter>
    <parameter key="base_template">base.html.twig</parameter>
    <parameter key="assets_version" type="string">190202</parameter>
    <parameter key="case_network_client_id">%env(CASE_NETWORK_CLIENT_ID)%</parameter>
    <parameter key="case_network_client_secret">%env(CASE_NETWORK_CLIENT_SECRET)%</parameter>
    <parameter key="case_network_token_endpoint">%env(CASE_NETWORK_TOKEN_ENDPOINT)%</parameter>
    <parameter key="case_network_scope">%env(CASE_NETWORK_SCOPE)%</parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">dynamic</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">/var/www/html/var/cache/dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="json" type="collection">
        <parameter key="class">App\Doctrine\Types\JsonType</parameter>
      </parameter>
      <parameter key="datetime" type="collection">
        <parameter key="class">App\Doctrine\Types\DateTimeType</parameter>
      </parameter>
      <parameter key="uuid" type="collection">
        <parameter key="class">Ramsey\Uuid\Doctrine\UuidType</parameter>
      </parameter>
      <parameter key="uuid_binary" type="collection">
        <parameter key="class">Ramsey\Uuid\Doctrine\UuidBinaryType</parameter>
      </parameter>
      <parameter key="uuid_binary_ordered_time" type="collection">
        <parameter key="class">Ramsey\Uuid\Doctrine\UuidBinaryOrderedTimeType</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/var/www/html/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine.migrations.preferred_em">null</parameter>
    <parameter key="doctrine.migrations.preferred_connection">null</parameter>
    <parameter key="simplethings.entityaudit.audited_entities" type="collection">
      <parameter>App\Entity\Framework\LsDoc</parameter>
      <parameter>App\Entity\Framework\LsDocAttribute</parameter>
      <parameter>App\Entity\Framework\LsDocSubject</parameter>
      <parameter>App\Entity\Framework\LsItem</parameter>
      <parameter>App\Entity\Framework\LsItemConcept</parameter>
      <parameter>App\Entity\Framework\LsAssociation</parameter>
      <parameter>App\Entity\Framework\LsDefAssociationGrouping</parameter>
      <parameter>App\Entity\Framework\LsDefItemType</parameter>
      <parameter>App\Entity\Framework\LsDefConcept</parameter>
      <parameter>App\Entity\Framework\LsDefGrade</parameter>
      <parameter>App\Entity\Framework\LsDefLicence</parameter>
      <parameter>App\Entity\Framework\LsDefSubject</parameter>
      <parameter>App\Entity\Framework\CfRubric</parameter>
      <parameter>App\Entity\Framework\CfRubricCriterion</parameter>
      <parameter>App\Entity\Framework\CfRubricCriterionLevel</parameter>
      <parameter>App\Entity\User\Organization</parameter>
      <parameter>App\Entity\User\User</parameter>
      <parameter>App\Entity\User\UserDocAcl</parameter>
      <parameter>App\Entity\ChangeEntry</parameter>
    </parameter>
    <parameter key="simplethings.entityaudit.global_ignore_columns" type="collection">
      <parameter>password</parameter>
    </parameter>
    <parameter key="simplethings.entityaudit.table_prefix">audit_</parameter>
    <parameter key="simplethings.entityaudit.table_suffix"></parameter>
    <parameter key="simplethings.entityaudit.revision_field_name">rev</parameter>
    <parameter key="simplethings.entityaudit.revision_type_field_name">revtype</parameter>
    <parameter key="simplethings.entityaudit.revision_table_name">audit_revision</parameter>
    <parameter key="simplethings.entityaudit.revision_id_field_type">integer</parameter>
    <parameter key="nelmio_security.clickjacking.paths" type="collection">
      <parameter key="^/cftree/doc/" type="collection">
        <parameter key="header">ALLOW</parameter>
      </parameter>
      <parameter key="^/.*" type="collection">
        <parameter key="header">DENY</parameter>
      </parameter>
    </parameter>
    <parameter key="nelmio_security.clickjacking.content_types" type="collection"/>
    <parameter key="nelmio_security.nonce_generator.number_of_bytes">16</parameter>
    <parameter key="nelmio_security.csp.hash_algorithm">sha256</parameter>
    <parameter key="nelmio_security.csp.report_log_level">notice</parameter>
    <parameter key="nelmio_security.content_type.nosniff">true</parameter>
    <parameter key="nelmio_security.external_redirects.whitelist">(?:.*\.google\.com|google\.com)</parameter>
    <parameter key="nelmio_security.external_redirects.override">null</parameter>
    <parameter key="nelmio_security.external_redirects.forward_as">null</parameter>
    <parameter key="nelmio_security.external_redirects.abort">false</parameter>
    <parameter key="nelmio_security.referrer_policy.policies" type="collection">
      <parameter>no-referrer</parameter>
      <parameter>strict-origin-when-cross-origin</parameter>
    </parameter>
    <parameter key="nelmio_cors.map" type="collection">
      <parameter key="^/ims/case/v1p0/" type="collection">
        <parameter key="forced_allow_origin_value">*</parameter>
        <parameter key="allow_origin">true</parameter>
        <parameter key="allow_headers" type="collection">
          <parameter>accept-encoding</parameter>
          <parameter>if-modified-since</parameter>
          <parameter>content-type</parameter>
          <parameter>content-range</parameter>
          <parameter>content-disposition</parameter>
          <parameter>content-description</parameter>
          <parameter>x-requested-with</parameter>
          <parameter>x-opensalt</parameter>
        </parameter>
        <parameter key="allow_methods" type="collection">
          <parameter>GET</parameter>
        </parameter>
        <parameter key="expose_headers" type="collection">
          <parameter>X-Total-Count</parameter>
          <parameter>X-OpenSALT</parameter>
        </parameter>
        <parameter key="max_age">60</parameter>
      </parameter>
      <parameter key="^/" type="collection"/>
    </parameter>
    <parameter key="nelmio_cors.defaults" type="collection">
      <parameter key="allow_origin" type="collection"/>
      <parameter key="allow_credentials">false</parameter>
      <parameter key="allow_headers" type="collection">
        <parameter>content-type</parameter>
        <parameter>authorization</parameter>
        <parameter>x-opensalt</parameter>
      </parameter>
      <parameter key="expose_headers" type="collection"/>
      <parameter key="allow_methods" type="collection">
        <parameter>GET</parameter>
        <parameter>OPTIONS</parameter>
        <parameter>POST</parameter>
        <parameter>PUT</parameter>
        <parameter>PATCH</parameter>
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="max_age">0</parameter>
      <parameter key="hosts" type="collection"/>
      <parameter key="origin_regex">false</parameter>
      <parameter key="forced_allow_origin_value">null</parameter>
    </parameter>
    <parameter key="nelmio_cors.cors_listener.class">Nelmio\CorsBundle\EventListener\CorsListener</parameter>
    <parameter key="nelmio_cors.options_resolver.class">Nelmio\CorsBundle\Options\Resolver</parameter>
    <parameter key="nelmio_cors.options_provider.config.class">Nelmio\CorsBundle\Options\ConfigProvider</parameter>
    <parameter key="tetranz_select2_entity.config" type="collection">
      <parameter key="minimum_input_length">1</parameter>
      <parameter key="scroll">false</parameter>
      <parameter key="page_limit">10</parameter>
      <parameter key="allow_clear">false</parameter>
      <parameter key="allow_add" type="collection">
        <parameter key="enabled">false</parameter>
        <parameter key="new_tag_text"> (NEW)</parameter>
        <parameter key="new_tag_prefix">__</parameter>
        <parameter key="tag_separators">[",", " "]</parameter>
      </parameter>
      <parameter key="delay">250</parameter>
      <parameter key="language">en</parameter>
      <parameter key="cache">true</parameter>
      <parameter key="cache_timeout">60000</parameter>
      <parameter key="width">null</parameter>
      <parameter key="object_manager">null</parameter>
      <parameter key="render_html">false</parameter>
    </parameter>
    <parameter key="qandidate.toggle.manager.class">Qandidate\Toggle\ToggleManager</parameter>
    <parameter key="qandidate.toggle.collection.in_memory.class">Qandidate\Toggle\ToggleCollection\InMemoryCollection</parameter>
    <parameter key="qandidate.toggle.collection.serializer.in_memory.class">Qandidate\Toggle\Serializer\InMemoryCollectionSerializer</parameter>
    <parameter key="qandidate.toggle.collection.predis.class">Qandidate\Toggle\ToggleCollection\PredisCollection</parameter>
    <parameter key="qandidate.toggle.user_context_factory.class">Qandidate\Bundle\ToggleBundle\Context\UserContextFactory</parameter>
    <parameter key="qandidate.toggle.twig_extension.class">Qandidate\Bundle\ToggleBundle\Twig\ToggleTwigExtension</parameter>
    <parameter key="qandidate.toggle.toggle.listener.class">Qandidate\Bundle\ToggleBundle\EventListener\ToggleListener</parameter>
    <parameter key="qandidate.toggle.context.class">Qandidate\Toggle\Context</parameter>
    <parameter key="qandidate.toggle.data_collector.toggle_collector.class">Qandidate\Bundle\ToggleBundle\DataCollector\ToggleCollector</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Workflow\Event\GuardEvent">workflow.guard</parameter>
      <parameter key="Symfony\Component\Workflow\Event\LeaveEvent">workflow.leave</parameter>
      <parameter key="Symfony\Component\Workflow\Event\TransitionEvent">workflow.transition</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnterEvent">workflow.enter</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnteredEvent">workflow.entered</parameter>
      <parameter key="Symfony\Component\Workflow\Event\CompletedEvent">workflow.completed</parameter>
      <parameter key="Symfony\Component\Workflow\Event\AnnounceEvent">workflow.announce</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationFailureEvent">security.authentication.failure</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="name">session</parameter>
      <parameter key="cookie_lifetime">0</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_maxlifetime">86400</parameter>
      <parameter key="gc_probability">25</parameter>
      <parameter key="gc_divisor">100</parameter>
    </parameter>
    <parameter key="session.save_path">/var/www/html/var/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">120</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path">null</parameter>
    <parameter key="asset.request_context.secure">null</parameter>
    <parameter key="validator.mapping.cache.file">/var/www/html/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">/var/www/html/translations</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/var/www/html/var/cache/dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/var/www/html/var/cache/dev/App_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">/var/www/html/var/cache/dev/serialization.php</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_USER" type="collection"/>
      <parameter key="ROLE_EDITOR" type="collection">
        <parameter>ROLE_USER</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_EDITOR</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_EDITOR" type="collection">
        <parameter>ROLE_EDITOR</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_USER" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_SUPER_EDITOR</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="security.firewalls" type="collection">
      <parameter>dev</parameter>
      <parameter>session_check</parameter>
      <parameter>read_api</parameter>
      <parameter>main</parameter>
    </parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>bootstrap_3_horizontal_layout.html.twig</parameter>
      <parameter>@TetranzSelect2Entity/Form/fields.html.twig</parameter>
      <parameter>form/fields.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/var/www/html/templates</parameter>
    <parameter key="env(VAR_DUMPER_SERVER)">127.0.0.1:9912</parameter>
    <parameter key="stof_doctrine_extensions.listener.tree.class">Gedmo\Tree\TreeListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.timestampable.class">Gedmo\Timestampable\TimestampableListener</parameter>
    <parameter key="stof_doctrine_extensions.default_locale">en_US</parameter>
    <parameter key="stof_doctrine_extensions.translation_fallback">false</parameter>
    <parameter key="stof_doctrine_extensions.persist_default_translation">false</parameter>
    <parameter key="stof_doctrine_extensions.skip_translation_on_load">false</parameter>
    <parameter key="stof_doctrine_extensions.listener.translatable.class">Gedmo\Translatable\TranslatableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.blameable.class">Gedmo\Blameable\BlameableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sluggable.class">Gedmo\Sluggable\SluggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.loggable.class">Gedmo\Loggable\LoggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sortable.class">Gedmo\Sortable\SortableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.softdeleteable.class">Gedmo\SoftDeleteable\SoftDeleteableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.uploadable.class">Gedmo\Uploadable\UploadableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.reference_integrity.class">Gedmo\ReferenceIntegrity\ReferenceIntegrityListener</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="csa_guzzle.data_collector.guzzle" type="collection">
        <parameter>guzzle</parameter>
        <parameter>@CsaGuzzle/Collector/guzzle.html.twig</parameter>
      </parameter>
      <parameter key="qandidate.toggle.data_collector.toggle_collector" type="collection">
        <parameter>qandidate.toggle_collector</parameter>
        <parameter>@QandidateToggle\data_collector\toggle.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.App\Console\Framework\CopyDocumentToItemCommand</parameter>
      <parameter>console.command.public_alias.App\Console\User\OrgAddCommand</parameter>
      <parameter>console.command.public_alias.App\Console\User\UserAddCommand</parameter>
      <parameter>console.command.public_alias.App\Console\User\UserAddRoleCommand</parameter>
      <parameter>console.command.public_alias.App\Console\User\UserRemoveRoleCommand</parameter>
      <parameter>console.command.public_alias.App\Console\User\UserSetPasswordCommand</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="routing.route_loader"/>
    </service>
    <service id="Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="EasyCorp\EasyLog\EasyLogHandler" class="EasyCorp\EasyLog\EasyLogHandler" public="false">
      <argument>/var/www/html/var/log/dev.log</argument>
    </service>
    <service id="App\Command\Comment\AddCommentCommand" class="App\Command\Comment\AddCommentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Comment\DeleteCommentCommand" class="App\Command\Comment\DeleteCommentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Comment\DownvoteCommentCommand" class="App\Command\Comment\DownvoteCommentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Comment\UpdateCommentCommand" class="App\Command\Comment\UpdateCommentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Comment\UpvoteCommentCommand" class="App\Command\Comment\UpvoteCommentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Email\SendAdminNotificationEmailCommand" class="App\Command\Email\SendAdminNotificationEmailCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Email\SendSignupReceivedEmailCommand" class="App\Command\Email\SendSignupReceivedEmailCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Email\SendUserApprovedEmailCommand" class="App\Command\Email\SendUserApprovedEmailCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddAssociationCommand" class="App\Command\Framework\AddAssociationCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddAssociationGroupCommand" class="App\Command\Framework\AddAssociationGroupCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddConceptCommand" class="App\Command\Framework\AddConceptCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddDocumentCommand" class="App\Command\Framework\AddDocumentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddExemplarToItemCommand" class="App\Command\Framework\AddExemplarToItemCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddExternalDocCommand" class="App\Command\Framework\AddExternalDocCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddGradeCommand" class="App\Command\Framework\AddGradeCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddItemCommand" class="App\Command\Framework\AddItemCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddItemTypeCommand" class="App\Command\Framework\AddItemTypeCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddLicenceCommand" class="App\Command\Framework\AddLicenceCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddSubjectCommand" class="App\Command\Framework\AddSubjectCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\AddTreeAssociationCommand" class="App\Command\Framework\AddTreeAssociationCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\ChangeItemParentCommand" class="App\Command\Framework\ChangeItemParentCommand" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Form\DTO\ChangeLsItemParentDTO"/>
    </service>
    <service id="App\Command\Framework\CloneFrameworkCommand" class="App\Command\Framework\CloneFrameworkCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\CopyDocumentToItemCommand" class="App\Command\Framework\CopyDocumentToItemCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\CopyFrameworkCommand" class="App\Command\Framework\CopyFrameworkCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\CopyItemToDocCommand" class="App\Command\Framework\CopyItemToDocCommand" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Form\DTO\CopyToLsDocDTO"/>
    </service>
    <service id="App\Command\Framework\DeleteAssociationCommand" class="App\Command\Framework\DeleteAssociationCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\DeleteAssociationGroupCommand" class="App\Command\Framework\DeleteAssociationGroupCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\DeleteConceptCommand" class="App\Command\Framework\DeleteConceptCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\DeleteDocumentCommand" class="App\Command\Framework\DeleteDocumentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\DeleteGradeCommand" class="App\Command\Framework\DeleteGradeCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\DeleteItemCommand" class="App\Command\Framework\DeleteItemCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\DeleteItemTypeCommand" class="App\Command\Framework\DeleteItemTypeCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\DeleteItemWithChildrenCommand" class="App\Command\Framework\DeleteItemWithChildrenCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\DeleteLicenceCommand" class="App\Command\Framework\DeleteLicenceCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\DeleteSubjectCommand" class="App\Command\Framework\DeleteSubjectCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\DeriveDocumentCommand" class="App\Command\Framework\DeriveDocumentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\LockDocumentCommand" class="App\Command\Framework\LockDocumentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\LockItemCommand" class="App\Command\Framework\LockItemCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\RemoveChildCommand" class="App\Command\Framework\RemoveChildCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UnlockDocumentCommand" class="App\Command\Framework\UnlockDocumentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UnlockItemCommand" class="App\Command\Framework\UnlockItemCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateAssociationCommand" class="App\Command\Framework\UpdateAssociationCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateAssociationGroupCommand" class="App\Command\Framework\UpdateAssociationGroupCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateConceptCommand" class="App\Command\Framework\UpdateConceptCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateDocumentCommand" class="App\Command\Framework\UpdateDocumentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateFrameworkCommand" class="App\Command\Framework\UpdateFrameworkCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateGradeCommand" class="App\Command\Framework\UpdateGradeCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateItemCommand" class="App\Command\Framework\UpdateItemCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateItemTypeCommand" class="App\Command\Framework\UpdateItemTypeCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateLicenceCommand" class="App\Command\Framework\UpdateLicenceCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateSubjectCommand" class="App\Command\Framework\UpdateSubjectCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Framework\UpdateTreeItemsCommand" class="App\Command\Framework\UpdateTreeItemsCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Import\ImportAsnFromUrlCommand" class="App\Command\Import\ImportAsnFromUrlCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Import\ImportCaseJsonCommand" class="App\Command\Import\ImportCaseJsonCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Import\ImportExcelFileCommand" class="App\Command\Import\ImportExcelFileCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Import\ImportGenericCsvCommand" class="App\Command\Import\ImportGenericCsvCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Import\MarkImportLogsAsReadCommand" class="App\Command\Import\MarkImportLogsAsReadCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\Import\ParseCsvGithubDocumentCommand" class="App\Command\Import\ParseCsvGithubDocumentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\ActivateUserCommand" class="App\Command\User\ActivateUserCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\AddFrameworkUserAclCommand" class="App\Command\User\AddFrameworkUserAclCommand" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Form\DTO\AddAclUserDTO"/>
    </service>
    <service id="App\Command\User\AddFrameworkUsernameAclCommand" class="App\Command\User\AddFrameworkUsernameAclCommand" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Form\DTO\AddAclUsernameDTO"/>
    </service>
    <service id="App\Command\User\AddOrganizationByNameCommand" class="App\Command\User\AddOrganizationByNameCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\AddOrganizationCommand" class="App\Command\User\AddOrganizationCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\AddUserByNameCommand" class="App\Command\User\AddUserByNameCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\AddUserCommand" class="App\Command\User\AddUserCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\AddUserRoleCommand" class="App\Command\User\AddUserRoleCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\ChangePasswordCommand" class="App\Command\User\ChangePasswordCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\DeleteFrameworkAclCommand" class="App\Command\User\DeleteFrameworkAclCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\DeleteOrganizationCommand" class="App\Command\User\DeleteOrganizationCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\DeleteUserCommand" class="App\Command\User\DeleteUserCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\RemoveUserRoleCommand" class="App\Command\User\RemoveUserRoleCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\SetUserPasswordCommand" class="App\Command\User\SetUserPasswordCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\SuspendUserCommand" class="App\Command\User\SuspendUserCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\UpdateOrganizationCommand" class="App\Command\User\UpdateOrganizationCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Command\User\UpdateUserCommand" class="App\Command\User\UpdateUserCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Console\ClearFirebaseNotificationsCommand" class="App\Console\ClearFirebaseNotificationsCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="Kreait\Firebase\Database"/>
      <argument>%env(FIREBASE_PREFIX)%</argument>
      <call method="setName">
        <argument>firebase:clear</argument>
      </call>
    </service>
    <service id="App\Console\Framework\CfpackageDeleteCommand" class="App\Console\Framework\CfpackageDeleteCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setName">
        <argument>cfpackage:delete</argument>
      </call>
    </service>
    <service id="App\Console\Framework\CopyDocumentToItemCommand" class="App\Console\Framework\CopyDocumentToItemCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Console\Import\ImportAsnCommand" class="App\Console\Import\ImportAsnCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>import:asn</argument>
      </call>
    </service>
    <service id="App\Console\Import\ImportCaseJsonCommand" class="App\Console\Import\ImportCaseJsonCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setName">
        <argument>import:case-json</argument>
      </call>
    </service>
    <service id="App\Console\Import\ImportGeneric1Command" class="App\Console\Import\ImportGeneric1Command" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>import:generic-csv</argument>
      </call>
    </service>
    <service id="App\Console\Mirror\MirrorFrameworkCommand" class="App\Console\Mirror\MirrorFrameworkCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="App\Service\MirrorFramework"/>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <call method="setName">
        <argument>mirror:framework</argument>
      </call>
    </service>
    <service id="App\Console\Mirror\MirrorJobCommand" class="App\Console\Mirror\MirrorJobCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="App\Service\MirrorFramework"/>
      <call method="setName">
        <argument>jobs:mirror</argument>
      </call>
    </service>
    <service id="App\Console\Mirror\UpdateListCommand" class="App\Console\Mirror\UpdateListCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="App\Service\MirrorServer"/>
      <call method="setName">
        <argument>jobs:update-next-server</argument>
      </call>
    </service>
    <service id="App\Console\User\OrgAddCommand" class="App\Console\User\OrgAddCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Console\User\UserAddCommand" class="App\Console\User\UserAddCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Console\User\UserAddRoleCommand" class="App\Console\User\UserAddRoleCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="App\Console\User\UserRemoveRoleCommand" class="App\Console\User\UserRemoveRoleCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="App\Console\User\UserSetPasswordCommand" class="App\Console\User\UserSetPasswordCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="App\Controller\Api\CaseDocController" class="App\Controller\Api\CaseDocController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Api\CaseDocController"/>
      </call>
    </service>
    <service id="App\Controller\Api\CaseV1P0Controller" class="App\Controller\Api\CaseV1P0Controller" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="string">190202</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Api\CaseV1P0Controller"/>
      </call>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\Controller\Api\LorSupportController" class="App\Controller\Api\LorSupportController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\Framework\LsDocRepository"/>
      <argument type="service" id="App\Repository\Framework\LsItemRepository"/>
      <argument type="string">190202</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Api\LorSupportController"/>
      </call>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\Controller\AsnImportController" class="App\Controller\AsnImportController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\AsnImportController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\CaseImportController" class="App\Controller\CaseImportController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\CaseImportController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Cms\ExportController" class="App\Controller\Cms\ExportController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Cms\ExportController"/>
      </call>
    </service>
    <service id="App\Controller\CommentsController" class="App\Controller\CommentsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="qandidate.toggle.manager"/>
      <argument type="service" id="qandidate.toggle.user_context_factory"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\CommentsController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\DefaultController" class="App\Controller\DefaultController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\DefaultController"/>
      </call>
    </service>
    <service id="App\Controller\DocRevisionController" class="App\Controller\DocRevisionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="simplethings_entityaudit.reader"/>
      <argument type="service" id="App\Repository\ChangeEntryRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\DocRevisionController"/>
      </call>
    </service>
    <service id="App\Controller\ExcelExportController" class="App\Controller\ExcelExportController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\ExcelExport"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\ExcelExportController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\ExcelImportController" class="App\Controller\ExcelImportController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\ExcelImportController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\AdditionalFieldController" class="App\Controller\Framework\AdditionalFieldController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\Framework\AdditionalFieldRepository"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\AdditionalFieldController"/>
      </call>
    </service>
    <service id="App\Controller\Framework\CfPackageController" class="App\Controller\Framework\CfPackageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="jms_serializer.serializer"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\CfPackageController"/>
      </call>
    </service>
    <service id="App\Controller\Framework\CloneController" class="App\Controller\Framework\CloneController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\CloneController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\CopyController" class="App\Controller\Framework\CopyController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\CopyController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\DocTreeController" class="App\Controller\Framework\DocTreeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="csa_guzzle.client.json"/>
      <argument type="service" id="salt.cache.external_docs"/>
      <argument>%env(CASE_NETWORK_CLIENT_ID)%</argument>
      <argument>%env(CASE_NETWORK_CLIENT_SECRET)%</argument>
      <argument>%env(CASE_NETWORK_SCOPE)%</argument>
      <argument>%env(CASE_NETWORK_TOKEN_ENDPOINT)%</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\DocTreeController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\EditorController" class="App\Controller\Framework\EditorController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\EditorController"/>
      </call>
    </service>
    <service id="App\Controller\Framework\LockController" class="App\Controller\Framework\LockController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\LockController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\LsAssociationController" class="App\Controller\Framework\LsAssociationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\LsAssociationController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\LsDefAssociationGroupingController" class="App\Controller\Framework\LsDefAssociationGroupingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefAssociationGroupingController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\LsDefConceptController" class="App\Controller\Framework\LsDefConceptController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefConceptController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\LsDefGradeController" class="App\Controller\Framework\LsDefGradeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefGradeController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\LsDefItemTypeController" class="App\Controller\Framework\LsDefItemTypeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefItemTypeController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\LsDefLicenceController" class="App\Controller\Framework\LsDefLicenceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefLicenceController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\LsDefSubjectController" class="App\Controller\Framework\LsDefSubjectController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefSubjectController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\LsDocController" class="App\Controller\Framework\LsDocController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="csa_guzzle.client.json"/>
      <argument type="service" id="security.authorization_checker"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\LsDocController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Framework\LsItemController" class="App\Controller\Framework\LsItemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument>%env(BUCKET_PROVIDER)%</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Framework\LsItemController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\GithubImportController" class="App\Controller\GithubImportController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\GithubImportController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\GithubOauthController" class="App\Controller\GithubOauthController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\GithubOauthController"/>
      </call>
    </service>
    <service id="App\Controller\ImportLogsController" class="App\Controller\ImportLogsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\ImportLogsController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\Mirror\FrameworkController" class="App\Controller\Mirror\FrameworkController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Mirror\FrameworkController"/>
      </call>
    </service>
    <service id="App\Controller\Mirror\OAuthCredentialsController" class="App\Controller\Mirror\OAuthCredentialsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Mirror\OAuthCredentialsController"/>
      </call>
    </service>
    <service id="App\Controller\Mirror\ServerController" class="App\Controller\Mirror\ServerController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Mirror\ServerController"/>
      </call>
    </service>
    <service id="App\Controller\PdfExportController" class="App\Controller\PdfExportController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\PdfExportController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\SessionController" class="App\Controller\SessionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument>%env(int:SESSION_MAX_IDLE_TIME)%</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\SessionController"/>
      </call>
    </service>
    <service id="App\Controller\Site\AboutController" class="App\Controller\Site\AboutController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument>/var/www/html</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Site\AboutController"/>
      </call>
    </service>
    <service id="App\Controller\Site\DevController" class="App\Controller\Site\DevController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\Site\DevController"/>
      </call>
    </service>
    <service id="App\Controller\SystemLogController" class="App\Controller\SystemLogController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="simplethings_entityaudit.reader"/>
      <argument type="service" id="App\Repository\ChangeEntryRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\SystemLogController"/>
      </call>
    </service>
    <service id="App\Controller\UiInfoController" class="App\Controller\UiInfoController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\UiInfoController"/>
      </call>
    </service>
    <service id="App\Controller\UriController" class="App\Controller\UriController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="App\Service\IdentifiableObjectHelper"/>
      <argument type="string">190202</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\UriController"/>
      </call>
    </service>
    <service id="App\Controller\User\ChangePasswordController" class="App\Controller\User\ChangePasswordController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\User\ChangePasswordController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\User\FrameworkAclController" class="App\Controller\User\FrameworkAclController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\User\FrameworkAclController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\User\OAuthServiceController" class="App\Controller\User\OAuthServiceController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument>%env(GITHUB_CLIENT_ID)%</argument>
      <argument>%env(GITHUB_CLIENT_SECRET)%</argument>
      <argument type="expression">container.hasParameter('github_redirect_uri') ? parameter('github_redirect_uri') : null</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\User\OAuthServiceController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\User\OrganizationController" class="App\Controller\User\OrganizationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\User\OrganizationController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\User\SecurityController" class="App\Controller\User\SecurityController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.authentication_utils"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\User\SecurityController"/>
      </call>
    </service>
    <service id="App\Controller\User\SignupController" class="App\Controller\User\SignupController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument>%env(MAIL_FEATURE_FROM_EMAIL)%</argument>
      <argument>dev</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\User\SignupController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\Controller\User\UserController" class="App\Controller\User\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.zCZyUMB.App\Controller\User\UserController"/>
      </call>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="App\DataTransformer\CaseJson\AssociationGroupingsTransformer" class="App\DataTransformer\CaseJson\AssociationGroupingsTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\DataTransformer\CaseJson\AssociationsTransformer" class="App\DataTransformer\CaseJson\AssociationsTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\DataTransformer\CaseJson\ConceptsTransformer" class="App\DataTransformer\CaseJson\ConceptsTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\DataTransformer\CaseJson\DefinitionsTransformer" class="App\DataTransformer\CaseJson\DefinitionsTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\DataTransformer\CaseJson\AssociationGroupingsTransformer"/>
      <argument type="service" id="App\DataTransformer\CaseJson\ConceptsTransformer"/>
      <argument type="service" id="App\DataTransformer\CaseJson\ItemTypesTransformer"/>
      <argument type="service" id="App\DataTransformer\CaseJson\LicencesTransformer"/>
      <argument type="service" id="App\DataTransformer\CaseJson\SubjectsTransformer"/>
    </service>
    <service id="App\DataTransformer\CaseJson\DocumentTransformer" class="App\DataTransformer\CaseJson\DocumentTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\DataTransformer\CaseJson\ItemTypesTransformer" class="App\DataTransformer\CaseJson\ItemTypesTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\DataTransformer\CaseJson\ItemsTransformer" class="App\DataTransformer\CaseJson\ItemsTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\DataTransformer\CaseJson\LicencesTransformer" class="App\DataTransformer\CaseJson\LicencesTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\DataTransformer\CaseJson\PackageTransformer" class="App\DataTransformer\CaseJson\PackageTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\DataTransformer\CaseJson\DefinitionsTransformer"/>
      <argument type="service" id="App\DataTransformer\CaseJson\DocumentTransformer"/>
      <argument type="service" id="App\DataTransformer\CaseJson\ItemsTransformer"/>
      <argument type="service" id="App\DataTransformer\CaseJson\AssociationsTransformer"/>
      <argument type="service" id="App\DataTransformer\CaseJson\RubricsTransformer"/>
    </service>
    <service id="App\DataTransformer\CaseJson\RubricsTransformer" class="App\DataTransformer\CaseJson\RubricsTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\DataTransformer\CaseJson\SubjectsTransformer" class="App\DataTransformer\CaseJson\SubjectsTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Doctrine\Types\DateTimeType" class="App\Doctrine\Types\DateTimeType" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\Types\JsonType" class="App\Doctrine\Types\JsonType" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Event\CommandEvent" class="App\Event\CommandEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Event\NotificationEvent" class="App\Event\NotificationEvent" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\EventListener\ApiExceptionListener" class="App\EventListener\ApiExceptionListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="jms_serializer.serializer"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\EventListener\CommandEventRouter" class="App\EventListener\CommandEventRouter" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.token_storage"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\EventListener\LoginCaptchaListener" class="App\EventListener\LoginCaptchaListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument>%env(GOOGLE_CAPTCHA_SECRET_KEY)%</argument>
    </service>
    <service id="App\EventListener\NotificationLoggingListener" class="App\EventListener\NotificationLoggingListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\EventListener\NotificationToFirebaseListener" class="App\EventListener\NotificationToFirebaseListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="Kreait\Firebase\Database"/>
      <argument>%env(FIREBASE_PREFIX)%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\EventListener\SiteVersionListener" class="App\EventListener\SiteVersionListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>/var/www/html</argument>
      <argument type="service" id="cache.app"/>
    </service>
    <service id="App\EventListener\VaryOriginListener" class="App\EventListener\VaryOriginListener" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="App\Form\Command\ChangeLsItemParentCommand" class="App\Form\Command\ChangeLsItemParentCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\Command\CopyToLsDocCommand" class="App\Form\Command\CopyToLsDocCommand" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\DTO\AddAclUserDTO" class="App\Form\DTO\AddAclUserDTO" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\DTO\AddAclUsernameDTO" class="App\Form\DTO\AddAclUsernameDTO" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\DTO\ChangeLsItemParentDTO" class="App\Form\DTO\ChangeLsItemParentDTO" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\DTO\ChangePasswordDTO" class="App\Form\DTO\ChangePasswordDTO" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\DTO\CopyToLsDocDTO" class="App\Form\DTO\CopyToLsDocDTO" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\DTO\MirroredFrameworkDTO" class="App\Form\DTO\MirroredFrameworkDTO" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\DTO\MirroredServerDTO" class="App\Form\DTO\MirroredServerDTO" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\DTO\OAuthCredentialDTO" class="App\Form\DTO\OAuthCredentialDTO" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\DataTransformer\EducationAlignmentTransformer" class="App\Form\DataTransformer\EducationAlignmentTransformer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\DataTransformer\ItemTypeTransformer" class="App\Form\DataTransformer\ItemTypeTransformer" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Form\Type\AddAclUserType" class="App\Form\Type\AddAclUserType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\AddAclUsernameType" class="App\Form\Type\AddAclUsernameType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\AdditionalFieldType" class="App\Form\Type\AdditionalFieldType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ChangePasswordType" class="App\Form\Type\ChangePasswordType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\CustomFieldsType" class="App\Form\Type\CustomFieldsType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\DatalistType" class="App\Form\Type\DatalistType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LsAssociationAjaxType" class="App\Form\Type\LsAssociationAjaxType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LsAssociationTreeType" class="App\Form\Type\LsAssociationTreeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LsAssociationType" class="App\Form\Type\LsAssociationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\LsDefAssociationGroupingType" class="App\Form\Type\LsDefAssociationGroupingType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LsDefConceptType" class="App\Form\Type\LsDefConceptType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LsDefGradeType" class="App\Form\Type\LsDefGradeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LsDefItemTypeType" class="App\Form\Type\LsDefItemTypeType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LsDefLicenceType" class="App\Form\Type\LsDefLicenceType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LsDefSubjectType" class="App\Form\Type\LsDefSubjectType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LsDocCreateType" class="App\Form\Type\LsDocCreateType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\LsDocListType" class="App\Form\Type\LsDocListType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="App\Form\Type\LsDocType" class="App\Form\Type\LsDocType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="App\Form\Type\LsItemParentType" class="App\Form\Type\LsItemParentType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LsItemType" class="App\Form\Type\LsItemType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\MirroredFrameworkDTOType" class="App\Form\Type\MirroredFrameworkDTOType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\MirroredServerDTOType" class="App\Form\Type\MirroredServerDTOType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\NewFrameworkType" class="App\Form\Type\NewFrameworkType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\OAuthCredentialDTOType" class="App\Form\Type\OAuthCredentialDTOType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\OrganizationType" class="App\Form\Type\OrganizationType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\RemoteCaseServerType" class="App\Form\Type\RemoteCaseServerType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\SignupType" class="App\Form\Type\SignupType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\UserType" class="App\Form\Type\UserType" public="false" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="App\Handler\Comment\AddCommentHandler" class="App\Handler\Comment\AddCommentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Comment\DeleteCommentHandler" class="App\Handler\Comment\DeleteCommentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Comment\DownvoteCommentHandler" class="App\Handler\Comment\DownvoteCommentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Comment\UpdateCommentHandler" class="App\Handler\Comment\UpdateCommentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Comment\UpvoteCommentHandler" class="App\Handler\Comment\UpvoteCommentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Email\SendAdminNotificationEmailHandler" class="App\Handler\Email\SendAdminNotificationEmailHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="qandidate.toggle.manager"/>
      <argument type="service" id="qandidate.toggle.user_context_factory"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="twig"/>
      <argument>%env(MAIL_FEATURE_FROM_EMAIL)%</argument>
    </service>
    <service id="App\Handler\Email\SendSignupReceivedEmailHandler" class="App\Handler\Email\SendSignupReceivedEmailHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="qandidate.toggle.manager"/>
      <argument type="service" id="qandidate.toggle.user_context_factory"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="twig"/>
      <argument>%env(MAIL_FEATURE_FROM_EMAIL)%</argument>
    </service>
    <service id="App\Handler\Email\SendUserApprovedEmailHandler" class="App\Handler\Email\SendUserApprovedEmailHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="qandidate.toggle.manager"/>
      <argument type="service" id="qandidate.toggle.user_context_factory"/>
      <argument type="service" id="swiftmailer.mailer.default"/>
      <argument type="service" id="twig"/>
      <argument>%env(MAIL_FEATURE_FROM_EMAIL)%</argument>
    </service>
    <service id="App\Handler\Framework\AddAssociationGroupHandler" class="App\Handler\Framework\AddAssociationGroupHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\AddAssociationHandler" class="App\Handler\Framework\AddAssociationHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\AddConceptHandler" class="App\Handler\Framework\AddConceptHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\AddDocumentHandler" class="App\Handler\Framework\AddDocumentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\AddExemplarToItemHandler" class="App\Handler\Framework\AddExemplarToItemHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\AddExternalDocHandler" class="App\Handler\Framework\AddExternalDocHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Framework\AddGradeHandler" class="App\Handler\Framework\AddGradeHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\AddItemHandler" class="App\Handler\Framework\AddItemHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\AddItemTypeHandler" class="App\Handler\Framework\AddItemTypeHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\AddLicenceHandler" class="App\Handler\Framework\AddLicenceHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\AddSubjectHandler" class="App\Handler\Framework\AddSubjectHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\AddTreeAssociationHandler" class="App\Handler\Framework\AddTreeAssociationHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Framework\ChangeItemParentHandler" class="App\Handler\Framework\ChangeItemParentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Framework\CloneFrameworkHandler" class="App\Handler\Framework\CloneFrameworkHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Repository\Framework\LsDocRepository"/>
    </service>
    <service id="App\Handler\Framework\CopyDocumentToItemHandler" class="App\Handler\Framework\CopyDocumentToItemHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Framework\CopyFrameworkHandler" class="App\Handler\Framework\CopyFrameworkHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Framework\CopyItemToDocHandler" class="App\Handler\Framework\CopyItemToDocHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Framework\DeleteAssociationGroupHandler" class="App\Handler\Framework\DeleteAssociationGroupHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\DeleteAssociationHandler" class="App\Handler\Framework\DeleteAssociationHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\DeleteConceptHandler" class="App\Handler\Framework\DeleteConceptHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\DeleteDocumentHandler" class="App\Handler\Framework\DeleteDocumentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\DeleteGradeHandler" class="App\Handler\Framework\DeleteGradeHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\DeleteItemHandler" class="App\Handler\Framework\DeleteItemHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\DeleteItemTypeHandler" class="App\Handler\Framework\DeleteItemTypeHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\DeleteItemWithChildrenHandler" class="App\Handler\Framework\DeleteItemWithChildrenHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\DeleteLicenceHandler" class="App\Handler\Framework\DeleteLicenceHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\DeleteSubjectHandler" class="App\Handler\Framework\DeleteSubjectHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\DeriveDocumentHandler" class="App\Handler\Framework\DeriveDocumentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Framework\LockDocumentHandler" class="App\Handler\Framework\LockDocumentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\LockItemHandler" class="App\Handler\Framework\LockItemHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\RemoveChildHandler" class="App\Handler\Framework\RemoveChildHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Framework\UpdateAssociationGroupHandler" class="App\Handler\Framework\UpdateAssociationGroupHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\UpdateAssociationHandler" class="App\Handler\Framework\UpdateAssociationHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\UpdateConceptHandler" class="App\Handler\Framework\UpdateConceptHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\UpdateDocumentHandler" class="App\Handler\Framework\UpdateDocumentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\UpdateFrameworkHandler" class="App\Handler\Framework\UpdateFrameworkHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\FrameworkUpdater"/>
    </service>
    <service id="App\Handler\Framework\UpdateGradeHandler" class="App\Handler\Framework\UpdateGradeHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\UpdateItemHandler" class="App\Handler\Framework\UpdateItemHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\UpdateItemTypeHandler" class="App\Handler\Framework\UpdateItemTypeHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\UpdateLicenceHandler" class="App\Handler\Framework\UpdateLicenceHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\UpdateSubjectHandler" class="App\Handler\Framework\UpdateSubjectHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Framework\UpdateTreeItemsHandler" class="App\Handler\Framework\UpdateTreeItemsHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="App\Service\FrameworkService"/>
    </service>
    <service id="App\Handler\Import\ImportAsnFromUrlHandler" class="App\Handler\Import\ImportAsnFromUrlHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\AsnImport"/>
    </service>
    <service id="App\Handler\Import\ImportCaseJsonHandler" class="App\Handler\Import\ImportCaseJsonHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\CaseImport"/>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="App\Handler\Import\ImportExcelFileHandler" class="App\Handler\Import\ImportExcelFileHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ExcelImport"/>
    </service>
    <service id="App\Handler\Import\ImportGenericCsvHandler" class="App\Handler\Import\ImportGenericCsvHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Import\MarkImportLogsAsReadHandler" class="App\Handler\Import\MarkImportLogsAsReadHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\Import\ParseCsvGithubDocumentHandler" class="App\Handler\Import\ParseCsvGithubDocumentHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\GithubImport"/>
    </service>
    <service id="App\Handler\User\ActivateUserHandler" class="App\Handler\User\ActivateUserHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\AddFrameworkUserAclHandler" class="App\Handler\User\AddFrameworkUserAclHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\AddFrameworkUsernameAclHandler" class="App\Handler\User\AddFrameworkUsernameAclHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\AddOrganizationByNameHandler" class="App\Handler\User\AddOrganizationByNameHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\AddOrganizationHandler" class="App\Handler\User\AddOrganizationHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\AddUserByNameHandler" class="App\Handler\User\AddUserByNameHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\User\UserManager"/>
    </service>
    <service id="App\Handler\User\AddUserHandler" class="App\Handler\User\AddUserHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\AddUserRoleHandler" class="App\Handler\User\AddUserRoleHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\User\UserManager"/>
    </service>
    <service id="App\Handler\User\ChangePasswordHandler" class="App\Handler\User\ChangePasswordHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\DeleteFrameworkAclHandler" class="App\Handler\User\DeleteFrameworkAclHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\DeleteOrganizationHandler" class="App\Handler\User\DeleteOrganizationHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\DeleteUserHandler" class="App\Handler\User\DeleteUserHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\RemoveUserRoleHandler" class="App\Handler\User\RemoveUserRoleHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\User\UserManager"/>
    </service>
    <service id="App\Handler\User\SetUserPasswordHandler" class="App\Handler\User\SetUserPasswordHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\User\UserManager"/>
    </service>
    <service id="App\Handler\User\SuspendUserHandler" class="App\Handler\User\SuspendUserHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\UpdateOrganizationHandler" class="App\Handler\User\UpdateOrganizationHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Handler\User\UpdateUserHandler" class="App\Handler\User\UpdateUserHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Repository\ChangeEntryRepository" class="App\Repository\ChangeEntryRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CommentRepository" class="App\Repository\CommentRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\AdditionalFieldRepository" class="App\Repository\Framework\AdditionalFieldRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\AssociationSubtypeRepository" class="App\Repository\Framework\AssociationSubtypeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\CfDocQuery" class="App\Repository\Framework\CfDocQuery" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Repository\Framework\CfRubricCriterionLevelRepository" class="App\Repository\Framework\CfRubricCriterionLevelRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\CfRubricCriterionRepository" class="App\Repository\Framework\CfRubricCriterionRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\CfRubricRepository" class="App\Repository\Framework\CfRubricRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\FrameworkTypeRepository" class="App\Repository\Framework\FrameworkTypeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\ImportLogRepository" class="App\Repository\Framework\ImportLogRepository" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\LsAssociationRepository" class="App\Repository\Framework\LsAssociationRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\LsDefAssociationGroupingRepository" class="App\Repository\Framework\LsDefAssociationGroupingRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\LsDefConceptRepository" class="App\Repository\Framework\LsDefConceptRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\LsDefGradeRepository" class="App\Repository\Framework\LsDefGradeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\LsDefItemTypeRepository" class="App\Repository\Framework\LsDefItemTypeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\LsDefLicenceRepository" class="App\Repository\Framework\LsDefLicenceRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\LsDefSubjectRepository" class="App\Repository\Framework\LsDefSubjectRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\LsDocAttributeRepository" class="App\Repository\Framework\LsDocAttributeRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\LsDocRepository" class="App\Repository\Framework\LsDocRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\LsItemRepository" class="App\Repository\Framework\LsItemRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\Mirror\FrameworkRepository" class="App\Repository\Framework\Mirror\FrameworkRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\Mirror\LogRepository" class="App\Repository\Framework\Mirror\LogRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\Mirror\OAuthCredentialRepository" class="App\Repository\Framework\Mirror\OAuthCredentialRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\Mirror\ServerRepository" class="App\Repository\Framework\Mirror\ServerRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\Framework\ObjectLockRepository" class="App\Repository\Framework\ObjectLockRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\SessionRepository" class="App\Repository\SessionRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\User\OrganizationRepository" class="App\Repository\User\OrganizationRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\User\UserDocAclRepository" class="App\Repository\User\UserDocAclRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\User\UserRepository" class="App\Repository\User\UserRepository" public="false" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Security\LoginFormAuthenticator" class="App\Security\LoginFormAuthenticator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\Security\Session\SessionIdleHandler" class="App\Security\Session\SessionIdleHandler" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.token_storage"/>
      <argument>%env(int:SESSION_MAX_IDLE_TIME)%</argument>
    </service>
    <service id="App\Security\UserChecker" class="App\Security\UserChecker" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Security\Voter\AssociationVoter" class="App\Security\Voter\AssociationVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
      <call method="setDecisionManager">
        <argument type="service" id="debug.security.access.decision_manager"/>
      </call>
    </service>
    <service id="App\Security\Voter\CommentVoter" class="App\Security\Voter\CommentVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
      <call method="setToggleManager">
        <argument type="service" id="qandidate.toggle.manager"/>
        <argument type="service" id="qandidate.toggle.user_context_factory"/>
      </call>
    </service>
    <service id="App\Security\Voter\FeatureVoter" class="App\Security\Voter\FeatureVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
    </service>
    <service id="App\Security\Voter\FrameworkAccessVoter" class="App\Security\Voter\FrameworkAccessVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
    </service>
    <service id="App\Security\Voter\FrameworkManageEditorsVoter" class="App\Security\Voter\FrameworkManageEditorsVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
    </service>
    <service id="App\Security\Voter\ItemVoter" class="App\Security\Voter\ItemVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setDecisionManager">
        <argument type="service" id="debug.security.access.decision_manager"/>
      </call>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
    </service>
    <service id="App\Security\Voter\ManageAdditionalFieldVoter" class="App\Security\Voter\ManageAdditionalFieldVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
    </service>
    <service id="App\Security\Voter\ManageLogVoter" class="App\Security\Voter\ManageLogVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
    </service>
    <service id="App\Security\Voter\ManageMirrorVoter" class="App\Security\Voter\ManageMirrorVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
    </service>
    <service id="App\Security\Voter\ManageOrganizationVoter" class="App\Security\Voter\ManageOrganizationVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
    </service>
    <service id="App\Security\Voter\ManageUserVoter" class="App\Security\Voter\ManageUserVoter" public="false" autowire="true" autoconfigure="true">
      <tag name="security.voter"/>
      <call method="setRoleChecker">
        <argument type="service" id="security.role_hierarchy"/>
      </call>
    </service>
    <service id="App\Security\Voter\RoleChecker" class="App\Security\Voter\RoleChecker" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="App\Service\Api1RouteMap" class="App\Service\Api1RouteMap" public="true" autowire="true" autoconfigure="true"/>
    <service id="App\Service\Api1Uris" class="App\Service\Api1Uris" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
      <argument type="service" id="App\Service\UriGenerator"/>
    </service>
    <service id="App\Service\AsnImport" class="App\Service\AsnImport" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="csa_guzzle.client.json"/>
    </service>
    <service id="App\Service\BucketFactory" class="App\Service\BucketFactory" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="parameter_bag"/>
    </service>
    <service id="App\Service\BucketService" class="App\Service\BucketService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="League\Flysystem\Filesystem"/>
      <argument>%env(ATTACHMENT_URL_PREFIX)%</argument>
      <argument>%env(AWS_S3_PREFIX)%</argument>
    </service>
    <service id="App\Service\CaseImport" class="App\Service\CaseImport" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="serializer"/>
      <argument type="service" id="App\DataTransformer\CaseJson\PackageTransformer"/>
    </service>
    <service id="App\Service\CodeceptionBridge" class="App\Service\CodeceptionBridge" public="true" autowire="true" autoconfigure="true">
      <call method="setEntityManager">
        <argument type="service" id="doctrine.orm.default_entity_manager"/>
      </call>
      <call method="setToggles">
        <argument type="service" id="qandidate.toggle.manager"/>
        <argument type="service" id="qandidate.toggle.user_context_factory"/>
      </call>
      <call method="setUserManager">
        <argument type="service" id="App\Service\User\UserManager"/>
      </call>
    </service>
    <service id="App\Service\ExcelExport" class="App\Service\ExcelExport" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Service\ExcelImport" class="App\Service\ExcelImport" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Service\FirebaseFactory" class="App\Service\FirebaseFactory" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Service\FrameworkService" class="App\Service\FrameworkService" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="App\Service\FrameworkUpdater" class="App\Service\FrameworkUpdater" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\GithubImport"/>
    </service>
    <service id="App\Service\GithubImport" class="App\Service\GithubImport" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Service\IdentifiableObjectHelper" class="App\Service\IdentifiableObjectHelper" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Service\MirrorFramework" class="App\Service\MirrorFramework" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\MirrorServer"/>
      <argument type="service" id="doctrine"/>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\Service\MirrorServer" class="App\Service\MirrorServer" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="csa_guzzle.client.json"/>
      <argument type="tagged_iterator" tag="csa_guzzle.middleware"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="App\Service\UriGenerator" class="App\Service\UriGenerator" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="router.default"/>
    </service>
    <service id="App\Service\User\UserManager" class="App\Service\User\UserManager" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\Twig\Extension\CaseUriExtension" class="App\Twig\Extension\CaseUriExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="App\Twig\Extension\CaseUriRuntime" class="App\Twig\Extension\CaseUriRuntime" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.runtime"/>
      <argument type="service" id="App\Service\UriGenerator"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="App\Service\IdentifiableObjectHelper"/>
    </service>
    <service id="App\Validator\Constraints\PasswordField" class="App\Validator\Constraints\PasswordField" public="false" autowire="true" autoconfigure="true"/>
    <service id="App\Validator\Constraints\PasswordFieldValidator" class="App\Validator\Constraints\PasswordFieldValidator" public="false" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="GBProd\UuidNormalizer\UuidNormalizer" class="GBProd\UuidNormalizer\UuidNormalizer" public="false" autowire="true" autoconfigure="true">
      <tag name="serializer.normalizer"/>
    </service>
    <service id="GBProd\UuidNormalizer\UuidDenormalizer" class="GBProd\UuidNormalizer\UuidDenormalizer" public="false" autowire="true" autoconfigure="true">
      <tag name="serializer.normalizer"/>
    </service>
    <service id="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand" public="false" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="League\Flysystem\Filesystem" class="League\Flysystem\Filesystem" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="League\Flysystem\AdapterInterface"/>
    </service>
    <service id="League\Flysystem\AdapterInterface" class="League\Flysystem\AdapterInterface" public="false" autowire="true" autoconfigure="true">
      <factory service="App\Service\BucketFactory" method="filesystem"/>
    </service>
    <service id="Kreait\Firebase\Database" class="Kreait\Firebase\Database" public="false" autowire="true" autoconfigure="true">
      <argument type="service" id="monolog.logger"/>
      <argument>%env(FIREBASE_PROJECT_ID)%</argument>
      <argument>%env(FIREBASE_CLIENT_ID)%</argument>
      <argument>%env(FIREBASE_CLIENT_EMAIL)%</argument>
      <argument>%env(FIREBASE_PRIVATE_KEY)%</argument>
      <argument>%env(FIREBASE_DB_URL)%</argument>
      <factory service="App\Service\FirebaseFactory" method="createFirebaseDatabase"/>
    </service>
    <service id="session.handler.pdo" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler" public="false" autowire="true" autoconfigure="true">
      <argument>mysql:host=%env(MYSQL_HOST)%;port=%env(int:MYSQL_PORT)%;dbname=%env(MYSQL_DATABASE)%</argument>
      <argument type="collection">
        <argument key="db_username">%env(MYSQL_USER)%</argument>
        <argument key="db_password">%env(MYSQL_PASSWORD)%</argument>
        <argument key="db_table">auth_session</argument>
        <argument key="db_id_col">id</argument>
        <argument key="db_connection_options">null</argument>
      </argument>
    </service>
    <service id="salt.cache.external_docs" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" autowire="true" autoconfigure="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument>externalDoc-</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger"/>
      </call>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>php://stdout</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.service_subscriber" id="twig"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.Wbzuv5A.sensio_framework_extra.view.listener"/>
      </call>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage"/>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~OfqmADc" class="Swift_Transport_Esmtp_Auth_NTLMAuthenticator" public="false"/>
    <service id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~OfqmADc" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~OfqmADc" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~OfqmADc" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~OfqmADc"/>
        <argument type="service" id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~OfqmADc"/>
        <argument type="service" id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~OfqmADc"/>
        <argument type="service" id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~OfqmADc"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.command.debug" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand">
      <tag name="console.command" command="debug:swiftmailer"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="swiftmailer.command.new_email" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand">
      <tag name="console.command" command="swiftmailer:email:send"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="swiftmailer.command.send_email" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand">
      <tag name="console.command" command="swiftmailer:spool:send"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default.transport.dynamic" class="Swift_Transport">
      <argument type="collection">
        <argument key="transport">%env(MAILER_TRANSPORT)%</argument>
        <argument key="url">null</argument>
        <argument key="username">%env(MAILER_USER)%</argument>
        <argument key="password">%env(MAILER_PASSWORD)%</argument>
        <argument key="host">%env(MAILER_HOST)%</argument>
        <argument key="port">%env(int:MAILER_PORT)%</argument>
        <argument key="timeout">30</argument>
        <argument key="source_ip">null</argument>
        <argument key="local_domain">null</argument>
        <argument key="encryption">null</argument>
        <argument key="auth_mode">%env(MAILER_AUTH_MODE)%</argument>
        <argument key="command">/usr/sbin/sendmail -bs</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <factory class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SwiftmailerTransportFactory" method="createTransport"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer" public="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.default.spool.memory" class="Swift_MemorySpool" public="false"/>
    <service id="swiftmailer.mailer.default.transport.spool" class="Swift_Transport_SpoolTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool.memory"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="jms_serializer.event_dispatcher" class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
      <argument type="service" id=".service_locator.XpYHIi8"/>
      <call method="setListeners">
        <argument type="collection">
          <argument key="serializer.pre_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerializeTypedProxy</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\Persistence\Proxy</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerializeTypedProxy</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\Common\Persistence\Proxy</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ORM\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\Persistence\Proxy</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\Common\Persistence\Proxy</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>ProxyManager\Proxy\LazyLoadingInterface</argument>
            </argument>
          </argument>
          <argument key="serializer.post_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber" public="false">
      <tag name="jms_serializer.event_subscriber"/>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber" public="false">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id=".service_locator.HG6_wa8"/>
      <argument type="collection">
        <argument key="1" type="collection">
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
          </argument>
          <argument key="JMS\Serializer\Handler\iterable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="Iterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="ArrayIterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="Generator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
        </argument>
        <argument key="2" type="collection">
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromxml</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromxml</argument>
            </argument>
          </argument>
          <argument key="DateTimeInterface" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromXml</argument>
            </argument>
          </argument>
          <argument key="JMS\Serializer\Handler\iterable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterable</argument>
            </argument>
          </argument>
          <argument key="Iterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
          </argument>
          <argument key="ArrayIterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
          </argument>
          <argument key="Generator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeGenerator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeGenerator</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>c</argument>
      <argument>UTC</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.form_error_handler" class="JMS\Serializer\Handler\FormErrorHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
    </service>
    <service id="jms_serializer.iterator_handler" class="JMS\Serializer\Handler\IteratorHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.type_parser" class="JMS\Serializer\Type\Parser" public="false"/>
    <service id="jms_serializer.metadata.file_locator" class="Metadata\Driver\FileLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="jms_serializer.metadata.yaml_driver" class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.xml_driver" class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.annotation_driver" class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.chain_driver" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="jms_serializer.metadata.yaml_driver"/>
        <argument type="service" id="jms_serializer.metadata.xml_driver"/>
        <argument type="service" id="jms_serializer.metadata.annotation_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.type_parser"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_phpcr_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver" public="false">
      <argument></argument>
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.type_parser"/>
    </service>
    <service id="jms_serializer.metadata.typed_properties_driver" class="JMS\Serializer\Metadata\Driver\TypedPropertiesDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.doctrine_type_driver"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.service_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="metadata_driver" type="service" id="jms_serializer.metadata.typed_properties_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.service_locator"/>
      <argument>metadata_driver</argument>
    </service>
    <service id="jms_serializer.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>/var/www/html/var/cache/dev/jms_serializer</argument>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="jms_serializer.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="jms_serializer.version_exclusion_strategy" class="JMS\Serializer\Exclusion\VersionExclusionStrategy" public="false" abstract="true"/>
    <service id="jms_serializer.camel_case_naming_strategy" class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
      <argument>_</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.identical_property_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy" public="false"/>
    <service id="jms_serializer.serialized_name_annotation_strategy" class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
      <argument type="service" id="jms_serializer.camel_case_naming_strategy"/>
    </service>
    <service id="jms_serializer.doctrine_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="string">null</argument>
    </service>
    <service id="jms_serializer.doctrine_phpcr_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.serializer" class="JMS\Serializer\Serializer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="collection">
        <argument key="2" type="service" id="jms_serializer.deserialization_graph_navigator_factory"/>
        <argument key="1" type="service" id="jms_serializer.serialization_graph_navigator_factory"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
      </argument>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.deserialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\DeserializationGraphNavigatorFactory" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.doctrine_object_constructor"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.serialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\SerializationGraphNavigatorFactory" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.expression_evaluator" class="JMS\Serializer\Expression\ExpressionEvaluator">
      <argument type="service" id="jms_serializer.expression_language"/>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
      </argument>
    </service>
    <service id="jms_serializer.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false">
      <call method="registerProvider">
        <argument type="service" id="jms_serializer.expression_language.function_provider"/>
      </call>
    </service>
    <service id="jms_serializer.expression_language.function_provider" class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider" public="false">
      <tag name="jms.expression.function_provider"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer" class="JMS\Serializer\Twig\SerializerRuntimeExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer_runtime_helper" class="JMS\Serializer\Twig\SerializerRuntimeHelper" public="true">
      <tag name="twig.runtime"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.accessor_strategy.default" class="JMS\Serializer\Accessor\DefaultAccessorStrategy" public="false">
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonSerializationVisitorFactory" public="false">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <call method="setOptions">
        <argument>1216</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonDeserializationVisitorFactory" public="false">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlSerializationVisitorFactory" public="false">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
      <call method="setFormatOutput">
        <argument>true</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlDeserializationVisitorFactory" public="false">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
    </service>
    <service id="jms_serializer.configured_serialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="jms_serializer.configured_deserialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter" public="false">
      <tag name="doctrine.dbal.schema_filter" connection="default"/>
      <argument type="collection">
        <argument>sessions</argument>
        <argument>cache_items</argument>
      </argument>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
      <call method="setSchemaAssetsFilter">
        <argument type="service" id="doctrine.dbal.default_schema_asset_filter_manager"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_regex_schema_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\RegexSchemaAssetFilter">
      <tag name="doctrine.dbal.schema_filter" connection="default"/>
      <argument>~^(?!(cache_items|LearningStandards|std_*|map_*|grade_level))~</argument>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.xxFfgCP"/>
      <call method="addEventSubscriber">
        <argument type="service" id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="simplethings_entityaudit.log_revisions_listener"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="simplethings_entityaudit.create_schema_listener"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.tree"/>
      </call>
      <call method="addEventSubscriber">
        <argument type="service" id="stof_doctrine_extensions.listener.timestampable"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="host">%env(MYSQL_HOST)%</argument>
        <argument key="port">%env(int:MYSQL_PORT)%</argument>
        <argument key="dbname">%env(MYSQL_DATABASE)%</argument>
        <argument key="user">%env(MYSQL_USER)%</argument>
        <argument key="password">%env(MYSQL_PASSWORD)%</argument>
        <argument key="charset">utf8mb4</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="serverVersion">5.7</argument>
        <argument key="defaultTableOptions" type="collection">
          <argument key="charset">utf8mb4</argument>
          <argument key="collate">utf8mb4_unicode_ci</argument>
        </argument>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection">
        <argument key="json">string</argument>
        <argument key="uuid_binary">binary</argument>
        <argument key="uuid_binary_ordered_time">binary</argument>
      </argument>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id=".1_ServiceLocator~Ees0kX0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.P59e_jI"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber" class="Symfony\Bridge\Doctrine\SchemaListener\PdoCacheAdapterDoctrineSchemaSubscriber">
      <tag name="doctrine.event_subscriber"/>
      <argument type="collection">
        <argument type="service" id="salt.cache.external_docs"/>
      </argument>
    </service>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
          <argument key="GedmoTree">Gedmo\Tree\Entity</argument>
        </argument>
      </call>
      <call method="setSecondLevelCacheEnabled">
        <argument>false</argument>
      </call>
      <call method="setSecondLevelCacheConfiguration">
        <argument type="service">
          <service class="Doctrine\ORM\Cache\CacheConfiguration">
            <call method="setCacheLogger">
              <argument type="service">
                <service class="Doctrine\ORM\Cache\Logging\CacheLoggerChain">
                  <call method="setLogger">
                    <argument>statistics</argument>
                    <argument type="service">
                      <service class="Doctrine\ORM\Cache\Logging\StatisticsCacheLogger"/>
                    </argument>
                  </call>
                </service>
              </argument>
            </call>
            <call method="setCacheFactory">
              <argument type="service">
                <service class="Doctrine\ORM\Cache\DefaultCacheFactory">
                  <argument type="service" id="doctrine.orm.default_second_level_cache.regions_configuration"/>
                  <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver"/>
                </service>
              </argument>
            </call>
            <call method="setRegionsConfiguration">
              <argument type="service">
                <service class="Doctrine\ORM\Cache\RegionsConfiguration"/>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/var/www/html/var/cache/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/var/www/html/src/Entity</argument>
        <argument>/var/www/html/vendor/gedmo/doctrine-extensions/lib/Gedmo/Tree/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Gedmo\Tree\Entity</argument>
      </call>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.metadata.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.metadata"/>
    </service>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.result"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.query"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="cache.doctrine.orm.default.second_level.region_driver" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.second_level.region_driver.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.second_level.region_driver"/>
    </service>
    <service id="doctrine.orm.default_second_level_cache.cache_configuration" class="Doctrine\ORM\Cache\CacheConfiguration">
      <call method="setCacheLogger">
        <argument type="service">
          <service class="Doctrine\ORM\Cache\Logging\CacheLoggerChain">
            <call method="setLogger">
              <argument>statistics</argument>
              <argument type="service">
                <service class="Doctrine\ORM\Cache\Logging\StatisticsCacheLogger"/>
              </argument>
            </call>
          </service>
        </argument>
      </call>
      <call method="setCacheFactory">
        <argument type="service">
          <service class="Doctrine\ORM\Cache\DefaultCacheFactory">
            <argument type="service" id="doctrine.orm.default_second_level_cache.regions_configuration"/>
            <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver"/>
          </service>
        </argument>
      </call>
      <call method="setRegionsConfiguration">
        <argument type="service">
          <service class="Doctrine\ORM\Cache\RegionsConfiguration"/>
        </argument>
      </call>
    </service>
    <service id="doctrine.orm.default_second_level_cache.regions_configuration" class="Doctrine\ORM\Cache\RegionsConfiguration"/>
    <service id="doctrine.orm.default_second_level_cache.default_cache_factory" class="Doctrine\ORM\Cache\DefaultCacheFactory">
      <argument type="service" id="doctrine.orm.default_second_level_cache.regions_configuration"/>
      <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver"/>
    </service>
    <service id="doctrine.orm.default_second_level_cache.logger_chain" class="Doctrine\ORM\Cache\Logging\CacheLoggerChain">
      <call method="setLogger">
        <argument>statistics</argument>
        <argument type="service">
          <service class="Doctrine\ORM\Cache\Logging\StatisticsCacheLogger"/>
        </argument>
      </call>
    </service>
    <service id="doctrine.orm.default_second_level_cache.logger_statistics" class="Doctrine\ORM\Cache\Logging\StatisticsCacheLogger"/>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.migrations.dependency_factory" class="Doctrine\Migrations\DependencyFactory" public="false">
      <argument type="service" id="doctrine.migrations.configuration_loader"/>
      <argument type="service" id="doctrine.migrations.em_loader"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
      <factory class="Doctrine\Migrations\DependencyFactory" method="fromEntityManager"/>
    </service>
    <service id="doctrine.migrations.configuration_loader" class="Doctrine\Migrations\Configuration\Migration\ExistingConfiguration" public="false">
      <argument type="service" id="doctrine.migrations.configuration"/>
    </service>
    <service id="doctrine.migrations.connection_loader" class="Doctrine\Migrations\Configuration\Connection\ExistingConnection" public="false"/>
    <service id="doctrine.migrations.em_loader" class="Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager" public="false">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.migrations.configuration" class="Doctrine\Migrations\Configuration\Configuration" public="false">
      <call method="addMigrationsDirectory">
        <argument>DoctrineMigrations</argument>
        <argument>/var/www/html/src/Migrations</argument>
      </call>
      <call method="setAllOrNothing">
        <argument>false</argument>
      </call>
      <call method="setCheckDatabasePlatform">
        <argument>true</argument>
      </call>
      <call method="setMetadataStorageConfiguration">
        <argument type="service" id="doctrine.migrations.storage.table_storage"/>
      </call>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Migrations\Tools\Console\Command\DiffCommand">
      <tag name="console.command" command="doctrine:migrations:diff"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:diff</argument>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.sync_metadata_command" class="Doctrine\Migrations\Tools\Console\Command\SyncMetadataCommand">
      <tag name="console.command" command="doctrine:migrations:sync-metadata-storage"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <call method="setName">
        <argument>doctrine:migrations:sync-metadata-storage</argument>
      </call>
    </service>
    <service id="doctrine_migrations.versions_command" class="Doctrine\Migrations\Tools\Console\Command\ListCommand">
      <tag name="console.command" command="doctrine:migrations:list"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:versions</argument>
      <call method="setName">
        <argument>doctrine:migrations:list</argument>
      </call>
    </service>
    <service id="doctrine_migrations.current_command" class="Doctrine\Migrations\Tools\Console\Command\CurrentCommand">
      <tag name="console.command" command="doctrine:migrations:current"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:current</argument>
      <call method="setName">
        <argument>doctrine:migrations:current</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Migrations\Tools\Console\Command\DumpSchemaCommand">
      <tag name="console.command" command="doctrine:migrations:dump-schema"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:dump-schema</argument>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Migrations\Tools\Console\Command\ExecuteCommand">
      <tag name="console.command" command="doctrine:migrations:execute"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:execute</argument>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Migrations\Tools\Console\Command\GenerateCommand">
      <tag name="console.command" command="doctrine:migrations:generate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:generate</argument>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Migrations\Tools\Console\Command\LatestCommand">
      <tag name="console.command" command="doctrine:migrations:latest"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:latest</argument>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Migrations\Tools\Console\Command\MigrateCommand">
      <tag name="console.command" command="doctrine:migrations:migrate"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:migrate</argument>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Migrations\Tools\Console\Command\RollupCommand">
      <tag name="console.command" command="doctrine:migrations:rollup"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:rollup</argument>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Migrations\Tools\Console\Command\StatusCommand">
      <tag name="console.command" command="doctrine:migrations:status"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:status</argument>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Migrations\Tools\Console\Command\UpToDateCommand">
      <tag name="console.command" command="doctrine:migrations:up-to-date"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:up-to-date</argument>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Migrations\Tools\Console\Command\VersionCommand">
      <tag name="console.command" command="doctrine:migrations:version"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:version</argument>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="doctrine.migrations.storage.table_storage" class="Doctrine\Migrations\Metadata\Storage\TableMetadataStorageConfiguration">
      <call method="setTableName">
        <argument>migration_versions</argument>
      </call>
    </service>
    <service id="doctrine.fixtures_load_command" class="Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command" command="doctrine:fixtures:load"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="doctrine.fixtures.loader"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:fixtures:load</argument>
      </call>
    </service>
    <service id="doctrine.fixtures.loader" class="Doctrine\Bundle\FixturesBundle\Loader\SymfonyFixturesLoader" public="false">
      <argument type="service" id="service_container"/>
      <call method="addFixtures">
        <argument type="collection"/>
      </call>
    </service>
    <service id="simplethings_entityaudit.manager" class="SimpleThings\EntityAudit\AuditManager" public="true">
      <argument type="service" id="simplethings_entityaudit.config"/>
    </service>
    <service id="simplethings_entityaudit.reader" class="SimpleThings\EntityAudit\AuditReader" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <factory service="simplethings_entityaudit.manager" method="createAuditReader"/>
    </service>
    <service id="simplethings_entityaudit.log_revisions_listener" class="SimpleThings\EntityAudit\EventListener\LogRevisionsListener">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="simplethings_entityaudit.manager"/>
    </service>
    <service id="simplethings_entityaudit.create_schema_listener" class="SimpleThings\EntityAudit\EventListener\CreateSchemaListener">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="simplethings_entityaudit.manager"/>
    </service>
    <service id="simplethings_entityaudit.username_callable.token_storage" class="SimpleThings\EntityAudit\User\TokenStorageUsernameCallable">
      <argument type="service" id="service_container"/>
    </service>
    <service id="simplethings_entityaudit.config" class="SimpleThings\EntityAudit\AuditConfiguration" public="true">
      <call method="setAuditedEntityClasses">
        <argument>%simplethings.entityaudit.audited_entities%</argument>
      </call>
      <call method="setGlobalIgnoreColumns">
        <argument>%simplethings.entityaudit.global_ignore_columns%</argument>
      </call>
      <call method="setTablePrefix">
        <argument>audit_</argument>
      </call>
      <call method="setTableSuffix">
        <argument></argument>
      </call>
      <call method="setRevisionTableName">
        <argument>audit_revision</argument>
      </call>
      <call method="setRevisionIdFieldType">
        <argument>integer</argument>
      </call>
      <call method="setRevisionFieldName">
        <argument>rev</argument>
      </call>
      <call method="setRevisionTypeFieldName">
        <argument>revtype</argument>
      </call>
      <call method="setUsernameCallable">
        <argument type="service" id="simplethings_entityaudit.username_callable.token_storage"/>
      </call>
    </service>
    <service id="csa_guzzle.middleware.stopwatch" class="Csa\GuzzleHttp\Middleware\Stopwatch\StopwatchMiddleware">
      <tag name="csa_guzzle.middleware" alias="stopwatch"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="csa_guzzle.middleware.history" class="Csa\GuzzleHttp\Middleware\History\HistoryMiddleware">
      <tag name="csa_guzzle.middleware" alias="history" priority="-1000"/>
      <argument type="service" id="csa_guzzle.data_collector.history_bag"/>
    </service>
    <service id="csa_guzzle.middleware.logger" class="Closure">
      <tag name="csa_guzzle.middleware" alias="logger"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="csa_guzzle.logger.message_formatter"/>
      <argument>debug</argument>
      <factory class="GuzzleHttp\Middleware" method="log"/>
    </service>
    <service id="csa_guzzle.logger.message_formatter" class="GuzzleHttp\MessageFormatter" public="false">
      <argument>{hostname} {req_header_User-Agent} - [{date_common_log}] "{method} {target} HTTP/{version}" {code} {res_header_Content-Length}</argument>
    </service>
    <service id="csa_guzzle.data_collector.history_bag" class="Csa\GuzzleHttp\Middleware\History\History" public="true"/>
    <service id="csa_guzzle.data_collector.guzzle" class="Csa\Bundle\GuzzleBundle\DataCollector\GuzzleCollector">
      <tag name="data_collector" template="@CsaGuzzle/Collector/guzzle.html.twig" id="guzzle"/>
      <argument>65536</argument>
      <argument type="service" id="csa_guzzle.data_collector.history_bag"/>
    </service>
    <service id="csa_guzzle.twig.extension" class="Csa\Bundle\GuzzleBundle\Twig\Extension\GuzzleExtension">
      <tag name="twig.extension"/>
    </service>
    <service id="csa_guzzle.client.json" class="GuzzleHttp\Client" public="true">
      <tag name="csa_guzzle.client"/>
      <argument type="collection">
        <argument key="timeout">2</argument>
        <argument key="headers" type="collection">
          <argument key="Accept">application/json</argument>
        </argument>
        <argument key="on_stats" type="collection">
          <argument type="service" id="csa_guzzle.data_collector.history_bag"/>
          <argument>addStats</argument>
        </argument>
        <argument key="handler" type="service">
          <service class="GuzzleHttp\HandlerStack" public="false">
            <call method="push">
              <argument type="service" id="csa_guzzle.middleware.stopwatch"/>
              <argument>stopwatch</argument>
            </call>
            <call method="push">
              <argument type="service" id="csa_guzzle.middleware.logger"/>
              <argument>logger</argument>
            </call>
            <call method="push">
              <argument type="service" id="csa_guzzle.middleware.history"/>
              <argument>history</argument>
            </call>
            <factory class="GuzzleHttp\HandlerStack" method="create"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="nelmio_security.clickjacking_listener" class="Nelmio\SecurityBundle\EventListener\ClickjackingListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>%nelmio_security.clickjacking.paths%</argument>
      <argument type="collection"/>
    </service>
    <service id="nelmio_security.ua_parser" class="Nelmio\SecurityBundle\UserAgent\UserAgentParser" public="false"/>
    <service id="nelmio_security.ua_parser.ua_php" class="Nelmio\SecurityBundle\UserAgent\UAFamilyParser\UAFamilyParser" public="true">
      <argument type="service" id="nelmio_security.ua_parser.ua_php.provider"/>
    </service>
    <service id="nelmio_security.ua_parser.ua_php.provider" class="UAParser\Parser" public="false">
      <factory class="UAParser\Parser" method="create"/>
    </service>
    <service id="nelmio_security.policy_manager" class="Nelmio\SecurityBundle\ContentSecurityPolicy\PolicyManager" public="false"/>
    <service id="nelmio_security.csp_listener" class="Nelmio\SecurityBundle\EventListener\ContentSecurityPolicyListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service">
        <service class="Nelmio\SecurityBundle\ContentSecurityPolicy\DirectiveSet">
          <argument type="service">
            <service class="Nelmio\SecurityBundle\ContentSecurityPolicy\PolicyManager" public="false"/>
          </argument>
          <argument type="collection">
            <argument key="enabled">true</argument>
            <argument key="hosts" type="collection"/>
            <argument key="content_types" type="collection"/>
            <argument key="report_endpoint" type="collection">
              <argument key="log_channel">null</argument>
              <argument key="log_formatter">nelmio_security.csp_report.log_formatter</argument>
              <argument key="log_level">notice</argument>
              <argument key="filters" type="collection">
                <argument key="domains">true</argument>
                <argument key="schemes">true</argument>
                <argument key="browser_bugs">true</argument>
                <argument key="injected_scripts">true</argument>
              </argument>
              <argument key="dismiss" type="collection"/>
            </argument>
            <argument key="compat_headers">true</argument>
            <argument key="report_logger_service">logger</argument>
            <argument key="hash" type="collection">
              <argument key="algorithm">sha256</argument>
            </argument>
          </argument>
          <argument>report</argument>
          <factory class="Nelmio\SecurityBundle\ContentSecurityPolicy\DirectiveSet" method="fromConfig"/>
        </service>
      </argument>
      <argument type="service">
        <service class="Nelmio\SecurityBundle\ContentSecurityPolicy\DirectiveSet">
          <argument type="service">
            <service class="Nelmio\SecurityBundle\ContentSecurityPolicy\PolicyManager" public="false"/>
          </argument>
          <argument type="collection">
            <argument key="enabled">true</argument>
            <argument key="hosts" type="collection"/>
            <argument key="content_types" type="collection"/>
            <argument key="report_endpoint" type="collection">
              <argument key="log_channel">null</argument>
              <argument key="log_formatter">nelmio_security.csp_report.log_formatter</argument>
              <argument key="log_level">notice</argument>
              <argument key="filters" type="collection">
                <argument key="domains">true</argument>
                <argument key="schemes">true</argument>
                <argument key="browser_bugs">true</argument>
                <argument key="injected_scripts">true</argument>
              </argument>
              <argument key="dismiss" type="collection"/>
            </argument>
            <argument key="compat_headers">true</argument>
            <argument key="report_logger_service">logger</argument>
            <argument key="hash" type="collection">
              <argument key="algorithm">sha256</argument>
            </argument>
          </argument>
          <argument>enforce</argument>
          <factory class="Nelmio\SecurityBundle\ContentSecurityPolicy\DirectiveSet" method="fromConfig"/>
        </service>
      </argument>
      <argument type="service" id="nelmio_security.nonce_generator"/>
      <argument type="service" id="nelmio_security.sha_computer"/>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="nelmio_security.csp_report.filter" class="Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\Filter" public="false">
      <call method="addNoiseDetector">
        <argument type="service" id="nelmio_security.csp_report.filter.noise_detector_domains"/>
      </call>
      <call method="addNoiseDetector">
        <argument type="service" id="nelmio_security.csp_report.filter.noise_detector_domains_regex"/>
      </call>
      <call method="addNoiseDetector">
        <argument type="service" id="nelmio_security.csp_report.filter.noise_detector_schemes"/>
      </call>
      <call method="addNoiseDetector">
        <argument type="service" id="nelmio_security.csp_report.filter.noise_detector_injected_scripts"/>
      </call>
      <call method="addNoiseDetector">
        <argument type="service" id="nelmio_security.csp_report.filter.noise_detector_browser_bugs"/>
      </call>
    </service>
    <service id="nelmio_security.csp_report.filter.noise_detector_schemes" class="Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\SchemesNoiseDetector" public="false"/>
    <service id="nelmio_security.csp_report.filter.noise_detector_domains_regex" class="Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\DomainsRegexNoiseDetector" public="false"/>
    <service id="nelmio_security.csp_report.filter.noise_detector_domains" class="Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\DomainsNoiseDetector" public="false"/>
    <service id="nelmio_security.csp_report.filter.noise_detector_custom_rules" class="Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\CustomRulesNoiseDetector" public="false">
      <argument type="collection"/>
    </service>
    <service id="nelmio_security.csp_report.filter.noise_detector_injected_scripts" class="Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\InjectedScriptsNoiseDetector" public="false"/>
    <service id="nelmio_security.csp_report.filter.noise_detector_browser_bugs" class="Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Filter\BrowserBugsNoiseDetector" public="false">
      <argument type="service" id="nelmio_security.ua_parser.ua_php.provider"/>
    </service>
    <service id="nelmio_security.csp_report.log_formatter" class="Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Log\LogFormatter"/>
    <service id="nelmio_security.csp_report.logger" class="Nelmio\SecurityBundle\ContentSecurityPolicy\Violation\Log\Logger">
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="nelmio_security.csp_report.log_formatter"/>
      <argument>notice</argument>
    </service>
    <service id="nelmio_security.csp_reporter_controller" class="Nelmio\SecurityBundle\Controller\ContentSecurityPolicyController" public="true">
      <argument type="service" id="nelmio_security.csp_report.logger"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="nelmio_security.csp_report.filter"/>
    </service>
    <service id="nelmio_security.nonce_generator" class="Nelmio\SecurityBundle\ContentSecurityPolicy\NonceGenerator">
      <argument>16</argument>
    </service>
    <service id="nelmio_security.sha_computer" class="Nelmio\SecurityBundle\ContentSecurityPolicy\ShaComputer">
      <argument>sha256</argument>
    </service>
    <service id="nelmio_security.twig_extension" class="Nelmio\SecurityBundle\Twig\NelmioCSPTwigExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="nelmio_security.csp_listener"/>
      <argument type="service" id="nelmio_security.sha_computer"/>
    </service>
    <service id="nelmio_security.xss_protection_listener" class="Nelmio\SecurityBundle\EventListener\XssProtectionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="collection">
        <argument key="enabled">true</argument>
        <argument key="mode_block">true</argument>
        <argument key="report_uri">null</argument>
      </argument>
      <factory class="Nelmio\SecurityBundle\EventListener\XssProtectionListener" method="fromConfig"/>
    </service>
    <service id="nelmio_security.content_type_listener" class="Nelmio\SecurityBundle\EventListener\ContentTypeListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument>true</argument>
    </service>
    <service id="nelmio_security.external_redirect_listener" class="Nelmio\SecurityBundle\EventListener\ExternalRedirectListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="monolog.logger" channel="security"/>
      <tag name="container.hot_path"/>
      <argument>false</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="nelmio_security.external_redirect.target_validator.whitelist" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="nelmio_security.external_redirect.target_validator.whitelist" class="Nelmio\SecurityBundle\ExternalRedirect\WhitelistBasedTargetValidator" public="false">
      <argument>(?:.*\.google\.com|google\.com)</argument>
    </service>
    <service id="nelmio_security.referrer_policy_listener" class="Nelmio\SecurityBundle\EventListener\ReferrerPolicyListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument>%nelmio_security.referrer_policy.policies%</argument>
    </service>
    <service id="nelmio_cors.cors_listener" class="Nelmio\CorsBundle\EventListener\CorsListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250"/>
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="0"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="nelmio_cors.options_resolver"/>
    </service>
    <service id="nelmio_cors.options_resolver" class="Nelmio\CorsBundle\Options\Resolver" public="false">
      <argument type="collection">
        <argument type="service" id="nelmio_cors.options_provider.config"/>
      </argument>
    </service>
    <service id="nelmio_cors.options_provider.config" class="Nelmio\CorsBundle\Options\ConfigProvider">
      <tag name="nelmio_cors.options_provider" priority="-1"/>
      <argument>%nelmio_cors.map%</argument>
      <argument>%nelmio_cors.defaults%</argument>
    </service>
    <service id="nelmio_cors.cacheable_response_vary_listener" class="Nelmio\CorsBundle\EventListener\CacheableResponseVaryListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onResponse"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="tetranz_select2entity.select2entity_type" class="Tetranz\Select2EntityBundle\Form\Type\Select2EntityType">
      <tag name="form.type" alias="tetranz_select2entity"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="router.default"/>
      <argument>%tetranz_select2_entity.config%</argument>
    </service>
    <service id="tetranz_select2entity.autocomplete_service" class="Tetranz\Select2EntityBundle\Service\AutocompleteService">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="qandidate.toggle.collection.in_memory" class="Qandidate\Toggle\ToggleCollection\InMemoryCollection">
      <argument type="collection">
        <argument key="comments" type="collection">
          <argument key="name">comments</argument>
          <argument key="status">%env(COMMENTS_FEATURE)%</argument>
          <argument key="conditions" type="collection"/>
        </argument>
        <argument key="comment_attachments" type="collection">
          <argument key="name">comment_attachments</argument>
          <argument key="status">%env(COMMENT_ATTACHMENTS)%</argument>
          <argument key="conditions" type="collection"/>
        </argument>
        <argument key="create_account" type="collection">
          <argument key="name">create_account</argument>
          <argument key="status">%env(CREATE_ACCOUNT_FEATURE)%</argument>
          <argument key="conditions" type="collection"/>
        </argument>
        <argument key="email_feature" type="collection">
          <argument key="name">email_feature</argument>
          <argument key="status">%env(USE_MAIL_FEATURE)%</argument>
          <argument key="conditions" type="collection"/>
        </argument>
      </argument>
      <factory service="qandidate.toggle.collection.serializer.in_memory" method="deserialize"/>
    </service>
    <service id="qandidate.toggle.collection.serializer.in_memory" class="Qandidate\Toggle\Serializer\InMemoryCollectionSerializer"/>
    <service id="qandidate.toggle.manager" class="Qandidate\Toggle\ToggleManager" public="true">
      <argument type="service" id="qandidate.toggle.collection.factory"/>
    </service>
    <service id="qandidate.toggle.user_context_factory" class="Qandidate\Bundle\ToggleBundle\Context\UserContextFactory" public="true">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="qandidate.toggle.twig_extension" class="Qandidate\Bundle\ToggleBundle\Twig\ToggleTwigExtension">
      <tag name="twig.extension"/>
      <argument type="service" id="qandidate.toggle.manager"/>
      <argument type="service" id="qandidate.toggle.user_context_factory"/>
    </service>
    <service id="qandidate.toggle.context" class="Qandidate\Toggle\Context">
      <factory service="qandidate.toggle.user_context_factory" method="createContext"/>
    </service>
    <service id="qandidate.toggle.toggle.listener" class="Qandidate\Bundle\ToggleBundle\EventListener\ToggleListener">
      <tag name="kernel.event_listener" event="kernel.controller"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="qandidate.toggle.manager"/>
      <argument type="service" id="qandidate.toggle.context"/>
    </service>
    <service id="qandidate.toggle.data_collector.toggle_collector" class="Qandidate\Bundle\ToggleBundle\DataCollector\ToggleCollector">
      <tag name="data_collector" id="qandidate.toggle_collector" template="@QandidateToggle\data_collector\toggle.html.twig"/>
      <argument type="service" id="qandidate.toggle.manager"/>
      <argument type="service" id="qandidate.toggle.user_context_factory"/>
    </service>
    <service id="qandidate.toggle.collection.factory" class="Qandidate\Toggle\ToggleCollection\InMemoryCollection">
      <argument type="collection">
        <argument key="comments" type="collection">
          <argument key="name">comments</argument>
          <argument key="status">%env(COMMENTS_FEATURE)%</argument>
          <argument key="conditions" type="collection"/>
        </argument>
        <argument key="comment_attachments" type="collection">
          <argument key="name">comment_attachments</argument>
          <argument key="status">%env(COMMENT_ATTACHMENTS)%</argument>
          <argument key="conditions" type="collection"/>
        </argument>
        <argument key="create_account" type="collection">
          <argument key="name">create_account</argument>
          <argument key="status">%env(CREATE_ACCOUNT_FEATURE)%</argument>
          <argument key="conditions" type="collection"/>
        </argument>
        <argument key="email_feature" type="collection">
          <argument key="name">email_feature</argument>
          <argument key="status">%env(USE_MAIL_FEATURE)%</argument>
          <argument key="conditions" type="collection"/>
        </argument>
      </argument>
      <factory service="qandidate.toggle.collection.serializer.in_memory" method="deserialize"/>
    </service>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager" public="false">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument type="service" id="maker.file_link_formatter"/>
      <argument>/var/www/html</argument>
      <argument>/var/www/html/templates</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder" public="false">
      <argument>App</argument>
    </service>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil" public="false">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.file_link_formatter" class="Symfony\Bundle\MakerBundle\Util\MakerFileLinkFormatter" public="false">
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry" public="false">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper" public="false">
      <argument>App\Entity</argument>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator" public="false">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator" public="false">
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <call method="setMangerRegistryClassName">
        <argument>Doctrine\Persistence\ManagerRegistry</argument>
      </call>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder" public="false"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater" public="false"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer" public="false">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_docker_database" class="Symfony\Bundle\MakerBundle\Maker\MakeDockerDatabase" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>/var/www/html</argument>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_message" class="Symfony\Bundle\MakerBundle\Maker\MakeMessage" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Maker\MakeMessengerMiddleware" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="maker.maker.make_reset_password" class="Symfony\Bundle\MakerBundle\Maker\MakeResetPassword" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration" public="false">
      <tag name="maker.command"/>
      <argument>/var/www/html</argument>
    </service>
    <service id="Psy\Configuration" class="Psy\Configuration">
      <call method="setHistoryFile">
        <argument>/var/www/html/var/cache/dev/psysh_history</argument>
      </call>
    </service>
    <service id="psysh.shell" class="Psy\Shell">
      <argument type="service" id="Psy\Configuration"/>
      <call method="setScopeVariables">
        <argument type="collection">
          <argument key="container" type="service" id="test.service_container"/>
          <argument key="kernel" type="service" id="kernel"/>
          <argument key="self" type="service" id="psysh.shell"/>
          <argument key="parameters" type="expression">service('test.service_container').getParameterBag().all()</argument>
        </argument>
      </call>
      <call method="addCommands">
        <argument type="collection"/>
      </call>
    </service>
    <service id="psysh.command.shell_command" class="Fidry\PsyshBundle\Command\PsyshCommand" public="true">
      <tag name="console.command" command="psysh"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="psysh.shell"/>
      <call method="setName">
        <argument>psysh</argument>
      </call>
    </service>
    <service id="psysh.facade" class="Fidry\PsyshBundle\PsyshFacade" public="true">
      <call method="setContainer">
        <argument type="service" id="test.service_container"/>
      </call>
    </service>
    <service id="test.service_container" class="Symfony\Bundle\FrameworkBundle\Test\TestContainer" public="true">
      <argument type="service" id="kernel"/>
      <argument>test.private_services_locator</argument>
    </service>
    <service id="test.private_services_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="true">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Command\Framework\ChangeItemParentCommand" type="service" id="App\Command\Framework\ChangeItemParentCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Command\Framework\CopyItemToDocCommand" type="service" id="App\Command\Framework\CopyItemToDocCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Command\User\AddFrameworkUserAclCommand" type="service" id="App\Command\User\AddFrameworkUserAclCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Command\User\AddFrameworkUsernameAclCommand" type="service" id="App\Command\User\AddFrameworkUsernameAclCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\ClearFirebaseNotificationsCommand" type="service" id="App\Console\ClearFirebaseNotificationsCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\Framework\CfpackageDeleteCommand" type="service" id="App\Console\Framework\CfpackageDeleteCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\Framework\CopyDocumentToItemCommand" type="service" id="App\Console\Framework\CopyDocumentToItemCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\Import\ImportAsnCommand" type="service" id="App\Console\Import\ImportAsnCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\Import\ImportCaseJsonCommand" type="service" id="App\Console\Import\ImportCaseJsonCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\Import\ImportGeneric1Command" type="service" id="App\Console\Import\ImportGeneric1Command" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\Mirror\MirrorFrameworkCommand" type="service" id="App\Console\Mirror\MirrorFrameworkCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\Mirror\MirrorJobCommand" type="service" id="App\Console\Mirror\MirrorJobCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\Mirror\UpdateListCommand" type="service" id="App\Console\Mirror\UpdateListCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\User\OrgAddCommand" type="service" id="App\Console\User\OrgAddCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\User\UserAddCommand" type="service" id="App\Console\User\UserAddCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\User\UserAddRoleCommand" type="service" id="App\Console\User\UserAddRoleCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\User\UserRemoveRoleCommand" type="service" id="App\Console\User\UserRemoveRoleCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Console\User\UserSetPasswordCommand" type="service" id="App\Console\User\UserSetPasswordCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\AssociationGroupingsTransformer" type="service" id="App\DataTransformer\CaseJson\AssociationGroupingsTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\AssociationsTransformer" type="service" id="App\DataTransformer\CaseJson\AssociationsTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\ConceptsTransformer" type="service" id="App\DataTransformer\CaseJson\ConceptsTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\DefinitionsTransformer" type="service" id="App\DataTransformer\CaseJson\DefinitionsTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\DocumentTransformer" type="service" id="App\DataTransformer\CaseJson\DocumentTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\ItemTypesTransformer" type="service" id="App\DataTransformer\CaseJson\ItemTypesTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\ItemsTransformer" type="service" id="App\DataTransformer\CaseJson\ItemsTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\LicencesTransformer" type="service" id="App\DataTransformer\CaseJson\LicencesTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\PackageTransformer" type="service" id="App\DataTransformer\CaseJson\PackageTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\RubricsTransformer" type="service" id="App\DataTransformer\CaseJson\RubricsTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\DataTransformer\CaseJson\SubjectsTransformer" type="service" id="App\DataTransformer\CaseJson\SubjectsTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\Doctrine\Types\DateTimeType" type="service" id="App\Doctrine\Types\DateTimeType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Doctrine\Types\JsonType" type="service" id="App\Doctrine\Types\JsonType" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventListener\ApiExceptionListener" type="service" id="App\EventListener\ApiExceptionListener" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventListener\CommandEventRouter" type="service" id="App\EventListener\CommandEventRouter" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventListener\LoginCaptchaListener" type="service" id="App\EventListener\LoginCaptchaListener" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventListener\NotificationLoggingListener" type="service" id="App\EventListener\NotificationLoggingListener" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventListener\NotificationToFirebaseListener" type="service" id="App\EventListener\NotificationToFirebaseListener" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventListener\SiteVersionListener" type="service" id="App\EventListener\SiteVersionListener" on-invalid="ignore_uninitialized"/>
        <argument key="App\EventListener\VaryOriginListener" type="service" id="App\EventListener\VaryOriginListener" on-invalid="ignore_uninitialized"/>
        <argument key="App\Event\CommandEvent" type="service" id="App\Event\CommandEvent" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Command\ChangeLsItemParentCommand" type="service" id="App\Form\Command\ChangeLsItemParentCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Command\CopyToLsDocCommand" type="service" id="App\Form\Command\CopyToLsDocCommand" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\DTO\ChangeLsItemParentDTO" type="service" id="App\Form\DTO\ChangeLsItemParentDTO" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\DTO\ChangePasswordDTO" type="service" id="App\Form\DTO\ChangePasswordDTO" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\DTO\CopyToLsDocDTO" type="service" id="App\Form\DTO\CopyToLsDocDTO" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\DTO\MirroredFrameworkDTO" type="service" id="App\Form\DTO\MirroredFrameworkDTO" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\DTO\MirroredServerDTO" type="service" id="App\Form\DTO\MirroredServerDTO" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\DTO\OAuthCredentialDTO" type="service" id="App\Form\DTO\OAuthCredentialDTO" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\DataTransformer\EducationAlignmentTransformer" type="service" id="App\Form\DataTransformer\EducationAlignmentTransformer" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\AddAclUserType" type="service" id="App\Form\Type\AddAclUserType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\AddAclUsernameType" type="service" id="App\Form\Type\AddAclUsernameType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\AdditionalFieldType" type="service" id="App\Form\Type\AdditionalFieldType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\ChangePasswordType" type="service" id="App\Form\Type\ChangePasswordType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\CustomFieldsType" type="service" id="App\Form\Type\CustomFieldsType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\DatalistType" type="service" id="App\Form\Type\DatalistType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsAssociationAjaxType" type="service" id="App\Form\Type\LsAssociationAjaxType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsAssociationTreeType" type="service" id="App\Form\Type\LsAssociationTreeType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsAssociationType" type="service" id="App\Form\Type\LsAssociationType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsDefAssociationGroupingType" type="service" id="App\Form\Type\LsDefAssociationGroupingType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsDefConceptType" type="service" id="App\Form\Type\LsDefConceptType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsDefGradeType" type="service" id="App\Form\Type\LsDefGradeType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsDefItemTypeType" type="service" id="App\Form\Type\LsDefItemTypeType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsDefLicenceType" type="service" id="App\Form\Type\LsDefLicenceType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsDefSubjectType" type="service" id="App\Form\Type\LsDefSubjectType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsDocCreateType" type="service" id="App\Form\Type\LsDocCreateType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsDocListType" type="service" id="App\Form\Type\LsDocListType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsDocType" type="service" id="App\Form\Type\LsDocType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsItemParentType" type="service" id="App\Form\Type\LsItemParentType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\LsItemType" type="service" id="App\Form\Type\LsItemType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\MirroredFrameworkDTOType" type="service" id="App\Form\Type\MirroredFrameworkDTOType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\MirroredServerDTOType" type="service" id="App\Form\Type\MirroredServerDTOType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\NewFrameworkType" type="service" id="App\Form\Type\NewFrameworkType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\OAuthCredentialDTOType" type="service" id="App\Form\Type\OAuthCredentialDTOType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\OrganizationType" type="service" id="App\Form\Type\OrganizationType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\RemoteCaseServerType" type="service" id="App\Form\Type\RemoteCaseServerType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\SignupType" type="service" id="App\Form\Type\SignupType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Form\Type\UserType" type="service" id="App\Form\Type\UserType" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Comment\AddCommentHandler" type="service" id="App\Handler\Comment\AddCommentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Comment\DeleteCommentHandler" type="service" id="App\Handler\Comment\DeleteCommentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Comment\DownvoteCommentHandler" type="service" id="App\Handler\Comment\DownvoteCommentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Comment\UpdateCommentHandler" type="service" id="App\Handler\Comment\UpdateCommentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Comment\UpvoteCommentHandler" type="service" id="App\Handler\Comment\UpvoteCommentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Email\SendAdminNotificationEmailHandler" type="service" id="App\Handler\Email\SendAdminNotificationEmailHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Email\SendSignupReceivedEmailHandler" type="service" id="App\Handler\Email\SendSignupReceivedEmailHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Email\SendUserApprovedEmailHandler" type="service" id="App\Handler\Email\SendUserApprovedEmailHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddAssociationGroupHandler" type="service" id="App\Handler\Framework\AddAssociationGroupHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddAssociationHandler" type="service" id="App\Handler\Framework\AddAssociationHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddConceptHandler" type="service" id="App\Handler\Framework\AddConceptHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddDocumentHandler" type="service" id="App\Handler\Framework\AddDocumentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddExemplarToItemHandler" type="service" id="App\Handler\Framework\AddExemplarToItemHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddExternalDocHandler" type="service" id="App\Handler\Framework\AddExternalDocHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddGradeHandler" type="service" id="App\Handler\Framework\AddGradeHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddItemHandler" type="service" id="App\Handler\Framework\AddItemHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddItemTypeHandler" type="service" id="App\Handler\Framework\AddItemTypeHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddLicenceHandler" type="service" id="App\Handler\Framework\AddLicenceHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddSubjectHandler" type="service" id="App\Handler\Framework\AddSubjectHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\AddTreeAssociationHandler" type="service" id="App\Handler\Framework\AddTreeAssociationHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\ChangeItemParentHandler" type="service" id="App\Handler\Framework\ChangeItemParentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\CloneFrameworkHandler" type="service" id="App\Handler\Framework\CloneFrameworkHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\CopyDocumentToItemHandler" type="service" id="App\Handler\Framework\CopyDocumentToItemHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\CopyFrameworkHandler" type="service" id="App\Handler\Framework\CopyFrameworkHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\CopyItemToDocHandler" type="service" id="App\Handler\Framework\CopyItemToDocHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeleteAssociationGroupHandler" type="service" id="App\Handler\Framework\DeleteAssociationGroupHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeleteAssociationHandler" type="service" id="App\Handler\Framework\DeleteAssociationHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeleteConceptHandler" type="service" id="App\Handler\Framework\DeleteConceptHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeleteDocumentHandler" type="service" id="App\Handler\Framework\DeleteDocumentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeleteGradeHandler" type="service" id="App\Handler\Framework\DeleteGradeHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeleteItemHandler" type="service" id="App\Handler\Framework\DeleteItemHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeleteItemTypeHandler" type="service" id="App\Handler\Framework\DeleteItemTypeHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeleteItemWithChildrenHandler" type="service" id="App\Handler\Framework\DeleteItemWithChildrenHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeleteLicenceHandler" type="service" id="App\Handler\Framework\DeleteLicenceHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeleteSubjectHandler" type="service" id="App\Handler\Framework\DeleteSubjectHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\DeriveDocumentHandler" type="service" id="App\Handler\Framework\DeriveDocumentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\LockDocumentHandler" type="service" id="App\Handler\Framework\LockDocumentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\LockItemHandler" type="service" id="App\Handler\Framework\LockItemHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\RemoveChildHandler" type="service" id="App\Handler\Framework\RemoveChildHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateAssociationGroupHandler" type="service" id="App\Handler\Framework\UpdateAssociationGroupHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateAssociationHandler" type="service" id="App\Handler\Framework\UpdateAssociationHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateConceptHandler" type="service" id="App\Handler\Framework\UpdateConceptHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateDocumentHandler" type="service" id="App\Handler\Framework\UpdateDocumentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateFrameworkHandler" type="service" id="App\Handler\Framework\UpdateFrameworkHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateGradeHandler" type="service" id="App\Handler\Framework\UpdateGradeHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateItemHandler" type="service" id="App\Handler\Framework\UpdateItemHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateItemTypeHandler" type="service" id="App\Handler\Framework\UpdateItemTypeHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateLicenceHandler" type="service" id="App\Handler\Framework\UpdateLicenceHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateSubjectHandler" type="service" id="App\Handler\Framework\UpdateSubjectHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Framework\UpdateTreeItemsHandler" type="service" id="App\Handler\Framework\UpdateTreeItemsHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Import\ImportAsnFromUrlHandler" type="service" id="App\Handler\Import\ImportAsnFromUrlHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Import\ImportCaseJsonHandler" type="service" id="App\Handler\Import\ImportCaseJsonHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Import\ImportExcelFileHandler" type="service" id="App\Handler\Import\ImportExcelFileHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Import\ImportGenericCsvHandler" type="service" id="App\Handler\Import\ImportGenericCsvHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Import\MarkImportLogsAsReadHandler" type="service" id="App\Handler\Import\MarkImportLogsAsReadHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\Import\ParseCsvGithubDocumentHandler" type="service" id="App\Handler\Import\ParseCsvGithubDocumentHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\ActivateUserHandler" type="service" id="App\Handler\User\ActivateUserHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\AddFrameworkUserAclHandler" type="service" id="App\Handler\User\AddFrameworkUserAclHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\AddFrameworkUsernameAclHandler" type="service" id="App\Handler\User\AddFrameworkUsernameAclHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\AddOrganizationByNameHandler" type="service" id="App\Handler\User\AddOrganizationByNameHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\AddOrganizationHandler" type="service" id="App\Handler\User\AddOrganizationHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\AddUserByNameHandler" type="service" id="App\Handler\User\AddUserByNameHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\AddUserHandler" type="service" id="App\Handler\User\AddUserHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\AddUserRoleHandler" type="service" id="App\Handler\User\AddUserRoleHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\ChangePasswordHandler" type="service" id="App\Handler\User\ChangePasswordHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\DeleteFrameworkAclHandler" type="service" id="App\Handler\User\DeleteFrameworkAclHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\DeleteOrganizationHandler" type="service" id="App\Handler\User\DeleteOrganizationHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\DeleteUserHandler" type="service" id="App\Handler\User\DeleteUserHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\RemoveUserRoleHandler" type="service" id="App\Handler\User\RemoveUserRoleHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\SetUserPasswordHandler" type="service" id="App\Handler\User\SetUserPasswordHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\SuspendUserHandler" type="service" id="App\Handler\User\SuspendUserHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\UpdateOrganizationHandler" type="service" id="App\Handler\User\UpdateOrganizationHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Handler\User\UpdateUserHandler" type="service" id="App\Handler\User\UpdateUserHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\ChangeEntryRepository" type="service" id="App\Repository\ChangeEntryRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\CommentRepository" type="service" id="App\Repository\CommentRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\AdditionalFieldRepository" type="service" id="App\Repository\Framework\AdditionalFieldRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\AssociationSubtypeRepository" type="service" id="App\Repository\Framework\AssociationSubtypeRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\CfDocQuery" type="service" id="App\Repository\Framework\CfDocQuery" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\CfRubricCriterionLevelRepository" type="service" id="App\Repository\Framework\CfRubricCriterionLevelRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\CfRubricCriterionRepository" type="service" id="App\Repository\Framework\CfRubricCriterionRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\CfRubricRepository" type="service" id="App\Repository\Framework\CfRubricRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\FrameworkTypeRepository" type="service" id="App\Repository\Framework\FrameworkTypeRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\ImportLogRepository" type="service" id="App\Repository\Framework\ImportLogRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\LsAssociationRepository" type="service" id="App\Repository\Framework\LsAssociationRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\LsDefAssociationGroupingRepository" type="service" id="App\Repository\Framework\LsDefAssociationGroupingRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\LsDefConceptRepository" type="service" id="App\Repository\Framework\LsDefConceptRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\LsDefGradeRepository" type="service" id="App\Repository\Framework\LsDefGradeRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\LsDefItemTypeRepository" type="service" id="App\Repository\Framework\LsDefItemTypeRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\LsDefLicenceRepository" type="service" id="App\Repository\Framework\LsDefLicenceRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\LsDefSubjectRepository" type="service" id="App\Repository\Framework\LsDefSubjectRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\LsDocAttributeRepository" type="service" id="App\Repository\Framework\LsDocAttributeRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\LsDocRepository" type="service" id="App\Repository\Framework\LsDocRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\LsItemRepository" type="service" id="App\Repository\Framework\LsItemRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\Mirror\FrameworkRepository" type="service" id="App\Repository\Framework\Mirror\FrameworkRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\Mirror\LogRepository" type="service" id="App\Repository\Framework\Mirror\LogRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\Mirror\OAuthCredentialRepository" type="service" id="App\Repository\Framework\Mirror\OAuthCredentialRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\Mirror\ServerRepository" type="service" id="App\Repository\Framework\Mirror\ServerRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\Framework\ObjectLockRepository" type="service" id="App\Repository\Framework\ObjectLockRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\SessionRepository" type="service" id="App\Repository\SessionRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\User\OrganizationRepository" type="service" id="App\Repository\User\OrganizationRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\User\UserDocAclRepository" type="service" id="App\Repository\User\UserDocAclRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Repository\User\UserRepository" type="service" id="App\Repository\User\UserRepository" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\LoginFormAuthenticator" type="service" id="App\Security\LoginFormAuthenticator" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Session\SessionIdleHandler" type="service" id="App\Security\Session\SessionIdleHandler" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\UserChecker" type="service" id="App\Security\UserChecker" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\AssociationVoter" type="service" id="App\Security\Voter\AssociationVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\CommentVoter" type="service" id="App\Security\Voter\CommentVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\FeatureVoter" type="service" id="App\Security\Voter\FeatureVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\FrameworkAccessVoter" type="service" id="App\Security\Voter\FrameworkAccessVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\FrameworkManageEditorsVoter" type="service" id="App\Security\Voter\FrameworkManageEditorsVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\ItemVoter" type="service" id="App\Security\Voter\ItemVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\ManageAdditionalFieldVoter" type="service" id="App\Security\Voter\ManageAdditionalFieldVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\ManageLogVoter" type="service" id="App\Security\Voter\ManageLogVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\ManageMirrorVoter" type="service" id="App\Security\Voter\ManageMirrorVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\ManageOrganizationVoter" type="service" id="App\Security\Voter\ManageOrganizationVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\ManageUserVoter" type="service" id="App\Security\Voter\ManageUserVoter" on-invalid="ignore_uninitialized"/>
        <argument key="App\Security\Voter\RoleChecker" type="service" id="App\Security\Voter\RoleChecker" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\AsnImport" type="service" id="App\Service\AsnImport" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\BucketFactory" type="service" id="App\Service\BucketFactory" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\BucketService" type="service" id="App\Service\BucketService" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\CaseImport" type="service" id="App\Service\CaseImport" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\ExcelExport" type="service" id="App\Service\ExcelExport" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\ExcelImport" type="service" id="App\Service\ExcelImport" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\FirebaseFactory" type="service" id="App\Service\FirebaseFactory" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\FrameworkService" type="service" id="App\Service\FrameworkService" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\FrameworkUpdater" type="service" id="App\Service\FrameworkUpdater" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\GithubImport" type="service" id="App\Service\GithubImport" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\IdentifiableObjectHelper" type="service" id="App\Service\IdentifiableObjectHelper" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\MirrorFramework" type="service" id="App\Service\MirrorFramework" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\MirrorServer" type="service" id="App\Service\MirrorServer" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\UriGenerator" type="service" id="App\Service\UriGenerator" on-invalid="ignore_uninitialized"/>
        <argument key="App\Service\User\UserManager" type="service" id="App\Service\User\UserManager" on-invalid="ignore_uninitialized"/>
        <argument key="App\Twig\Extension\CaseUriExtension" type="service" id="App\Twig\Extension\CaseUriExtension" on-invalid="ignore_uninitialized"/>
        <argument key="App\Twig\Extension\CaseUriRuntime" type="service" id="App\Twig\Extension\CaseUriRuntime" on-invalid="ignore_uninitialized"/>
        <argument key="App\Validator\Constraints\PasswordField" type="service" id="App\Validator\Constraints\PasswordField" on-invalid="ignore_uninitialized"/>
        <argument key="App\Validator\Constraints\PasswordFieldValidator" type="service" id="App\Validator\Constraints\PasswordFieldValidator" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Annotations\Reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Common\Persistence\ManagerRegistry" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Connection" type="service" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\DBAL\Driver\Connection" type="service" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\ORM\EntityManagerInterface" type="service" id="doctrine.orm.default_entity_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Doctrine\Persistence\ManagerRegistry" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="EasyCorp\EasyLog\EasyLogHandler" type="service" id="EasyCorp\EasyLog\EasyLogHandler" on-invalid="ignore_uninitialized"/>
        <argument key="GBProd\UuidNormalizer\UuidDenormalizer" type="service" id="GBProd\UuidNormalizer\UuidDenormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="GBProd\UuidNormalizer\UuidNormalizer" type="service" id="GBProd\UuidNormalizer\UuidNormalizer" on-invalid="ignore_uninitialized"/>
        <argument key="GuzzleHttp\Client" type="service" id="csa_guzzle.client.json" on-invalid="ignore_uninitialized"/>
        <argument key="GuzzleHttp\ClientInterface" type="service" id="csa_guzzle.client.json" on-invalid="ignore_uninitialized"/>
        <argument key="JMS\Serializer\ArrayTransformerInterface" type="service" id="jms_serializer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="JMS\Serializer\ContextFactory\DeserializationContextFactoryInterface" type="service" id="jms_serializer.configured_deserialization_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="JMS\Serializer\ContextFactory\SerializationContextFactoryInterface" type="service" id="jms_serializer.configured_serialization_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="JMS\Serializer\SerializerInterface" type="service" id="jms_serializer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Kreait\Firebase\Database" type="service" id="Kreait\Firebase\Database" on-invalid="ignore_uninitialized"/>
        <argument key="League\Flysystem\AdapterInterface" type="service" id="League\Flysystem\AdapterInterface" on-invalid="ignore_uninitialized"/>
        <argument key="League\Flysystem\Filesystem" type="service" id="League\Flysystem\Filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Cache\CacheItemPoolInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface" type="service" id="service_container" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Container\ContainerInterface $parameterBag" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\EventDispatcher\EventDispatcherInterface" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface" type="service" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $cacheLogger" type="service" id="monolog.logger.cache" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $consoleLogger" type="service" id="monolog.logger.console" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $debugLogger" type="service" id="monolog.logger.debug" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $doctrineLogger" type="service" id="monolog.logger.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $eventLogger" type="service" id="monolog.logger.event" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $phpLogger" type="service" id="monolog.logger.php" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $profilerLogger" type="service" id="monolog.logger.profiler" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $requestLogger" type="service" id="monolog.logger.request" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $routerLogger" type="service" id="monolog.logger.router" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $securityLogger" type="service" id="monolog.logger.security" on-invalid="ignore_uninitialized"/>
        <argument key="Psr\Log\LoggerInterface $translationLogger" type="service" id="monolog.logger.translation" on-invalid="ignore_uninitialized"/>
        <argument key="Psy\Configuration" type="service" id="Psy\Configuration" on-invalid="ignore_uninitialized"/>
        <argument key="Qandidate\Toggle\ContextFactory" type="service" id="qandidate.toggle.user_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Qandidate\Toggle\ToggleManager" type="service" id="qandidate.toggle.manager" on-invalid="ignore_uninitialized"/>
        <argument key="SessionHandlerInterface" type="service" id="session.handler.pdo" on-invalid="ignore_uninitialized"/>
        <argument key="SimpleThings\EntityAudit\AuditConfiguration" type="service" id="simplethings_entityaudit.config" on-invalid="ignore_uninitialized"/>
        <argument key="SimpleThings\EntityAudit\AuditReader" type="service" id="simplethings_entityaudit.reader" on-invalid="ignore_uninitialized"/>
        <argument key="Swift_Mailer" type="service" id="swiftmailer.mailer.default" on-invalid="ignore_uninitialized"/>
        <argument key="Swift_Spool" type="service" id="swiftmailer.mailer.default.spool.memory" on-invalid="ignore_uninitialized"/>
        <argument key="Swift_Transport" type="service" id="swiftmailer.mailer.default.transport.spool" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand" type="service" id="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand" type="service" id="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand" type="service" id="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Asset\PackageInterface $encorePackage" type="service" id="assets._package_encore" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Asset\Packages" type="service" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Cache\Adapter\AdapterInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ContainerInterface" type="service" id="service_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\DependencyInjection\ReverseContainer" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\EventDispatcher\EventDispatcherInterface" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Filesystem\Filesystem" type="service" id="filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormFactoryInterface" type="service" id="form.factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\FormRegistryInterface" type="service" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" type="service" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\RequestStack" type="service" id="request_stack" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" type="service" id="session.flash_bag" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\SessionInterface" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" type="service" id="session.storage.native" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpFoundation\UrlHelper" type="service" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Config\FileLocator" type="service" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" type="service" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\HttpKernelInterface" type="service" id="http_kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\KernelInterface" type="service" id="kernel" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\HttpKernel\UriSigner" type="service" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyAccess\PropertyAccessorInterface" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" type="service" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" type="service" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Generator\UrlGeneratorInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\Matcher\UrlMatcherInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContext" type="service" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RequestContextAwareInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Routing\RouterInterface" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" type="service" id="security.authentication.manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" type="service" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" type="service" id="security.authorization_checker" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" type="service" id="security.encoder_factory.generic" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" type="service" id="security.user_password_encoder.generic" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" type="service" id="security.role_hierarchy" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Core\Security" type="service" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" type="service" id="security.csrf.token_manager" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" type="service" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" type="service" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" type="service" id="security.authentication.guard_handler" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" type="service" id="security.authentication_utils" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Firewall" type="service" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\HttpUtils" type="service" id="security.http_utils" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" type="service" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\DecoderInterface" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Encoder\EncoderInterface" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" type="service" id="serializer.mapping.cache_class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\NormalizerInterface" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" type="service" id="serializer.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Serializer\SerializerInterface" type="service" id="serializer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Stopwatch\Stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\String\Slugger\SluggerInterface" type="service" id="slugger" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Extractor\ExtractorInterface" type="service" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Reader\TranslationReaderInterface" type="service" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Translation\Writer\TranslationWriterInterface" type="service" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Component\Validator\Validator\ValidatorInterface" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\CacheInterface" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Cache\TagAwareCacheInterface" type="service" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="Symfony\Contracts\Translation\TranslatorInterface" type="service" id="translator.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="Twig\Environment" type="service" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="Twig\Extensions\TextExtension" type="service" id="Twig\Extensions\TextExtension" on-invalid="ignore_uninitialized"/>
        <argument key="Twig_Environment" type="service" id="twig" on-invalid="ignore_uninitialized"/>
        <argument key="annotation_reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cache" type="service" id="annotations.cache" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cache_warmer" type="service" id="annotations.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.cached_reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.dummy_registry" type="service" id="annotations.dummy_registry" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.filesystem_cache" type="service" id="annotations.filesystem_cache" on-invalid="ignore_uninitialized"/>
        <argument key="annotations.reader" type="service" id="annotations.reader" on-invalid="ignore_uninitialized"/>
        <argument key="argument_metadata_factory" type="service" id="argument_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver" type="service" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.controller_locator" type="service" id=".service_locator.gmOuYak" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.default" type="service" id="debug.argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.not_tagged_controller" type="service" id="debug.argument_resolver.not_tagged_controller" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request" type="service" id="debug.argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.request_attribute" type="service" id="debug.argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.service" type="service" id="debug.argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.session" type="service" id="debug.argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="argument_resolver.variadic" type="service" id="debug.argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
        <argument key="assets._default_package" type="service" id="assets._default_package" on-invalid="ignore_uninitialized"/>
        <argument key="assets._package_encore" type="service" id="assets._package_encore" on-invalid="ignore_uninitialized"/>
        <argument key="assets._version__default" type="service" id="assets._version__default" on-invalid="ignore_uninitialized"/>
        <argument key="assets._version_encore" type="service" id="assets._version_encore" on-invalid="ignore_uninitialized"/>
        <argument key="assets.context" type="service" id="assets.context" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_package" type="service" id="assets.empty_package" on-invalid="ignore_uninitialized"/>
        <argument key="assets.empty_version_strategy" type="service" id="assets.empty_version_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="assets.packages" type="service" id="assets.packages" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations.recorder_inner" type="service" id="cache.annotations.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.recorder_inner" type="service" id="cache.app.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app.taggable" type="service" id="cache.app.taggable" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_clearer" type="service" id="cache.default_clearer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_marshaller" type="service" id="cache.default_marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_memcached_provider" type="service" id=".cache_connection.JKE6keX" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_pdo_provider" type="service" id="doctrine.dbal.default_connection" on-invalid="ignore_uninitialized"/>
        <argument key="cache.default_redis_provider" type="service" id=".cache_connection.GD_MSZC" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata.recorder_inner" type="service" id="cache.doctrine.orm.default.metadata.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query.recorder_inner" type="service" id="cache.doctrine.orm.default.query.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result.recorder_inner" type="service" id="cache.doctrine.orm.default.result.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.second_level.region_driver" type="service" id="cache.doctrine.orm.default.second_level.region_driver" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.second_level.region_driver.recorder_inner" type="service" id="cache.doctrine.orm.default.second_level.region_driver.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_access" type="service" id="cache.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info.recorder_inner" type="service" id="cache.property_info.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language.recorder_inner" type="service" id="cache.security_expression_language.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer.recorder_inner" type="service" id="cache.serializer.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system.recorder_inner" type="service" id="cache.system.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator.recorder_inner" type="service" id="cache.validator.recorder_inner" on-invalid="ignore_uninitialized"/>
        <argument key="cache_pool_clearer.cache_warmer" type="service" id="cache_pool_clearer.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="config.resource.self_checking_resource_checker" type="service" id="config.resource.self_checking_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="config_cache_factory" type="service" id="config_cache_factory" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.about" type="service" id="console.command.about" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint" on-invalid="ignore_uninitialized"/>
        <argument key="console.error_listener" type="service" id="console.error_listener" on-invalid="ignore_uninitialized"/>
        <argument key="console.suggest_missing_package_subscriber" type="service" id="console.suggest_missing_package_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="container.env_var_processor" type="service" id="container.env_var_processor" on-invalid="ignore_uninitialized"/>
        <argument key="container.getenv" type="service" id="container.getenv" on-invalid="ignore_uninitialized"/>
        <argument key="controller_resolver" type="service" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="csa_guzzle.data_collector.guzzle" type="service" id="csa_guzzle.data_collector.guzzle" on-invalid="ignore_uninitialized"/>
        <argument key="csa_guzzle.logger.message_formatter" type="service" id="csa_guzzle.logger.message_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="csa_guzzle.middleware.history" type="service" id="csa_guzzle.middleware.history" on-invalid="ignore_uninitialized"/>
        <argument key="csa_guzzle.middleware.logger" type="service" id="csa_guzzle.middleware.logger" on-invalid="ignore_uninitialized"/>
        <argument key="csa_guzzle.middleware.stopwatch" type="service" id="csa_guzzle.middleware.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="csa_guzzle.twig.extension" type="service" id="csa_guzzle.twig.extension" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.ajax" type="service" id="data_collector.ajax" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.cache" type="service" id="data_collector.cache" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.config" type="service" id="data_collector.config" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.doctrine" type="service" id="data_collector.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.events" type="service" id="data_collector.events" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.exception" type="service" id="data_collector.exception" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.form" type="service" id="data_collector.form" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.form.extractor" type="service" id="data_collector.form.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.logger" type="service" id="data_collector.logger" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.memory" type="service" id="data_collector.memory" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.request" type="service" id="data_collector.request" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.router" type="service" id="data_collector.router" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.security" type="service" id="data_collector.security" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.time" type="service" id="data_collector.time" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.translation" type="service" id="data_collector.translation" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.twig" type="service" id="data_collector.twig" on-invalid="ignore_uninitialized"/>
        <argument key="data_collector.validator" type="service" id="data_collector.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver" type="service" id="debug.argument_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.default" type="service" id="debug.argument_resolver.default" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.default.inner" type="service" id="debug.argument_resolver.default.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.inner" type="service" id="debug.argument_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.not_tagged_controller" type="service" id="debug.argument_resolver.not_tagged_controller" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.not_tagged_controller.inner" type="service" id="debug.argument_resolver.not_tagged_controller.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request" type="service" id="debug.argument_resolver.request" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request.inner" type="service" id="debug.argument_resolver.request.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request_attribute" type="service" id="debug.argument_resolver.request_attribute" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.request_attribute.inner" type="service" id="debug.argument_resolver.request_attribute.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.service" type="service" id="debug.argument_resolver.service" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.service.inner" type="service" id="debug.argument_resolver.service.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.session" type="service" id="debug.argument_resolver.session" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.session.inner" type="service" id="debug.argument_resolver.session.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.variadic" type="service" id="debug.argument_resolver.variadic" on-invalid="ignore_uninitialized"/>
        <argument key="debug.argument_resolver.variadic.inner" type="service" id="debug.argument_resolver.variadic.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver" type="service" id="debug.controller_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.controller_resolver.inner" type="service" id="debug.controller_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.debug_handlers_listener" type="service" id="debug.debug_handlers_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.dump_listener" type="service" id="debug.dump_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher.inner" type="service" id="debug.event_dispatcher.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.file_link_formatter" type="service" id="debug.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.file_link_formatter.url_format" type="service" id="debug.file_link_formatter.url_format" on-invalid="ignore_uninitialized"/>
        <argument key="debug.log_processor" type="service" id="debug.log_processor" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager" type="service" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.access.decision_manager.inner" type="service" id="debug.security.access.decision_manager.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.firewall" type="service" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.user_value_resolver" type="service" id="debug.security.user_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.user_value_resolver.inner" type="service" id="debug.security.user_value_resolver.inner" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\AssociationVoter" type="service" id="debug.security.voter.App\Security\Voter\AssociationVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\CommentVoter" type="service" id="debug.security.voter.App\Security\Voter\CommentVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\FeatureVoter" type="service" id="debug.security.voter.App\Security\Voter\FeatureVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\FrameworkAccessVoter" type="service" id="debug.security.voter.App\Security\Voter\FrameworkAccessVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\FrameworkManageEditorsVoter" type="service" id="debug.security.voter.App\Security\Voter\FrameworkManageEditorsVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\ItemVoter" type="service" id="debug.security.voter.App\Security\Voter\ItemVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\ManageAdditionalFieldVoter" type="service" id="debug.security.voter.App\Security\Voter\ManageAdditionalFieldVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\ManageLogVoter" type="service" id="debug.security.voter.App\Security\Voter\ManageLogVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\ManageMirrorVoter" type="service" id="debug.security.voter.App\Security\Voter\ManageMirrorVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\ManageOrganizationVoter" type="service" id="debug.security.voter.App\Security\Voter\ManageOrganizationVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.App\Security\Voter\ManageUserVoter" type="service" id="debug.security.voter.App\Security\Voter\ManageUserVoter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.security.access.authenticated_voter" type="service" id="debug.security.voter.security.access.authenticated_voter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.security.access.expression_voter" type="service" id="debug.security.voter.security.access.expression_voter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.security.access.role_hierarchy_voter" type="service" id="debug.security.voter.security.access.role_hierarchy_voter" on-invalid="ignore_uninitialized"/>
        <argument key="debug.security.voter.vote_listener" type="service" id="debug.security.voter.vote_listener" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator.inner" type="service" id="debug.validator.inner" on-invalid="ignore_uninitialized"/>
        <argument key="dependency_injection.config.container_parameters_resource_checker" type="service" id="dependency_injection.config.container_parameters_resource_checker" on-invalid="ignore_uninitialized"/>
        <argument key="disallow_search_engine_index_response_listener" type="service" id="disallow_search_engine_index_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.connection_factory" type="service" id="doctrine.dbal.connection_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.configuration" type="service" id="doctrine.dbal.default_connection.configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_connection.event_manager" type="service" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_regex_schema_filter" type="service" id="doctrine.dbal.default_regex_schema_filter" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.default_schema_asset_filter_manager" type="service" id="doctrine.dbal.default_schema_asset_filter_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.event_manager" type="service" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logger" type="service" id="doctrine.dbal.logger" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logger.chain.default" type="service" id="doctrine.dbal.logger.chain.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.logger.profiling.default" type="service" id="doctrine.dbal.logger.profiling.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.dbal.well_known_schema_asset_filter" type="service" id="doctrine.dbal.well_known_schema_asset_filter" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.fixtures.loader" type="service" id="doctrine.fixtures.loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.fixtures_load_command" type="service" id="doctrine.fixtures_load_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.configuration" type="service" id="doctrine.migrations.configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.configuration_loader" type="service" id="doctrine.migrations.configuration_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.connection_loader" type="service" id="doctrine.migrations.connection_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.dependency_factory" type="service" id="doctrine.migrations.dependency_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.em_loader" type="service" id="doctrine.migrations.em_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.metadata_storage" type="service" id="doctrine.migrations.storage.table_storage" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.migrations.storage.table_storage" type="service" id="doctrine.migrations.storage.table_storage" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.container_repository_factory" type="service" id="doctrine.orm.container_repository_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_annotation_metadata_driver" type="service" id="doctrine.orm.default_annotation_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_configuration" type="service" id="doctrine.orm.default_configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_listener_resolver" type="service" id="doctrine.orm.default_entity_listener_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.event_manager" type="service" id="doctrine.dbal.default_connection.event_manager" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.property_info_extractor" type="service" id="doctrine.orm.default_entity_manager.property_info_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_entity_manager.validator_loader" type="service" id="doctrine.orm.default_entity_manager.validator_loader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_manager_configurator" type="service" id="doctrine.orm.default_manager_configurator" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_cache" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_metadata_driver" type="service" id="doctrine.orm.default_metadata_driver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_query_cache" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_result_cache" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_second_level_cache.cache_configuration" type="service" id="doctrine.orm.default_second_level_cache.cache_configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_second_level_cache.default_cache_factory" type="service" id="doctrine.orm.default_second_level_cache.default_cache_factory" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_second_level_cache.logger_chain" type="service" id="doctrine.orm.default_second_level_cache.logger_chain" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_second_level_cache.logger_statistics" type="service" id="doctrine.orm.default_second_level_cache.logger_statistics" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_second_level_cache.region_cache_driver" type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.default_second_level_cache.regions_configuration" type="service" id="doctrine.orm.default_second_level_cache.regions_configuration" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber" type="service" id="doctrine.orm.listeners.pdo_cache_adapter_doctrine_schema_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.listeners.resolve_target_entity" type="service" id="doctrine.orm.listeners.resolve_target_entity" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.metadata.annotation_reader" type="service" id="annotations.cached_reader" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.default" type="service" id="doctrine.orm.naming_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore" type="service" id="doctrine.orm.naming_strategy.underscore" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.naming_strategy.underscore_number_aware" type="service" id="doctrine.orm.naming_strategy.underscore_number_aware" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.proxy_cache_warmer" type="service" id="doctrine.orm.proxy_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.ansi" type="service" id="doctrine.orm.quote_strategy.ansi" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.quote_strategy.default" type="service" id="doctrine.orm.quote_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.orm.validator_initializer" type="service" id="doctrine.orm.validator_initializer" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine.twig.doctrine_extension" type="service" id="doctrine.twig.doctrine_extension" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.current_command" type="service" id="doctrine_migrations.current_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.diff_command" type="service" id="doctrine_migrations.diff_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service" id="doctrine_migrations.dump_schema_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.execute_command" type="service" id="doctrine_migrations.execute_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.generate_command" type="service" id="doctrine_migrations.generate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.latest_command" type="service" id="doctrine_migrations.latest_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.migrate_command" type="service" id="doctrine_migrations.migrate_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.rollup_command" type="service" id="doctrine_migrations.rollup_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.status_command" type="service" id="doctrine_migrations.status_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service" id="doctrine_migrations.sync_metadata_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service" id="doctrine_migrations.up_to_date_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.version_command" type="service" id="doctrine_migrations.version_command" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine_migrations.versions_command" type="service" id="doctrine_migrations.versions_command" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.html" type="service" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="error_handler.error_renderer.serializer" type="service" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer" type="service" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.html" type="service" id="twig.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="error_renderer.serializer" type="service" id="error_handler.error_renderer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="esi" type="service" id="esi" on-invalid="ignore_uninitialized"/>
        <argument key="esi_listener" type="service" id="esi_listener" on-invalid="ignore_uninitialized"/>
        <argument key="exception_listener" type="service" id="exception_listener" on-invalid="ignore_uninitialized"/>
        <argument key="file_locator" type="service" id="file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.default" type="service" id="form.choice_list_factory.default" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.property_access" type="service" id="form.choice_list_factory.property_access" on-invalid="ignore_uninitialized"/>
        <argument key="form.extension" type="service" id="form.extension" on-invalid="ignore_uninitialized"/>
        <argument key="form.property_accessor" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="form.registry" type="service" id="form.registry" on-invalid="ignore_uninitialized"/>
        <argument key="form.resolved_type_factory" type="service" id="form.resolved_type_factory" on-invalid="ignore_uninitialized"/>
        <argument key="form.server_params" type="service" id="form.server_params" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.choice" type="service" id="form.type.choice" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.color" type="service" id="form.type.color" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.form" type="service" id="form.type.form" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.csrf" type="service" id="form.type_extension.csrf" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.data_collector" type="service" id="form.type_extension.form.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.http_foundation" type="service" id="form.type_extension.form.http_foundation" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.request_handler" type="service" id="form.type_extension.form.request_handler" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.transformation_failure_handling" type="service" id="form.type_extension.form.transformation_failure_handling" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.form.validator" type="service" id="form.type_extension.form.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.repeated.validator" type="service" id="form.type_extension.repeated.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.submit.validator" type="service" id="form.type_extension.submit.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_extension.upload.validator" type="service" id="form.type_extension.upload.validator" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.doctrine" type="service" id="form.type_guesser.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type_guesser.validator" type="service" id="form.type_guesser.validator" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.handler" type="service" id="fragment.handler" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.listener" type="service" id="fragment.listener" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.renderer.esi" type="service" id="fragment.renderer.esi" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.renderer.hinclude" type="service" id="fragment.renderer.hinclude" on-invalid="ignore_uninitialized"/>
        <argument key="fragment.renderer.inline" type="service" id="fragment.renderer.inline" on-invalid="ignore_uninitialized"/>
        <argument key="framework_extra_bundle.argument_name_convertor" type="service" id="framework_extra_bundle.argument_name_convertor" on-invalid="ignore_uninitialized"/>
        <argument key="framework_extra_bundle.date_time_param_converter" type="service" id="framework_extra_bundle.date_time_param_converter" on-invalid="ignore_uninitialized"/>
        <argument key="framework_extra_bundle.event.is_granted" type="service" id="framework_extra_bundle.event.is_granted" on-invalid="ignore_uninitialized"/>
        <argument key="identity_translator" type="service" id="identity_translator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.accessor_strategy" type="service" id="jms_serializer.accessor_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.accessor_strategy.default" type="service" id="jms_serializer.accessor_strategy.default" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.array_collection_handler" type="service" id="jms_serializer.array_collection_handler" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.camel_case_naming_strategy" type="service" id="jms_serializer.camel_case_naming_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.configured_deserialization_context_factory" type="service" id="jms_serializer.configured_deserialization_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.configured_serialization_context_factory" type="service" id="jms_serializer.configured_serialization_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service" id="jms_serializer.constraint_violation_handler" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.datetime_handler" type="service" id="jms_serializer.datetime_handler" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.deserialization_graph_navigator_factory" type="service" id="jms_serializer.deserialization_graph_navigator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.doctrine_object_constructor" type="service" id="jms_serializer.doctrine_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.doctrine_object_constructor.inner" type="service" id="jms_serializer.unserialize_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.doctrine_phpcr_object_constructor" type="service" id="jms_serializer.doctrine_phpcr_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service" id="jms_serializer.doctrine_proxy_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.event_dispatcher" type="service" id="jms_serializer.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.expression_evaluator" type="service" id="jms_serializer.expression_evaluator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.expression_language" type="service" id="jms_serializer.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.expression_language.function_provider" type="service" id="jms_serializer.expression_language.function_provider" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.form_error_handler" type="service" id="jms_serializer.form_error_handler" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.handler_registry" type="service" id="jms_serializer.handler_registry" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.identical_property_naming_strategy" type="service" id="jms_serializer.identical_property_naming_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.iterator_handler" type="service" id="jms_serializer.iterator_handler" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.json_deserialization_visitor" type="service" id="jms_serializer.json_deserialization_visitor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.json_serialization_visitor" type="service" id="jms_serializer.json_serialization_visitor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.annotation_driver" type="service" id="jms_serializer.metadata.annotation_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.cache" type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.cache.file_cache" type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.chain_driver" type="service" id="jms_serializer.metadata.chain_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.doctrine_phpcr_type_driver" type="service" id="jms_serializer.metadata.doctrine_phpcr_type_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.doctrine_type_driver" type="service" id="jms_serializer.metadata.doctrine_type_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.doctrine_type_driver.inner" type="service" id="jms_serializer.metadata.chain_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.file_locator" type="service" id="jms_serializer.metadata.file_locator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.lazy_loading_driver" type="service" id="jms_serializer.metadata.lazy_loading_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.service_locator" type="service" id="jms_serializer.metadata.service_locator" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.typed_properties_driver" type="service" id="jms_serializer.metadata.typed_properties_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.typed_properties_driver.inner" type="service" id="jms_serializer.metadata.doctrine_type_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.xml_driver" type="service" id="jms_serializer.metadata.xml_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata.yaml_driver" type="service" id="jms_serializer.metadata.yaml_driver" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.metadata_factory" type="service" id="jms_serializer.metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.naming_strategy" type="service" id="jms_serializer.serialized_name_annotation_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.object_constructor" type="service" id="jms_serializer.doctrine_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.serialization_graph_navigator_factory" type="service" id="jms_serializer.serialization_graph_navigator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.serialized_name_annotation_strategy" type="service" id="jms_serializer.serialized_name_annotation_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.serializer" type="service" id="jms_serializer.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.stopwatch_subscriber" type="service" id="jms_serializer.stopwatch_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.twig_extension.serializer" type="service" id="jms_serializer.twig_extension.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.type_parser" type="service" id="jms_serializer.type_parser" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.unserialize_object_constructor" type="service" id="jms_serializer.unserialize_object_constructor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.xml_deserialization_visitor" type="service" id="jms_serializer.xml_deserialization_visitor" on-invalid="ignore_uninitialized"/>
        <argument key="jms_serializer.xml_serialization_visitor" type="service" id="jms_serializer.xml_serialization_visitor" on-invalid="ignore_uninitialized"/>
        <argument key="locale_aware_listener" type="service" id="locale_aware_listener" on-invalid="ignore_uninitialized"/>
        <argument key="locale_listener" type="service" id="locale_listener" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_auth" type="service" id="maker.auto_command.make_auth" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_command" type="service" id="maker.auto_command.make_command" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_controller" type="service" id="maker.auto_command.make_controller" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_crud" type="service" id="maker.auto_command.make_crud" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_docker_database" type="service" id="maker.auto_command.make_docker_database" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_entity" type="service" id="maker.auto_command.make_entity" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_fixtures" type="service" id="maker.auto_command.make_fixtures" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_form" type="service" id="maker.auto_command.make_form" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_functional_test" type="service" id="maker.auto_command.make_functional_test" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_message" type="service" id="maker.auto_command.make_message" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_messenger_middleware" type="service" id="maker.auto_command.make_messenger_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_migration" type="service" id="maker.auto_command.make_migration" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_registration_form" type="service" id="maker.auto_command.make_registration_form" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_reset_password" type="service" id="maker.auto_command.make_reset_password" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service" id="maker.auto_command.make_serializer_encoder" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service" id="maker.auto_command.make_serializer_normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_subscriber" type="service" id="maker.auto_command.make_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_twig_extension" type="service" id="maker.auto_command.make_twig_extension" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_unit_test" type="service" id="maker.auto_command.make_unit_test" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_user" type="service" id="maker.auto_command.make_user" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_validator" type="service" id="maker.auto_command.make_validator" on-invalid="ignore_uninitialized"/>
        <argument key="maker.auto_command.make_voter" type="service" id="maker.auto_command.make_voter" on-invalid="ignore_uninitialized"/>
        <argument key="maker.autoloader_finder" type="service" id="maker.autoloader_finder" on-invalid="ignore_uninitialized"/>
        <argument key="maker.autoloader_util" type="service" id="maker.autoloader_util" on-invalid="ignore_uninitialized"/>
        <argument key="maker.console_error_listener" type="service" id="maker.console_error_listener" on-invalid="ignore_uninitialized"/>
        <argument key="maker.doctrine_helper" type="service" id="maker.doctrine_helper" on-invalid="ignore_uninitialized"/>
        <argument key="maker.entity_class_generator" type="service" id="maker.entity_class_generator" on-invalid="ignore_uninitialized"/>
        <argument key="maker.event_registry" type="service" id="maker.event_registry" on-invalid="ignore_uninitialized"/>
        <argument key="maker.file_link_formatter" type="service" id="maker.file_link_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="maker.file_manager" type="service" id="maker.file_manager" on-invalid="ignore_uninitialized"/>
        <argument key="maker.generator" type="service" id="maker.generator" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_authenticator" type="service" id="maker.maker.make_authenticator" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_command" type="service" id="maker.maker.make_command" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_controller" type="service" id="maker.maker.make_controller" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_crud" type="service" id="maker.maker.make_crud" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_docker_database" type="service" id="maker.maker.make_docker_database" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_entity" type="service" id="maker.maker.make_entity" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_fixtures" type="service" id="maker.maker.make_fixtures" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_form" type="service" id="maker.maker.make_form" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_functional_test" type="service" id="maker.maker.make_functional_test" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_message" type="service" id="maker.maker.make_message" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_messenger_middleware" type="service" id="maker.maker.make_messenger_middleware" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_migration" type="service" id="maker.maker.make_migration" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_registration_form" type="service" id="maker.maker.make_registration_form" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_reset_password" type="service" id="maker.maker.make_reset_password" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_serializer_encoder" type="service" id="maker.maker.make_serializer_encoder" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_serializer_normalizer" type="service" id="maker.maker.make_serializer_normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_subscriber" type="service" id="maker.maker.make_subscriber" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_twig_extension" type="service" id="maker.maker.make_twig_extension" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_unit_test" type="service" id="maker.maker.make_unit_test" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_user" type="service" id="maker.maker.make_user" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_validator" type="service" id="maker.maker.make_validator" on-invalid="ignore_uninitialized"/>
        <argument key="maker.maker.make_voter" type="service" id="maker.maker.make_voter" on-invalid="ignore_uninitialized"/>
        <argument key="maker.renderer.form_type_renderer" type="service" id="maker.renderer.form_type_renderer" on-invalid="ignore_uninitialized"/>
        <argument key="maker.security_config_updater" type="service" id="maker.security_config_updater" on-invalid="ignore_uninitialized"/>
        <argument key="maker.user_class_builder" type="service" id="maker.user_class_builder" on-invalid="ignore_uninitialized"/>
        <argument key="mime_types" type="service" id="mime_types" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.command.server_log" type="service" id="monolog.command.server_log" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.chrome_php" type="service" id="monolog.formatter.chrome_php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.gelf_message" type="service" id="monolog.formatter.gelf_message" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.html" type="service" id="monolog.formatter.html" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.json" type="service" id="monolog.formatter.json" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.line" type="service" id="monolog.formatter.line" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.loggly" type="service" id="monolog.formatter.loggly" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.logstash" type="service" id="monolog.formatter.logstash" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.normalizer" type="service" id="monolog.formatter.normalizer" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.scalar" type="service" id="monolog.formatter.scalar" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.formatter.wildfire" type="service" id="monolog.formatter.wildfire" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.null_internal" type="service" id="monolog.handler.null_internal" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger" type="service" id="monolog.logger" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.cache" type="service" id="monolog.logger.cache" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.console" type="service" id="monolog.logger.console" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.debug" type="service" id="monolog.logger.debug" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.doctrine" type="service" id="monolog.logger.doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.event" type="service" id="monolog.logger.event" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.php" type="service" id="monolog.logger.php" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.profiler" type="service" id="monolog.logger.profiler" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.request" type="service" id="monolog.logger.request" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.router" type="service" id="monolog.logger.router" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.security" type="service" id="monolog.logger.security" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.logger.translation" type="service" id="monolog.logger.translation" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.processor.psr_log_message" type="service" id="monolog.processor.psr_log_message" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.cacheable_response_vary_listener" type="service" id="nelmio_cors.cacheable_response_vary_listener" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.cors_listener" type="service" id="nelmio_cors.cors_listener" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.options_provider.config" type="service" id="nelmio_cors.options_provider.config" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_cors.options_resolver" type="service" id="nelmio_cors.options_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.clickjacking_listener" type="service" id="nelmio_security.clickjacking_listener" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.content_type_listener" type="service" id="nelmio_security.content_type_listener" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.csp_listener" type="service" id="nelmio_security.csp_listener" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.csp_report.filter" type="service" id="nelmio_security.csp_report.filter" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.csp_report.filter.noise_detector_browser_bugs" type="service" id="nelmio_security.csp_report.filter.noise_detector_browser_bugs" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.csp_report.filter.noise_detector_custom_rules" type="service" id="nelmio_security.csp_report.filter.noise_detector_custom_rules" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.csp_report.filter.noise_detector_domains" type="service" id="nelmio_security.csp_report.filter.noise_detector_domains" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.csp_report.filter.noise_detector_domains_regex" type="service" id="nelmio_security.csp_report.filter.noise_detector_domains_regex" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.csp_report.filter.noise_detector_injected_scripts" type="service" id="nelmio_security.csp_report.filter.noise_detector_injected_scripts" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.csp_report.filter.noise_detector_schemes" type="service" id="nelmio_security.csp_report.filter.noise_detector_schemes" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.csp_report.log_formatter" type="service" id="nelmio_security.csp_report.log_formatter" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.csp_report.logger" type="service" id="nelmio_security.csp_report.logger" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.external_redirect.target_validator" type="service" id="nelmio_security.external_redirect.target_validator.whitelist" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.external_redirect.target_validator.whitelist" type="service" id="nelmio_security.external_redirect.target_validator.whitelist" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.external_redirect_listener" type="service" id="nelmio_security.external_redirect_listener" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.nonce_generator" type="service" id="nelmio_security.nonce_generator" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.policy_manager" type="service" id="nelmio_security.policy_manager" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.referrer_policy_listener" type="service" id="nelmio_security.referrer_policy_listener" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.sha_computer" type="service" id="nelmio_security.sha_computer" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.twig_extension" type="service" id="nelmio_security.twig_extension" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.ua_parser" type="service" id="nelmio_security.ua_parser" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.ua_parser.ua_php.provider" type="service" id="nelmio_security.ua_parser.ua_php.provider" on-invalid="ignore_uninitialized"/>
        <argument key="nelmio_security.xss_protection_listener" type="service" id="nelmio_security.xss_protection_listener" on-invalid="ignore_uninitialized"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore_uninitialized"/>
        <argument key="profiler.storage" type="service" id="profiler.storage" on-invalid="ignore_uninitialized"/>
        <argument key="profiler_listener" type="service" id="profiler_listener" on-invalid="ignore_uninitialized"/>
        <argument key="property_accessor" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info" type="service" id="property_info" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.php_doc_extractor" type="service" id="property_info.php_doc_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.reflection_extractor" type="service" id="property_info.reflection_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="property_info.serializer_extractor" type="service" id="property_info.serializer_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="psysh.shell" type="service" id="psysh.shell" on-invalid="ignore_uninitialized"/>
        <argument key="qandidate.toggle.collection.factory" type="service" id="qandidate.toggle.collection.factory" on-invalid="ignore_uninitialized"/>
        <argument key="qandidate.toggle.collection.in_memory" type="service" id="qandidate.toggle.collection.in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="qandidate.toggle.collection.serializer.in_memory" type="service" id="qandidate.toggle.collection.serializer.in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="qandidate.toggle.context" type="service" id="qandidate.toggle.context" on-invalid="ignore_uninitialized"/>
        <argument key="qandidate.toggle.context_factory" type="service" id="qandidate.toggle.user_context_factory" on-invalid="ignore_uninitialized"/>
        <argument key="qandidate.toggle.data_collector.toggle_collector" type="service" id="qandidate.toggle.data_collector.toggle_collector" on-invalid="ignore_uninitialized"/>
        <argument key="qandidate.toggle.toggle.listener" type="service" id="qandidate.toggle.toggle.listener" on-invalid="ignore_uninitialized"/>
        <argument key="qandidate.toggle.twig_extension" type="service" id="qandidate.toggle.twig_extension" on-invalid="ignore_uninitialized"/>
        <argument key="request.add_request_formats_listener" type="service" id="request.add_request_formats_listener" on-invalid="ignore_uninitialized"/>
        <argument key="response_listener" type="service" id="response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
        <argument key="router.cache_warmer" type="service" id="router.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="router.default" type="service" id="router.default" on-invalid="ignore_uninitialized"/>
        <argument key="router.expression_language_provider" type="service" id="router.expression_language_provider" on-invalid="ignore_uninitialized"/>
        <argument key="router.request_context" type="service" id="router.request_context" on-invalid="ignore_uninitialized"/>
        <argument key="router_listener" type="service" id="router_listener" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation" type="service" id="routing.loader.annotation" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation.directory" type="service" id="routing.loader.annotation.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.annotation.file" type="service" id="routing.loader.annotation.file" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.container" type="service" id="routing.loader.container" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.directory" type="service" id="routing.loader.directory" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.glob" type="service" id="routing.loader.glob" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.php" type="service" id="routing.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.xml" type="service" id="routing.loader.xml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.loader.yml" type="service" id="routing.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="routing.resolver" type="service" id="routing.resolver" on-invalid="ignore_uninitialized"/>
        <argument key="salt.cache.external_docs" type="service" id="salt.cache.external_docs" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.decryption_key" type="service" id="secrets.decryption_key" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.local_vault" type="service" id="secrets.local_vault" on-invalid="ignore_uninitialized"/>
        <argument key="secrets.vault" type="service" id="secrets.vault" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.authenticated_voter" type="service" id="security.access.authenticated_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.decision_manager" type="service" id="debug.security.access.decision_manager" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.expression_voter" type="service" id="security.access.expression_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access.role_hierarchy_voter" type="service" id="security.access.role_hierarchy_voter" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_listener" type="service" id="security.access_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.access_map" type="service" id="security.access_map" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.basic_entry_point" type="service" id="security.authentication.basic_entry_point" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.guard_handler" type="service" id="security.authentication.guard_handler" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.listener.anonymous" type="service" id="security.authentication.listener.anonymous" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.listener.anonymous.main" type="service" id="security.authentication.listener.anonymous.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.listener.guard.main" type="service" id="security.authentication.listener.guard.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.manager" type="service" id="security.authentication.manager" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.provider.anonymous" type="service" id="security.authentication.provider.anonymous" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.provider.anonymous.main" type="service" id="security.authentication.provider.anonymous.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.provider.guard.main" type="service" id="security.authentication.provider.guard.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.retry_entry_point" type="service" id="security.authentication.retry_entry_point" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy" type="service" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy.main" type="service" id="security.authentication.session_strategy" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.session_strategy_noop" type="service" id="security.authentication.session_strategy_noop" on-invalid="ignore_uninitialized"/>
        <argument key="security.authentication.trust_resolver" type="service" id="security.authentication.trust_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.channel_listener" type="service" id="security.channel_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder" on-invalid="ignore_uninitialized"/>
        <argument key="security.context_listener" type="service" id="security.context_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.context_listener.0" type="service" id="security.context_listener.0" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_generator" type="service" id="security.csrf.token_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.csrf.token_storage" type="service" id="security.csrf.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.encoder_factory" type="service" id="security.encoder_factory.generic" on-invalid="ignore_uninitialized"/>
        <argument key="security.encoder_factory.generic" type="service" id="security.encoder_factory.generic" on-invalid="ignore_uninitialized"/>
        <argument key="security.event_dispatcher.main" type="service" id="security.event_dispatcher.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.exception_listener.main" type="service" id="security.exception_listener.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.expression_language" type="service" id="security.expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall" type="service" id="debug.security.firewall" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map" type="service" id="security.firewall.map" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.dev" type="service" id="security.firewall.map.config.dev" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.main" type="service" id="security.firewall.map.config.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.read_api" type="service" id="security.firewall.map.config.read_api" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.config.session_check" type="service" id="security.firewall.map.config.session_check" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.read_api" type="service" id="security.firewall.map.context.read_api" on-invalid="ignore_uninitialized"/>
        <argument key="security.firewall.map.context.session_check" type="service" id="security.firewall.map.context.session_check" on-invalid="ignore_uninitialized"/>
        <argument key="security.helper" type="service" id="security.helper" on-invalid="ignore_uninitialized"/>
        <argument key="security.http_utils" type="service" id="security.http_utils" on-invalid="ignore_uninitialized"/>
        <argument key="security.ldap_locator" type="service" id="security.ldap_locator" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout.listener.csrf_token_clearing" type="service" id="security.logout.listener.csrf_token_clearing" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout.listener.default.main" type="service" id="security.logout.listener.default.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout.listener.session.main" type="service" id="security.logout.listener.session.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout_listener.main" type="service" id="security.logout_listener.main" on-invalid="ignore_uninitialized"/>
        <argument key="security.logout_url_generator" type="service" id="security.logout_url_generator" on-invalid="ignore_uninitialized"/>
        <argument key="security.rememberme.response_listener" type="service" id="security.rememberme.response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="security.rememberme.token.provider.in_memory" type="service" id="security.rememberme.token.provider.in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="security.role_hierarchy" type="service" id="security.role_hierarchy" on-invalid="ignore_uninitialized"/>
        <argument key="security.untracked_token_storage" type="service" id="security.untracked_token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="security.user.provider.concrete.in_memory" type="service" id="security.user.provider.concrete.in_memory" on-invalid="ignore_uninitialized"/>
        <argument key="security.user.provider.concrete.local_db_provider" type="service" id="security.user.provider.concrete.local_db_provider" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker" type="service" id="security.user_checker" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_checker.main" type="service" id="App\Security\UserChecker" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_password_encoder.generic" type="service" id="security.user_password_encoder.generic" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_providers" type="service" id="security.user_providers" on-invalid="ignore_uninitialized"/>
        <argument key="security.user_value_resolver" type="service" id="debug.security.user_value_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.cache.listener" type="service" id="sensio_framework_extra.cache.listener" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.controller.listener" type="service" id="sensio_framework_extra.controller.listener" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.converter.doctrine.orm" type="service" id="sensio_framework_extra.converter.doctrine.orm" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.converter.doctrine.orm.expression_language" type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.converter.doctrine.orm.expression_language.default" type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.converter.listener" type="service" id="sensio_framework_extra.converter.listener" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.converter.manager" type="service" id="sensio_framework_extra.converter.manager" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.security.expression_language" type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.security.expression_language.default" type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.security.listener" type="service" id="sensio_framework_extra.security.listener" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.view.guesser" type="service" id="sensio_framework_extra.view.guesser" on-invalid="ignore_uninitialized"/>
        <argument key="sensio_framework_extra.view.listener" type="service" id="sensio_framework_extra.view.listener" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.array" type="service" id="serializer.denormalizer.array" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.denormalizer.unwrapping" type="service" id="serializer.denormalizer.unwrapping" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.csv" type="service" id="serializer.encoder.csv" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.json" type="service" id="serializer.encoder.json" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.xml" type="service" id="serializer.encoder.xml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.encoder.yaml" type="service" id="serializer.encoder.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache.symfony" type="service" id="serializer.mapping.cache.symfony" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache_class_metadata_factory" type="service" id="serializer.mapping.cache_class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache_class_metadata_factory.inner" type="service" id="serializer.mapping.cache_class_metadata_factory.inner" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.cache_warmer" type="service" id="serializer.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.chain_loader" type="service" id="serializer.mapping.chain_loader" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_discriminator_resolver" type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.mapping.class_metadata_factory" type="service" id="serializer.mapping.cache_class_metadata_factory" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.camel_case_to_snake_case" type="service" id="serializer.name_converter.camel_case_to_snake_case" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.name_converter.metadata_aware" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.constraint_violation_list" type="service" id="serializer.normalizer.constraint_violation_list" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.data_uri" type="service" id="serializer.normalizer.data_uri" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.dateinterval" type="service" id="serializer.normalizer.dateinterval" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetime" type="service" id="serializer.normalizer.datetime" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.datetimezone" type="service" id="serializer.normalizer.datetimezone" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.json_serializable" type="service" id="serializer.normalizer.json_serializable" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.object" type="service" id="serializer.normalizer.object" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.normalizer.problem" type="service" id="serializer.normalizer.problem" on-invalid="ignore_uninitialized"/>
        <argument key="serializer.property_accessor" type="service" id="property_accessor" on-invalid="ignore_uninitialized"/>
        <argument key="session.abstract_handler" type="service" id="session.abstract_handler" on-invalid="ignore_uninitialized"/>
        <argument key="session.attribute_bag" type="service" id="session.attribute_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.flash_bag" type="service" id="session.flash_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler" type="service" id="session.handler.pdo" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.native_file" type="service" id="session.handler.native_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.handler.pdo" type="service" id="session.handler.pdo" on-invalid="ignore_uninitialized"/>
        <argument key="session.marshaller" type="service" id="session.marshaller" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage" type="service" id="session.storage.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.filesystem" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.metadata_bag" type="service" id="session.storage.metadata_bag" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.mock_file" type="service" id="session.storage.mock_file" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.native" type="service" id="session.storage.native" on-invalid="ignore_uninitialized"/>
        <argument key="session.storage.php_bridge" type="service" id="session.storage.php_bridge" on-invalid="ignore_uninitialized"/>
        <argument key="session_listener" type="service" id="session_listener" on-invalid="ignore_uninitialized"/>
        <argument key="simplethings_entityaudit.create_schema_listener" type="service" id="simplethings_entityaudit.create_schema_listener" on-invalid="ignore_uninitialized"/>
        <argument key="simplethings_entityaudit.log_revisions_listener" type="service" id="simplethings_entityaudit.log_revisions_listener" on-invalid="ignore_uninitialized"/>
        <argument key="simplethings_entityaudit.username_callable" type="service" id="simplethings_entityaudit.username_callable.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="simplethings_entityaudit.username_callable.token_storage" type="service" id="simplethings_entityaudit.username_callable.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="slugger" type="service" id="slugger" on-invalid="ignore_uninitialized"/>
        <argument key="stof_doctrine_extensions.listener.timestampable" type="service" id="stof_doctrine_extensions.listener.timestampable" on-invalid="ignore_uninitialized"/>
        <argument key="stof_doctrine_extensions.listener.tree" type="service" id="stof_doctrine_extensions.listener.tree" on-invalid="ignore_uninitialized"/>
        <argument key="streamed_response_listener" type="service" id="streamed_response_listener" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.command.debug" type="service" id="swiftmailer.command.debug" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.command.new_email" type="service" id="swiftmailer.command.new_email" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.command.send_email" type="service" id="swiftmailer.command.send_email" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.data_collector" type="service" id="swiftmailer.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer" type="service" id="swiftmailer.mailer.default" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.spool" type="service" id="swiftmailer.mailer.default.spool.memory" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.spool.memory" type="service" id="swiftmailer.mailer.default.spool.memory" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.transport" type="service" id="swiftmailer.mailer.default.transport.spool" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.transport.dynamic" type="service" id="swiftmailer.mailer.default.transport.dynamic" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.transport.eventdispatcher" type="service" id="swiftmailer.mailer.default.transport.eventdispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.mailer.default.transport.spool" type="service" id="swiftmailer.mailer.default.transport.spool" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.plugin.messagelogger" type="service" id="swiftmailer.mailer.default.plugin.messagelogger" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.spool" type="service" id="swiftmailer.mailer.default.spool.memory" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.transport.failover" type="service" id="swiftmailer.transport.failover" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.transport.real" type="service" id="swiftmailer.mailer.default.transport.dynamic" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.transport.replacementfactory" type="service" id="swiftmailer.transport.replacementfactory" on-invalid="ignore_uninitialized"/>
        <argument key="tetranz_select2entity.autocomplete_service" type="service" id="tetranz_select2entity.autocomplete_service" on-invalid="ignore_uninitialized"/>
        <argument key="tetranz_select2entity.select2entity_type" type="service" id="tetranz_select2entity.select2entity_type" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.csv" type="service" id="translation.dumper.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.ini" type="service" id="translation.dumper.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.json" type="service" id="translation.dumper.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.mo" type="service" id="translation.dumper.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.php" type="service" id="translation.dumper.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.po" type="service" id="translation.dumper.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.qt" type="service" id="translation.dumper.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.res" type="service" id="translation.dumper.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.xliff" type="service" id="translation.dumper.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yaml" type="service" id="translation.dumper.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.dumper.yml" type="service" id="translation.dumper.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor" type="service" id="translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="translation.extractor.php" type="service" id="translation.extractor.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff" on-invalid="ignore_uninitialized"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml" on-invalid="ignore_uninitialized"/>
        <argument key="translation.reader" type="service" id="translation.reader" on-invalid="ignore_uninitialized"/>
        <argument key="translation.warmer" type="service" id="translation.warmer" on-invalid="ignore_uninitialized"/>
        <argument key="translation.writer" type="service" id="translation.writer" on-invalid="ignore_uninitialized"/>
        <argument key="translator.data_collector" type="service" id="translator.data_collector" on-invalid="ignore_uninitialized"/>
        <argument key="translator.data_collector.inner" type="service" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.default" type="service" id="translator.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter" type="service" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.formatter.default" type="service" id="translator.formatter.default" on-invalid="ignore_uninitialized"/>
        <argument key="translator.logging" type="service" id="translator.logging" on-invalid="ignore_uninitialized"/>
        <argument key="twig.app_variable" type="service" id="twig.app_variable" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint" on-invalid="ignore_uninitialized"/>
        <argument key="twig.configurator.environment" type="service" id="twig.configurator.environment" on-invalid="ignore_uninitialized"/>
        <argument key="twig.error_renderer.html" type="service" id="twig.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="twig.error_renderer.html.inner" type="service" id="error_handler.error_renderer.html" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.assets" type="service" id="twig.extension.assets" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.code" type="service" id="twig.extension.code" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug" type="service" id="twig.extension.debug" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.debug.stopwatch" type="service" id="twig.extension.debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.dump" type="service" id="twig.extension.dump" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.expression" type="service" id="twig.extension.expression" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.form" type="service" id="twig.extension.form" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpfoundation" type="service" id="twig.extension.httpfoundation" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.httpkernel" type="service" id="twig.extension.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.logout_url" type="service" id="twig.extension.logout_url" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.profiler" type="service" id="twig.extension.profiler" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.routing" type="service" id="twig.extension.routing" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security" type="service" id="twig.extension.security" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.security_csrf" type="service" id="twig.extension.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.trans" type="service" id="twig.extension.trans" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.weblink" type="service" id="twig.extension.weblink" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.webprofiler" type="service" id="twig.extension.webprofiler" on-invalid="ignore_uninitialized"/>
        <argument key="twig.extension.yaml" type="service" id="twig.extension.yaml" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.engine" type="service" id="twig.form.engine" on-invalid="ignore_uninitialized"/>
        <argument key="twig.form.renderer" type="service" id="twig.form.renderer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader" type="service" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.chain" type="service" id="twig.loader.chain" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.filesystem" type="service" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="twig.loader.native_filesystem" type="service" id="twig.loader.native_filesystem" on-invalid="ignore_uninitialized"/>
        <argument key="twig.missing_extension_suggestor" type="service" id="twig.missing_extension_suggestor" on-invalid="ignore_uninitialized"/>
        <argument key="twig.profile" type="service" id="twig.profile" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.httpkernel" type="service" id="twig.runtime.httpkernel" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime.security_csrf" type="service" id="twig.runtime.security_csrf" on-invalid="ignore_uninitialized"/>
        <argument key="twig.runtime_loader" type="service" id="twig.runtime_loader" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_cache_warmer" type="service" id="twig.template_cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="twig.template_iterator" type="service" id="twig.template_iterator" on-invalid="ignore_uninitialized"/>
        <argument key="twig.translation.extractor" type="service" id="twig.translation.extractor" on-invalid="ignore_uninitialized"/>
        <argument key="uri_signer" type="service" id="uri_signer" on-invalid="ignore_uninitialized"/>
        <argument key="url_helper" type="service" id="url_helper" on-invalid="ignore_uninitialized"/>
        <argument key="validate_request_listener" type="service" id="validate_request_listener" on-invalid="ignore_uninitialized"/>
        <argument key="validator.builder" type="service" id="validator.builder" on-invalid="ignore_uninitialized"/>
        <argument key="validator.email" type="service" id="validator.email" on-invalid="ignore_uninitialized"/>
        <argument key="validator.expression" type="service" id="validator.expression" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache.adapter" type="service" id="validator.mapping.cache.adapter" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.cache_warmer" type="service" id="validator.mapping.cache_warmer" on-invalid="ignore_uninitialized"/>
        <argument key="validator.mapping.class_metadata_factory" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="validator.not_compromised_password" type="service" id="validator.not_compromised_password" on-invalid="ignore_uninitialized"/>
        <argument key="validator.property_info_loader" type="service" id="validator.property_info_loader" on-invalid="ignore_uninitialized"/>
        <argument key="validator.validator_factory" type="service" id="validator.validator_factory" on-invalid="ignore_uninitialized"/>
        <argument key="var_dumper.cli_dumper" type="service" id="var_dumper.contextualized_cli_dumper" on-invalid="ignore_uninitialized"/>
        <argument key="var_dumper.command.server_dump" type="service" id="var_dumper.command.server_dump" on-invalid="ignore_uninitialized"/>
        <argument key="var_dumper.contextualized_cli_dumper" type="service" id="var_dumper.contextualized_cli_dumper" on-invalid="ignore_uninitialized"/>
        <argument key="var_dumper.contextualized_cli_dumper.inner" type="service" id="var_dumper.contextualized_cli_dumper.inner" on-invalid="ignore_uninitialized"/>
        <argument key="var_dumper.dump_server" type="service" id="var_dumper.dump_server" on-invalid="ignore_uninitialized"/>
        <argument key="var_dumper.html_dumper" type="service" id="var_dumper.html_dumper" on-invalid="ignore_uninitialized"/>
        <argument key="var_dumper.server_connection" type="service" id="var_dumper.server_connection" on-invalid="ignore_uninitialized"/>
        <argument key="web_link.add_link_header_listener" type="service" id="web_link.add_link_header_listener" on-invalid="ignore_uninitialized"/>
        <argument key="web_profiler.csp.handler" type="service" id="web_profiler.csp.handler" on-invalid="ignore_uninitialized"/>
        <argument key="web_profiler.debug_toolbar" type="service" id="web_profiler.debug_toolbar" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <tag name="container.no_preload"/>
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/var/www/html/var/cache/dev/App_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="salt.cache.external_docs" type="service" id="salt.cache.external_docs" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="salt.cache.external_docs" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="swiftmailer.email_sender.listener" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.hbcatdF"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="slugger"/>
        <argument type="service" id="translator.default"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor" public="false">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger" public="false">
      <tag name="kernel.locale_aware"/>
      <argument>en</argument>
    </service>
    <service id="container.getenv" class="Closure" public="false">
      <tag name="routing.expression_language_function" function="env"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>getEnv</argument>
      </argument>
      <factory class="Closure" method="fromCallable"/>
    </service>
    <service id="container.env" class="Symfony\Component\String\LazyString" public="false" abstract="true">
      <argument type="service" id="container.getenv"/>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator.bHbll7p"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig" on-invalid="null"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.esi" class="Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="esi"/>
      <argument type="service" id="esi" on-invalid="null"/>
      <argument type="service" id="fragment.renderer.inline"/>
      <argument type="service" id="uri_signer"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~5TZ36aY" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~5TZ36aY" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~5TZ36aY"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/var/www/html</argument>
      <argument type="service" id=".2_~5TZ36aY"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="filesystem"/>
      <argument>/var/www/html</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <tag name="container.no_preload"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand" public="false">
      <tag name="console.command" command="cache:pool:list"/>
      <tag name="container.no_preload"/>
      <argument type="collection">
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.doctrine.orm.default.second_level.region_driver</argument>
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.security_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand" public="false">
      <tag name="console.command" command="lint:container"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <tag name="container.no_preload"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="router.default"/>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>/var/www/html/translations</argument>
      <argument>/var/www/html/templates</argument>
      <argument type="collection">
        <argument>/var/www/html/vendor/symfony/validator/Resources/translations</argument>
        <argument>/var/www/html/vendor/symfony/form/Resources/translations</argument>
        <argument>/var/www/html/vendor/symfony/security-core/Resources/translations</argument>
        <argument>/var/www/html/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/var/www/html/templates</argument>
        <argument>/var/www/html/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/var/www/html/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>/var/www/html/translations</argument>
      <argument>/var/www/html/templates</argument>
      <argument type="collection">
        <argument>/var/www/html/vendor/symfony/validator/Resources/translations</argument>
        <argument>/var/www/html/vendor/symfony/form/Resources/translations</argument>
        <argument>/var/www/html/vendor/symfony/security-core/Resources/translations</argument>
        <argument>/var/www/html/translations</argument>
      </argument>
      <argument type="collection">
        <argument>/var/www/html/templates</argument>
        <argument>/var/www/html/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>/var/www/html/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>Tetranz\Select2EntityBundle\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\Type\AddAclUserType</argument>
        <argument>App\Form\Type\AddAclUsernameType</argument>
        <argument>App\Form\Type\AdditionalFieldType</argument>
        <argument>App\Form\Type\ChangePasswordType</argument>
        <argument>App\Form\Type\CustomFieldsType</argument>
        <argument>App\Form\Type\DatalistType</argument>
        <argument>App\Form\Type\LsAssociationAjaxType</argument>
        <argument>App\Form\Type\LsAssociationTreeType</argument>
        <argument>App\Form\Type\LsAssociationType</argument>
        <argument>App\Form\Type\LsDefAssociationGroupingType</argument>
        <argument>App\Form\Type\LsDefConceptType</argument>
        <argument>App\Form\Type\LsDefGradeType</argument>
        <argument>App\Form\Type\LsDefItemTypeType</argument>
        <argument>App\Form\Type\LsDefLicenceType</argument>
        <argument>App\Form\Type\LsDefSubjectType</argument>
        <argument>App\Form\Type\LsDocCreateType</argument>
        <argument>App\Form\Type\LsDocListType</argument>
        <argument>App\Form\Type\LsDocType</argument>
        <argument>App\Form\Type\LsItemParentType</argument>
        <argument>App\Form\Type\LsItemType</argument>
        <argument>App\Form\Type\MirroredFrameworkDTOType</argument>
        <argument>App\Form\Type\MirroredServerDTOType</argument>
        <argument>App\Form\Type\NewFrameworkType</argument>
        <argument>App\Form\Type\OAuthCredentialDTOType</argument>
        <argument>App\Form\Type\OrganizationType</argument>
        <argument>App\Form\Type\RemoteCaseServerType</argument>
        <argument>App\Form\Type\SignupType</argument>
        <argument>App\Form\Type\UserType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>Tetranz\Select2EntityBundle\Form\Type\Select2EntityType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ColorType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand" public="false">
      <tag name="console.command" command="secrets:set"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand" public="false">
      <tag name="console.command" command="secrets:remove"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand" public="false">
      <tag name="console.command" command="secrets:generate-keys"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand" public="false">
      <tag name="console.command" command="secrets:list"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand" public="false">
      <tag name="console.command" command="secrets:decrypt-to-local"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand" public="false">
      <tag name="console.command" command="secrets:encrypt-from-local"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/html/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/var/www/html/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.doctrine.orm.default.metadata" type="service" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.second_level.region_driver" type="service" id="cache.doctrine.orm.default.second_level.region_driver" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator" public="false"/>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".1_NativeFileSessionHandler~DvV_kmW" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/var/www/html/var/cache/dev/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument type="service" id="session_listener"/>
        <argument>onSessionUsage</argument>
      </argument>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>120</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument type="service" id="session.handler.pdo"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument type="service" id="session.handler.pdo"/>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false">
      <factory service="session" method="getFlashBag"/>
      <deprecated package="symfony/framework-bundle" version="5.1">The "%service_id%" service is deprecated, use "$session-&gt;getFlashBag()" instead.</deprecated>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false">
      <argument>attributes</argument>
      <factory service="session" method="getBag"/>
      <deprecated package="symfony/framework-bundle" version="5.1">The "%service_id%" service is deprecated, use "$session-&gt;getAttributeBag()" instead.</deprecated>
    </service>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/var/www/html/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~DvV_kmW"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler" public="false">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.Kila8KX"/>
      <argument>true</argument>
    </service>
    <service id="session.marshaller" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\IdentityMarshaller" public="false"/>
    <service id="request.add_request_formats_listener" class="Symfony\Component\HttpKernel\EventListener\AddRequestFormatsListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="collection">
        <argument key="jsonapi" type="collection">
          <argument>application/vnd.api+json</argument>
        </argument>
        <argument key="csv" type="collection">
          <argument>text/csv</argument>
          <argument>text/plain</argument>
        </argument>
      </argument>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy" public="false">
      <argument type="service" id=".1_ResolvedFormTypeFactory~LYujkAD"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator.tJNUghM"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.doctrine"/>
        <argument type="service" id="form.type_guesser.validator"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type.color" class="Symfony\Component\Form\Extension\Core\Type\ColorType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection">
        <argument key="encore" type="service" id="assets._package_encore"/>
      </argument>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service">
        <service class="string">
          <factory service="router.request_context" method="getBaseUrl"/>
        </service>
      </argument>
      <argument type="service">
        <service class="bool">
          <factory service="router.request_context" method="isSecure"/>
        </service>
      </argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets.remote_json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\RemoteJsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument type="service" id="http_client"/>
    </service>
    <service id="assets._version__default" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false">
      <argument type="string">190202</argument>
      <argument>%%s?%%s</argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets._version__default"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets._version_encore" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false">
      <argument>/var/www/html/public/build/manifest.json</argument>
    </service>
    <service id="assets._package_encore" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets._version_encore"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/var/www/html/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/var/www/html/var/cache/dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/var/www/html/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.UYjghYd"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader" public="false">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="esi" class="Symfony\Component\HttpKernel\HttpCache\Esi" public="false"/>
    <service id="esi_listener" class="Symfony\Component\HttpKernel\EventListener\SurrogateListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="esi" on-invalid="ignore"/>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.6RweocE"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/html/var/cache/dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.ar.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.az.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.be.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.be.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.bg.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.bg.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.ca.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.ca.xlf</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.cs.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.cs.xlf</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.da.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.da.xlf</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.de.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.el.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.el.xlf</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.en.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.en.xlf</argument>
            <argument>/var/www/html/translations/messages.en.xliff</argument>
            <argument>/var/www/html/translations/messages.en.xliff</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.es.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.et.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.eu.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.eu.xlf</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.fa.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.fa.xlf</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.fi.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.fi.xlf</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.fr.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.gl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.gl.xlf</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.he.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.hr.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.hr.xlf</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.hu.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.hu.xlf</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.hy.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.id.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.it.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.ja.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.lb.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.lt.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.lt.xlf</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.lv.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.mn.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.nb.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.nb.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.nl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.nn.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.nn.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.no.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.no.xlf</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.pl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.pt.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.pt_BR.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.pt_BR.xlf</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.ro.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.ro.xlf</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.ru.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.sk.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.sl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.sl.xlf</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.sr_Cyrl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.sr_Latn.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.sv.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.sv.xlf</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.th.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.tl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.tl.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.tr.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.uk.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.uk.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.vi.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/html/vendor/symfony/form/Resources/translations/validators.zh_CN.xlf</argument>
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.zh_CN.xlf</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>/var/www/html/vendor/symfony/validator/Resources/translations/validators.zh_TW.xlf</argument>
          </argument>
          <argument key="pt_PT" type="collection">
            <argument>/var/www/html/vendor/symfony/security-core/Resources/translations/security.pt_PT.xlf</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>/var/www/html/vendor/symfony/validator/Resources/translations</argument>
          <argument>/var/www/html/vendor/symfony/form/Resources/translations</argument>
          <argument>/var/www/html/vendor/symfony/security-core/Resources/translations</argument>
          <argument>/var/www/html/translations</argument>
          <argument>/var/www/html/translations</argument>
          <argument>/var/www/html/vendor/symfony/monolog-bundle/translations</argument>
          <argument>/var/www/html/vendor/sensio/framework-extra-bundle/src/translations</argument>
          <argument>/var/www/html/vendor/symfony/swiftmailer-bundle/translations</argument>
          <argument>/var/www/html/vendor/jms/serializer-bundle/translations</argument>
          <argument>/var/www/html/vendor/doctrine/doctrine-bundle/translations</argument>
          <argument>/var/www/html/vendor/doctrine/doctrine-migrations-bundle/translations</argument>
          <argument>/var/www/html/vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
          <argument>/var/www/html/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/translations</argument>
          <argument>/var/www/html/vendor/csa/guzzle-bundle/src/translations</argument>
          <argument>/var/www/html/vendor/nelmio/security-bundle/translations</argument>
          <argument>/var/www/html/vendor/nelmio/cors-bundle/translations</argument>
          <argument>/var/www/html/vendor/tetranz/select2entity-bundle/translations</argument>
          <argument>/var/www/html/vendor/qandidate/toggle-bundle/translations</argument>
          <argument>/var/www/html/vendor/symfony/maker-bundle/src/translations</argument>
          <argument>/var/www/html/vendor/theofidry/psysh-bundle/src/translations</argument>
          <argument>/var/www/html/vendor/symfony/framework-bundle/translations</argument>
          <argument>/var/www/html/vendor/symfony/web-profiler-bundle/translations</argument>
          <argument>/var/www/html/vendor/symfony/security-bundle/translations</argument>
          <argument>/var/www/html/vendor/symfony/twig-bundle/translations</argument>
          <argument>/var/www/html/vendor/symfony/debug-bundle/translations</argument>
          <argument>/var/www/html/vendor/antishov/doctrine-extensions-bundle/translations</argument>
          <argument>/var/www/html/vendor/twig/extra-bundle/src/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>vendor/symfony/validator/Resources/translations</argument>
            <argument>vendor/symfony/form/Resources/translations</argument>
            <argument>vendor/symfony/security-core/Resources/translations</argument>
            <argument>translations</argument>
            <argument>translations</argument>
            <argument>vendor/symfony/monolog-bundle/translations</argument>
            <argument>vendor/sensio/framework-extra-bundle/src/translations</argument>
            <argument>vendor/symfony/swiftmailer-bundle/translations</argument>
            <argument>vendor/jms/serializer-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-migrations-bundle/translations</argument>
            <argument>vendor/doctrine/doctrine-fixtures-bundle/translations</argument>
            <argument>vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/translations</argument>
            <argument>vendor/csa/guzzle-bundle/src/translations</argument>
            <argument>vendor/nelmio/security-bundle/translations</argument>
            <argument>vendor/nelmio/cors-bundle/translations</argument>
            <argument>vendor/tetranz/select2entity-bundle/translations</argument>
            <argument>vendor/qandidate/toggle-bundle/translations</argument>
            <argument>vendor/symfony/maker-bundle/src/translations</argument>
            <argument>vendor/theofidry/psysh-bundle/src/translations</argument>
            <argument>vendor/symfony/framework-bundle/translations</argument>
            <argument>vendor/symfony/web-profiler-bundle/translations</argument>
            <argument>vendor/symfony/security-bundle/translations</argument>
            <argument>vendor/symfony/twig-bundle/translations</argument>
            <argument>vendor/symfony/debug-bundle/translations</argument>
            <argument>vendor/antishov/doctrine-extensions-bundle/translations</argument>
            <argument>vendor/twig/extra-bundle/src/translations</argument>
          </argument>
        </argument>
      </argument>
      <argument type="collection"/>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="monolog.logger.translation"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.s2oGJED.translation.warmer"/>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="swiftmailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="csa_guzzle.data_collector.guzzle"/>
      </call>
      <call method="add">
        <argument type="service" id="qandidate.toggle.data_collector.toggle_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:/var/www/html/var/cache/dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/var/www/html/var/cache/dev/App_KernelDevDebugContainer</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector" public="false">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query</argument>
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.second_level.region_driver</argument>
        <argument type="service" id="cache.doctrine.orm.default.second_level.region_driver"/>
      </call>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info</argument>
        <argument type="service" id="cache.property_info"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
    </service>
    <service id="cache_pool_clearer.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\CachePoolClearerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
      </argument>
    </service>
    <service id=".1_ResolvedFormTypeFactory~LYujkAD" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor" public="false"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator" public="false">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/var/www/html</argument>
      <argument type="service" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="App\Security\Session\SessionIdleHandler"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_security.content_type_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_security.external_redirect_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_security.referrer_policy_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>250</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cors_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_cors.cacheable_response_vary_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="qandidate.toggle.toggle.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\ApiExceptionListener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Event\CommandEvent</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\CommandEventRouter"/>
          <argument>routeCommand</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.interactive_login</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\LoginCaptchaListener"/>
          <argument>onSecurityInteractiveLogin</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Event\NotificationEvent</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\NotificationLoggingListener"/>
          <argument>logNotification</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Event\NotificationEvent</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\NotificationToFirebaseListener"/>
          <argument>handleNotification</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\SiteVersionListener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>200</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\VaryOriginListener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-10</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Comment\AddCommentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Comment\AddCommentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Comment\DeleteCommentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Comment\DeleteCommentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Comment\DownvoteCommentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Comment\DownvoteCommentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Comment\UpdateCommentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Comment\UpdateCommentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Comment\UpvoteCommentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Comment\UpvoteCommentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Email\SendAdminNotificationEmailCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Email\SendAdminNotificationEmailHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Email\SendSignupReceivedEmailCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Email\SendSignupReceivedEmailHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Email\SendUserApprovedEmailCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Email\SendUserApprovedEmailHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddAssociationGroupCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddAssociationGroupHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddAssociationCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddAssociationHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddConceptCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddConceptHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddDocumentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddDocumentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddExemplarToItemCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddExemplarToItemHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddExternalDocCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddExternalDocHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddGradeCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddGradeHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddItemCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddItemHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddItemTypeCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddItemTypeHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddLicenceCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddLicenceHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddSubjectCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddSubjectHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\AddTreeAssociationCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\AddTreeAssociationHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\ChangeItemParentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\ChangeItemParentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\CloneFrameworkCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\CloneFrameworkHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\CopyDocumentToItemCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\CopyDocumentToItemHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\CopyFrameworkCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\CopyFrameworkHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\CopyItemToDocCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\CopyItemToDocHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeleteAssociationGroupCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeleteAssociationGroupHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeleteAssociationCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeleteAssociationHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeleteConceptCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeleteConceptHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeleteDocumentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeleteDocumentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeleteGradeCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeleteGradeHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeleteItemCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeleteItemHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeleteItemTypeCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeleteItemTypeHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeleteItemWithChildrenCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeleteItemWithChildrenHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeleteLicenceCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeleteLicenceHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeleteSubjectCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeleteSubjectHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\DeriveDocumentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\DeriveDocumentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\LockDocumentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\LockDocumentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UnlockDocumentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\LockDocumentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\LockItemCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\LockItemHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UnlockItemCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\LockItemHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\RemoveChildCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\RemoveChildHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateAssociationGroupCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateAssociationGroupHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateAssociationCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateAssociationHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateConceptCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateConceptHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateDocumentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateDocumentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateFrameworkCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateFrameworkHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateGradeCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateGradeHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateItemCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateItemHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateItemTypeCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateItemTypeHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateLicenceCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateLicenceHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateSubjectCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateSubjectHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Framework\UpdateTreeItemsCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Framework\UpdateTreeItemsHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Import\ImportAsnFromUrlCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Import\ImportAsnFromUrlHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Import\ImportCaseJsonCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Import\ImportCaseJsonHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Import\ImportExcelFileCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Import\ImportExcelFileHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Import\ImportGenericCsvCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Import\ImportGenericCsvHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Import\MarkImportLogsAsReadCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Import\MarkImportLogsAsReadHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\Import\ParseCsvGithubDocumentCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\Import\ParseCsvGithubDocumentHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\ActivateUserCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\ActivateUserHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\AddFrameworkUserAclCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\AddFrameworkUserAclHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\AddFrameworkUsernameAclCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\AddFrameworkUsernameAclHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\AddOrganizationByNameCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\AddOrganizationByNameHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\AddOrganizationCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\AddOrganizationHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\AddUserByNameCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\AddUserByNameHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\AddUserCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\AddUserHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\AddUserRoleCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\AddUserRoleHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\ChangePasswordCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\ChangePasswordHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\DeleteFrameworkAclCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\DeleteFrameworkAclHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\DeleteOrganizationCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\DeleteOrganizationHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\DeleteUserCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\DeleteUserHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\RemoveUserRoleCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\RemoveUserRoleHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\SetUserPasswordCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\SetUserPasswordHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\SuspendUserCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\SuspendUserHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\UpdateOrganizationCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\UpdateOrganizationHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>App\Command\User\UpdateUserCommand</argument>
        <argument type="collection">
          <argument type="service" id="App\Handler\User\UpdateUserHandler"/>
          <argument>handle</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_security.clickjacking_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_security.csp_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>512</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_security.csp_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="nelmio_security.xss_protection_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>removeCspHeader</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="request.add_request_formats_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="esi_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fragment.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>48</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".2_int~IABMm9X" class="int" public="false">
      <factory service="router.request_context" method="getHttpsPort"/>
    </service>
    <service id=".1_int~IABMm9X" class="int" public="false">
      <factory service="router.request_context" method="getHttpPort"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id=".service_locator.51fe2Cf"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
      <argument type="collection"/>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.VU7ISSz.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/var/www/html/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="addExpressionLanguageProvider">
        <argument type="service" id="router.expression_language_provider"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
      <call method="setParameter">
        <argument>_functions</argument>
        <argument type="service" id="router.expression_language_provider" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\Routing\RequestContext" method="fromUri"/>
    </service>
    <service id="router.expression_language_provider" class="Symfony\Component\Routing\Matcher\ExpressionLanguageProvider" public="false">
      <tag name="routing.expression_language_provider"/>
      <argument type="service" id=".service_locator.t1zFPXA"/>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.LHmLVnd.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/var/www/html</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument type="service" id=".1_int~IABMm9X"/>
      <argument type="service" id=".2_int~IABMm9X"/>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~XoAJ6ol" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/var/www/html/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~XoAJ6ol" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~XoAJ6ol"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/var/www/html/var/cache/dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~XoAJ6ol"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument>true</argument>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
      <argument type="service" id="property_info.reflection_extractor" on-invalid="null"/>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/var/www/html/config/secrets/dev</argument>
      <argument type="service" id="secrets.decryption_key" on-invalid="ignore"/>
    </service>
    <service id="secrets.decryption_key" class="Symfony\Component\String\LazyString" public="false">
      <argument type="service" id="container.getenv"/>
      <argument>base64:default::SYMFONY_DECRYPTION_SECRET</argument>
      <factory class="Symfony\Component\String\LazyString" method="fromCallable"/>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/var/www/html/.env.dev.local</argument>
    </service>
    <service id=".2_~5PHH984" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id=".1_~5PHH984" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="serializer.denormalizer.unwrapping"/>
        <argument type="service" id="GBProd\UuidNormalizer\UuidNormalizer"/>
        <argument type="service" id="GBProd\UuidNormalizer\UuidDenormalizer"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata" public="false">
      <argument type="service" id="serializer.mapping.cache_class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-900"/>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument>true</argument>
    </service>
    <service id="serializer.denormalizer.unwrapping" class="Symfony\Component\Serializer\Normalizer\UnwrappingDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="1000"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.cache_class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
      <argument>/var/www/html/var/cache/dev/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface" public="false">
      <argument>/var/www/html/var/cache/dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.mapping.cache_class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\CacheClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.cache_class_metadata_factory.inner"/>
      <argument type="service" id="serializer.mapping.cache.symfony"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter" public="false"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter" public="false">
      <argument type="service" id="serializer.mapping.cache_class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.cache_class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" public="false">
      <argument type="service" id="serializer"/>
      <argument type="service" id=".1_~5PHH984"/>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service" id=".2_~5PHH984"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor" public="false">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes" public="false">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id=".2_HtmlDumper~xIZILyO" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id=".1_NonceGenerator~xIZILyO" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/var/www/html</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id=".1_NonceGenerator~xIZILyO"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id=".2_HtmlDumper~xIZILyO"/>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string" public="false">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.nAEpldE"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="false"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.eYaJuY9"/>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false"/>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="App\Entity\User\User" type="collection">
          <argument key="algorithm">auto</argument>
          <argument key="migrate_from" type="collection"/>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
          <argument key="cost">null</argument>
          <argument key="memory_cost">null</argument>
          <argument key="time_cost">null</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false">
      <argument type="service" id="cache.security_expression_language" on-invalid="null"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.event_dispatcher.event_bubbling_listener" class="Symfony\Bundle\SecurityBundle\EventListener\FirewallEventBubblingListener" public="false" abstract="true">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.PVc1RUk"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.session_check" type="service" id=".security.request_matcher.WijBsVl"/>
        <argument key="security.firewall.map.context.read_api" type="service" id=".security.request_matcher.vhxjTwx"/>
        <argument key="security.firewall.map.context.main" type="service" id=".security.request_matcher.3UEFixr"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>/logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>null</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id=".2_int~vtJXxoJ" class="int" public="false">
      <factory service="router.request_context" method="getHttpsPort"/>
    </service>
    <service id=".1_int~vtJXxoJ" class="int" public="false">
      <factory service="router.request_context" method="getHttpPort"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument type="service" id=".1_int~vtJXxoJ"/>
      <argument type="service" id=".2_int~vtJXxoJ"/>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.QWkwKV5"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.QPwreRw"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.PhQgZ9B"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.local_db_provider"/>
        <argument type="service" id="security.user.provider.concrete.in_memory"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.logout.listener.session" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" public="false" abstract="true"/>
    <service id="security.logout.listener.cookie_clearing" class="Symfony\Component\Security\Http\EventListener\CookieClearingLogoutListener" public="false" abstract="true"/>
    <service id="security.logout.listener.default" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.guard.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.user.provider.concrete.local_db_provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\User\User</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.user.provider.concrete.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false">
      <argument type="collection"/>
    </service>
    <service id="security.user_providers" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.local_db_provider"/>
        <argument type="service" id="security.user.provider.concrete.in_memory"/>
      </argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.session_check" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>session_check</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.WijBsVl</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.WijBsVl" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/session/check</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>GET</argument>
      </argument>
    </service>
    <service id="security.firewall.map.context.session_check" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.session_check"/>
    </service>
    <service id="security.firewall.map.config.read_api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>read_api</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.vhxjTwx</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.vhxjTwx" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>GET</argument>
      </argument>
    </service>
    <service id="security.firewall.map.context.read_api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.read_api"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>App\Security\UserChecker</argument>
      <argument>.security.request_matcher.3UEFixr</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.local_db_provider</argument>
      <argument>main</argument>
      <argument>App\Security\LoginFormAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.3UEFixr" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.event_dispatcher.main" class="Symfony\Component\EventDispatcher\EventDispatcher">
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.logout.listener.default.main"/>
          <argument>onLogout</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.logout.listener.session.main"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>Symfony\Component\Security\Http\Event\LogoutEvent</argument>
        <argument type="collection">
          <argument type="service" id="security.logout.listener.csrf_token_clearing"/>
          <argument>onLogout</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.local_db_provider"/>
        <argument type="service" id="security.user.provider.concrete.in_memory"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.event_dispatcher.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">/logout</argument>
      </argument>
    </service>
    <service id="security.logout.listener.default.main" class="Symfony\Component\Security\Http\EventListener\DefaultLogoutListener" public="false">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
      <argument type="service" id="security.http_utils"/>
      <argument>salt_index</argument>
    </service>
    <service id="security.logout.listener.session.main" class="Symfony\Component\Security\Http\EventListener\SessionLogoutListener" public="false">
      <tag name="kernel.event_subscriber" dispatcher="security.event_dispatcher.main"/>
    </service>
    <service id="security.authentication.provider.guard.main" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="App\Security\LoginFormAuthenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.local_db_provider"/>
      <argument>main</argument>
      <argument type="service" id="App\Security\UserChecker"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard.main" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.local_db_provider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>main</argument>
      <argument type="iterator">
        <argument type="service" id="App\Security\LoginFormAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="App\Security\LoginFormAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.guard.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id=".service_locator.PVc1RUk" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
        <argument key="security.firewall.map.context.read_api" type="service" id="security.firewall.map.context.read_api"/>
        <argument key="security.firewall.map.context.session_check" type="service" id="security.firewall.map.context.session_check"/>
      </argument>
    </service>
    <service id=".security.request_matcher.QWkwKV5" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/login</argument>
    </service>
    <service id=".security.request_matcher.QPwreRw" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/logout</argument>
    </service>
    <service id=".security.request_matcher.PhQgZ9B" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>App\Entity\User\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id=".1_~C_3F_UK" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <tag name="container.preload" class="Twig\Cache\FilesystemCache"/>
      <tag name="container.preload" class="Twig\Extension\CoreExtension"/>
      <tag name="container.preload" class="Twig\Extension\EscaperExtension"/>
      <tag name="container.preload" class="Twig\Extension\OptimizerExtension"/>
      <tag name="container.preload" class="Twig\Extension\StagingExtension"/>
      <tag name="container.preload" class="Twig\ExtensionSet"/>
      <tag name="container.preload" class="Twig\Template"/>
      <tag name="container.preload" class="Twig\TemplateWrapper"/>
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/var/www/html/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Twig\Extensions\TextExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Twig\Extension\CaseUriExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_serializer.twig_extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="csa_guzzle.twig.extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="nelmio_security.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="qandidate.toggle.twig_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>github_client_id</argument>
        <argument>%env(GITHUB_CLIENT_ID)%</argument>
      </call>
      <call method="addGlobal">
        <argument>brand_logo_url</argument>
        <argument>%env(BRAND_LOGO_URL)%</argument>
      </call>
      <call method="addGlobal">
        <argument>brand_logo_style</argument>
        <argument>%env(BRAND_LOGO_STYLE)%</argument>
      </call>
      <call method="addGlobal">
        <argument>brand_link_url</argument>
        <argument>%env(BRAND_LINK_URL)%</argument>
      </call>
      <call method="addGlobal">
        <argument>brand_link_style</argument>
        <argument>%env(BRAND_LINK_STYLE)%</argument>
      </call>
      <call method="addGlobal">
        <argument>firebase_api_key</argument>
        <argument>%env(FIREBASE_API_KEY)%</argument>
      </call>
      <call method="addGlobal">
        <argument>firebase_auth_domain</argument>
        <argument>%env(FIREBASE_AUTH_DOMAIN)%</argument>
      </call>
      <call method="addGlobal">
        <argument>firebase_db_url</argument>
        <argument>%env(FIREBASE_DB_URL)%</argument>
      </call>
      <call method="addGlobal">
        <argument>firebase_project_id</argument>
        <argument>%env(FIREBASE_PROJECT_ID)%</argument>
      </call>
      <call method="addGlobal">
        <argument>firebase_prefix</argument>
        <argument>%env(FIREBASE_PREFIX)%</argument>
      </call>
      <call method="addGlobal">
        <argument>google_captcha_site_key</argument>
        <argument>%env(GOOGLE_CAPTCHA_SITE_KEY)%</argument>
      </call>
      <call method="addGlobal">
        <argument>footer_left_text</argument>
        <argument>%env(FOOTER_LEFT_TEXT)%</argument>
      </call>
      <call method="addGlobal">
        <argument>base_template</argument>
        <argument>base.html.twig</argument>
      </call>
      <call method="registerUndefinedFilterCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFilter</argument>
        </argument>
      </call>
      <call method="registerUndefinedFunctionCallback">
        <argument type="collection">
          <argument type="service" id="twig.missing_extension_suggestor"/>
          <argument>suggestFunction</argument>
        </argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument type="collection">
        <argument key="/var/www/html/templates">null</argument>
        <argument key="/var/www/html/vendor/symfony/twig-bridge/Resources/views/Email">email</argument>
        <argument key="/var/www/html/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/var/www/html/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.VF.njwi.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Twig\Loader\FilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/var/www/html</argument>
      <call method="addPath">
        <argument>/var/www/html/templates</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/views</argument>
        <argument>SimpleThingsEntityAudit</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/simplethings/entity-audit-bundle/src/SimpleThings/EntityAudit/Resources/views</argument>
        <argument>!SimpleThingsEntityAudit</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/csa/guzzle-bundle/src/Resources/views</argument>
        <argument>CsaGuzzle</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/csa/guzzle-bundle/src/Resources/views</argument>
        <argument>!CsaGuzzle</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/templates/bundles/TetranzSelect2EntityBundle</argument>
        <argument>TetranzSelect2Entity</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/tetranz/select2entity-bundle/Resources/views</argument>
        <argument>TetranzSelect2Entity</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/tetranz/select2entity-bundle/Resources/views</argument>
        <argument>!TetranzSelect2Entity</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/qandidate/toggle-bundle/Resources/views</argument>
        <argument>QandidateToggle</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/qandidate/toggle-bundle/Resources/views</argument>
        <argument>!QandidateToggle</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/templates/bundles/TwigBundle</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/templates/bundles/TwigBundle</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/templates</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>/var/www/html/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/var/www/html</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false"/>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.8b9rjza"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id=".1_~C_3F_UK"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <argument>/var/www/html</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/var/www/html/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id=".6_HtmlDescriptor~jyJR55V" class="Symfony\Component\VarDumper\Command\Descriptor\HtmlDescriptor" public="false">
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id=".5_CliDescriptor~jyJR55V" class="Symfony\Component\VarDumper\Command\Descriptor\CliDescriptor" public="false">
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
    </service>
    <service id=".4_CliContextProvider~jyJR55V" class="Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider" public="false"/>
    <service id=".3_RequestContextProvider~jyJR55V" class="Symfony\Component\VarDumper\Dumper\ContextProvider\RequestContextProvider" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".2_SourceContextProvider~jyJR55V" class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider" public="false">
      <argument>UTF-8</argument>
      <argument>/var/www/html</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
    </service>
    <service id=".1_SourceContextProvider~jyJR55V" class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider" public="false">
      <argument>UTF-8</argument>
      <argument>/var/www/html</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper"/>
      <argument type="service" id="var_dumper.server_connection"/>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
      <call method="addCasters">
        <argument type="collection">
          <argument key="Closure">Symfony\Component\VarDumper\Caster\ReflectionCaster::unsetClosureFileInfo</argument>
        </argument>
      </call>
    </service>
    <service id="var_dumper.contextualized_cli_dumper" class="Symfony\Component\VarDumper\Dumper\ContextualizedDumper" public="false">
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
      <argument type="collection">
        <argument key="source" type="service" id=".1_SourceContextProvider~jyJR55V"/>
      </argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="var_dumper.server_connection" class="Symfony\Component\VarDumper\Server\Connection" public="false">
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="collection">
        <argument key="source" type="service" id=".2_SourceContextProvider~jyJR55V"/>
        <argument key="request" type="service" id=".3_RequestContextProvider~jyJR55V"/>
        <argument key="cli" type="service" id=".4_CliContextProvider~jyJR55V"/>
      </argument>
    </service>
    <service id="var_dumper.dump_server" class="Symfony\Component\VarDumper\Server\DumpServer" public="false">
      <tag name="monolog.logger" channel="debug"/>
      <argument>tcp://%env(VAR_DUMPER_SERVER)%</argument>
      <argument type="service" id="monolog.logger.debug" on-invalid="null"/>
    </service>
    <service id="var_dumper.command.server_dump" class="Symfony\Component\VarDumper\Command\ServerDumpCommand" public="false">
      <tag name="console.command" command="server:dump"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="var_dumper.dump_server"/>
      <argument type="collection">
        <argument key="cli" type="service" id=".5_CliDescriptor~jyJR55V"/>
        <argument key="html" type="service" id=".6_HtmlDescriptor~jyJR55V"/>
      </argument>
      <call method="setName">
        <argument>server:dump</argument>
      </call>
    </service>
    <service id="monolog.command.server_log" class="Symfony\Bridge\Monolog\Command\ServerLogCommand" public="false">
      <tag name="console.command" command="server:log"/>
      <tag name="container.no_preload"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.tree" class="Gedmo\Tree\TreeListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="stof_doctrine_extensions.listener.timestampable" class="Gedmo\Timestampable\TimestampableListener" public="false">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <call method="setAnnotationReader">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
    </service>
    <service id="twig.missing_extension_suggestor" class="Twig\Extra\TwigExtraBundle\MissingExtensionSuggestor" public="false"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\ClearFirebaseNotificationsCommand" class="App\Console\ClearFirebaseNotificationsCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\ClearFirebaseNotificationsCommand" class="App\Console\ClearFirebaseNotificationsCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Framework\CfpackageDeleteCommand" class="App\Console\Framework\CfpackageDeleteCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Framework\CfpackageDeleteCommand" class="App\Console\Framework\CfpackageDeleteCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Framework\CopyDocumentToItemCommand" class="App\Console\Framework\CopyDocumentToItemCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Framework\CopyDocumentToItemCommand" class="App\Console\Framework\CopyDocumentToItemCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Import\ImportAsnCommand" class="App\Console\Import\ImportAsnCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Import\ImportAsnCommand" class="App\Console\Import\ImportAsnCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Import\ImportCaseJsonCommand" class="App\Console\Import\ImportCaseJsonCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Import\ImportCaseJsonCommand" class="App\Console\Import\ImportCaseJsonCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Import\ImportGeneric1Command" class="App\Console\Import\ImportGeneric1Command" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Import\ImportGeneric1Command" class="App\Console\Import\ImportGeneric1Command" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Mirror\MirrorFrameworkCommand" class="App\Console\Mirror\MirrorFrameworkCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Mirror\MirrorFrameworkCommand" class="App\Console\Mirror\MirrorFrameworkCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Mirror\MirrorJobCommand" class="App\Console\Mirror\MirrorJobCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Mirror\MirrorJobCommand" class="App\Console\Mirror\MirrorJobCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\Mirror\UpdateListCommand" class="App\Console\Mirror\UpdateListCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\Mirror\UpdateListCommand" class="App\Console\Mirror\UpdateListCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\User\OrgAddCommand" class="App\Console\User\OrgAddCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\User\OrgAddCommand" class="App\Console\User\OrgAddCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\User\UserAddCommand" class="App\Console\User\UserAddCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\User\UserAddCommand" class="App\Console\User\UserAddCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\User\UserAddRoleCommand" class="App\Console\User\UserAddRoleCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\User\UserAddRoleCommand" class="App\Console\User\UserAddRoleCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\User\UserRemoveRoleCommand" class="App\Console\User\UserRemoveRoleCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\User\UserRemoveRoleCommand" class="App\Console\User\UserRemoveRoleCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Console\User\UserSetPasswordCommand" class="App\Console\User\UserSetPasswordCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Console\User\UserSetPasswordCommand" class="App\Console\User\UserSetPasswordCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\CaseDocController" class="App\Controller\Api\CaseDocController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\CaseDocController" class="App\Controller\Api\CaseDocController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\CaseDocController" class="App\Controller\Api\CaseDocController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\CaseV1P0Controller" class="App\Controller\Api\CaseV1P0Controller" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\CaseV1P0Controller" class="App\Controller\Api\CaseV1P0Controller" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\CaseV1P0Controller" class="App\Controller\Api\CaseV1P0Controller" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Api\LorSupportController" class="App\Controller\Api\LorSupportController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Api\LorSupportController" class="App\Controller\Api\LorSupportController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Api\LorSupportController" class="App\Controller\Api\LorSupportController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\AsnImportController" class="App\Controller\AsnImportController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\AsnImportController" class="App\Controller\AsnImportController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\AsnImportController" class="App\Controller\AsnImportController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\CaseImportController" class="App\Controller\CaseImportController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\CaseImportController" class="App\Controller\CaseImportController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\CaseImportController" class="App\Controller\CaseImportController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Cms\ExportController" class="App\Controller\Cms\ExportController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Cms\ExportController" class="App\Controller\Cms\ExportController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Cms\ExportController" class="App\Controller\Cms\ExportController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\CommentsController" class="App\Controller\CommentsController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\CommentsController" class="App\Controller\CommentsController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\CommentsController" class="App\Controller\CommentsController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\DefaultController" class="App\Controller\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\DefaultController" class="App\Controller\DefaultController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DefaultController" class="App\Controller\DefaultController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\DocRevisionController" class="App\Controller\DocRevisionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\DocRevisionController" class="App\Controller\DocRevisionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\DocRevisionController" class="App\Controller\DocRevisionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ExcelExportController" class="App\Controller\ExcelExportController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ExcelExportController" class="App\Controller\ExcelExportController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ExcelExportController" class="App\Controller\ExcelExportController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ExcelImportController" class="App\Controller\ExcelImportController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ExcelImportController" class="App\Controller\ExcelImportController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ExcelImportController" class="App\Controller\ExcelImportController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\AdditionalFieldController" class="App\Controller\Framework\AdditionalFieldController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\AdditionalFieldController" class="App\Controller\Framework\AdditionalFieldController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\AdditionalFieldController" class="App\Controller\Framework\AdditionalFieldController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\CfPackageController" class="App\Controller\Framework\CfPackageController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\CfPackageController" class="App\Controller\Framework\CfPackageController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\CfPackageController" class="App\Controller\Framework\CfPackageController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\CloneController" class="App\Controller\Framework\CloneController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\CloneController" class="App\Controller\Framework\CloneController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\CloneController" class="App\Controller\Framework\CloneController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\CopyController" class="App\Controller\Framework\CopyController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\CopyController" class="App\Controller\Framework\CopyController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\CopyController" class="App\Controller\Framework\CopyController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\DocTreeController" class="App\Controller\Framework\DocTreeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\DocTreeController" class="App\Controller\Framework\DocTreeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\DocTreeController" class="App\Controller\Framework\DocTreeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\EditorController" class="App\Controller\Framework\EditorController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\EditorController" class="App\Controller\Framework\EditorController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\EditorController" class="App\Controller\Framework\EditorController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\LockController" class="App\Controller\Framework\LockController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\LockController" class="App\Controller\Framework\LockController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\LockController" class="App\Controller\Framework\LockController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\LsAssociationController" class="App\Controller\Framework\LsAssociationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\LsAssociationController" class="App\Controller\Framework\LsAssociationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\LsAssociationController" class="App\Controller\Framework\LsAssociationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\LsDefAssociationGroupingController" class="App\Controller\Framework\LsDefAssociationGroupingController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\LsDefAssociationGroupingController" class="App\Controller\Framework\LsDefAssociationGroupingController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\LsDefAssociationGroupingController" class="App\Controller\Framework\LsDefAssociationGroupingController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\LsDefConceptController" class="App\Controller\Framework\LsDefConceptController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\LsDefConceptController" class="App\Controller\Framework\LsDefConceptController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\LsDefConceptController" class="App\Controller\Framework\LsDefConceptController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\LsDefGradeController" class="App\Controller\Framework\LsDefGradeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\LsDefGradeController" class="App\Controller\Framework\LsDefGradeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\LsDefGradeController" class="App\Controller\Framework\LsDefGradeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\LsDefItemTypeController" class="App\Controller\Framework\LsDefItemTypeController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\LsDefItemTypeController" class="App\Controller\Framework\LsDefItemTypeController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\LsDefItemTypeController" class="App\Controller\Framework\LsDefItemTypeController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\LsDefLicenceController" class="App\Controller\Framework\LsDefLicenceController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\LsDefLicenceController" class="App\Controller\Framework\LsDefLicenceController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\LsDefLicenceController" class="App\Controller\Framework\LsDefLicenceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\LsDefSubjectController" class="App\Controller\Framework\LsDefSubjectController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\LsDefSubjectController" class="App\Controller\Framework\LsDefSubjectController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\LsDefSubjectController" class="App\Controller\Framework\LsDefSubjectController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\LsDocController" class="App\Controller\Framework\LsDocController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\LsDocController" class="App\Controller\Framework\LsDocController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\LsDocController" class="App\Controller\Framework\LsDocController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Framework\LsItemController" class="App\Controller\Framework\LsItemController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Framework\LsItemController" class="App\Controller\Framework\LsItemController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Framework\LsItemController" class="App\Controller\Framework\LsItemController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\GithubImportController" class="App\Controller\GithubImportController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\GithubImportController" class="App\Controller\GithubImportController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\GithubImportController" class="App\Controller\GithubImportController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\GithubOauthController" class="App\Controller\GithubOauthController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\GithubOauthController" class="App\Controller\GithubOauthController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\GithubOauthController" class="App\Controller\GithubOauthController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\ImportLogsController" class="App\Controller\ImportLogsController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\ImportLogsController" class="App\Controller\ImportLogsController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\ImportLogsController" class="App\Controller\ImportLogsController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Mirror\FrameworkController" class="App\Controller\Mirror\FrameworkController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Mirror\FrameworkController" class="App\Controller\Mirror\FrameworkController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Mirror\FrameworkController" class="App\Controller\Mirror\FrameworkController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Mirror\OAuthCredentialsController" class="App\Controller\Mirror\OAuthCredentialsController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Mirror\OAuthCredentialsController" class="App\Controller\Mirror\OAuthCredentialsController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Mirror\OAuthCredentialsController" class="App\Controller\Mirror\OAuthCredentialsController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Mirror\ServerController" class="App\Controller\Mirror\ServerController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Mirror\ServerController" class="App\Controller\Mirror\ServerController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Mirror\ServerController" class="App\Controller\Mirror\ServerController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PdfExportController" class="App\Controller\PdfExportController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PdfExportController" class="App\Controller\PdfExportController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PdfExportController" class="App\Controller\PdfExportController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SessionController" class="App\Controller\SessionController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SessionController" class="App\Controller\SessionController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SessionController" class="App\Controller\SessionController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Site\AboutController" class="App\Controller\Site\AboutController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Site\AboutController" class="App\Controller\Site\AboutController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Site\AboutController" class="App\Controller\Site\AboutController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Site\DevController" class="App\Controller\Site\DevController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Site\DevController" class="App\Controller\Site\DevController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Site\DevController" class="App\Controller\Site\DevController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SystemLogController" class="App\Controller\SystemLogController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SystemLogController" class="App\Controller\SystemLogController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SystemLogController" class="App\Controller\SystemLogController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\UiInfoController" class="App\Controller\UiInfoController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\UiInfoController" class="App\Controller\UiInfoController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\UiInfoController" class="App\Controller\UiInfoController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\UriController" class="App\Controller\UriController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\UriController" class="App\Controller\UriController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\UriController" class="App\Controller\UriController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\User\ChangePasswordController" class="App\Controller\User\ChangePasswordController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\User\ChangePasswordController" class="App\Controller\User\ChangePasswordController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\ChangePasswordController" class="App\Controller\User\ChangePasswordController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\User\FrameworkAclController" class="App\Controller\User\FrameworkAclController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\User\FrameworkAclController" class="App\Controller\User\FrameworkAclController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\FrameworkAclController" class="App\Controller\User\FrameworkAclController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\User\OAuthServiceController" class="App\Controller\User\OAuthServiceController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\User\OAuthServiceController" class="App\Controller\User\OAuthServiceController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\OAuthServiceController" class="App\Controller\User\OAuthServiceController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\User\OrganizationController" class="App\Controller\User\OrganizationController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\User\OrganizationController" class="App\Controller\User\OrganizationController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\OrganizationController" class="App\Controller\User\OrganizationController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\User\SecurityController" class="App\Controller\User\SecurityController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\User\SecurityController" class="App\Controller\User\SecurityController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\SecurityController" class="App\Controller\User\SecurityController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\User\SignupController" class="App\Controller\User\SignupController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\User\SignupController" class="App\Controller\User\SignupController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\SignupController" class="App\Controller\User\SignupController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\User\UserController" class="App\Controller\User\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\User\UserController" class="App\Controller\User\UserController" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\User\UserController" class="App\Controller\User\UserController" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\ApiExceptionListener" class="App\EventListener\ApiExceptionListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\ApiExceptionListener" class="App\EventListener\ApiExceptionListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\CommandEventRouter" class="App\EventListener\CommandEventRouter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\CommandEventRouter" class="App\EventListener\CommandEventRouter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\LoginCaptchaListener" class="App\EventListener\LoginCaptchaListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\LoginCaptchaListener" class="App\EventListener\LoginCaptchaListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\NotificationLoggingListener" class="App\EventListener\NotificationLoggingListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\NotificationLoggingListener" class="App\EventListener\NotificationLoggingListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\NotificationToFirebaseListener" class="App\EventListener\NotificationToFirebaseListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\NotificationToFirebaseListener" class="App\EventListener\NotificationToFirebaseListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\SiteVersionListener" class="App\EventListener\SiteVersionListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\SiteVersionListener" class="App\EventListener\SiteVersionListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\VaryOriginListener" class="App\EventListener\VaryOriginListener" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\VaryOriginListener" class="App\EventListener\VaryOriginListener" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\AddAclUserType" class="App\Form\Type\AddAclUserType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\AddAclUserType" class="App\Form\Type\AddAclUserType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\AddAclUsernameType" class="App\Form\Type\AddAclUsernameType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\AddAclUsernameType" class="App\Form\Type\AddAclUsernameType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\AdditionalFieldType" class="App\Form\Type\AdditionalFieldType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\AdditionalFieldType" class="App\Form\Type\AdditionalFieldType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ChangePasswordType" class="App\Form\Type\ChangePasswordType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ChangePasswordType" class="App\Form\Type\ChangePasswordType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\CustomFieldsType" class="App\Form\Type\CustomFieldsType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\CustomFieldsType" class="App\Form\Type\CustomFieldsType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\DatalistType" class="App\Form\Type\DatalistType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\DatalistType" class="App\Form\Type\DatalistType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsAssociationAjaxType" class="App\Form\Type\LsAssociationAjaxType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsAssociationAjaxType" class="App\Form\Type\LsAssociationAjaxType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsAssociationTreeType" class="App\Form\Type\LsAssociationTreeType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsAssociationTreeType" class="App\Form\Type\LsAssociationTreeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsAssociationType" class="App\Form\Type\LsAssociationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsAssociationType" class="App\Form\Type\LsAssociationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsDefAssociationGroupingType" class="App\Form\Type\LsDefAssociationGroupingType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsDefAssociationGroupingType" class="App\Form\Type\LsDefAssociationGroupingType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsDefConceptType" class="App\Form\Type\LsDefConceptType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsDefConceptType" class="App\Form\Type\LsDefConceptType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsDefGradeType" class="App\Form\Type\LsDefGradeType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsDefGradeType" class="App\Form\Type\LsDefGradeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsDefItemTypeType" class="App\Form\Type\LsDefItemTypeType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsDefItemTypeType" class="App\Form\Type\LsDefItemTypeType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsDefLicenceType" class="App\Form\Type\LsDefLicenceType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsDefLicenceType" class="App\Form\Type\LsDefLicenceType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsDefSubjectType" class="App\Form\Type\LsDefSubjectType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsDefSubjectType" class="App\Form\Type\LsDefSubjectType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsDocCreateType" class="App\Form\Type\LsDocCreateType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsDocCreateType" class="App\Form\Type\LsDocCreateType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsDocListType" class="App\Form\Type\LsDocListType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsDocListType" class="App\Form\Type\LsDocListType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsDocType" class="App\Form\Type\LsDocType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsDocType" class="App\Form\Type\LsDocType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsItemParentType" class="App\Form\Type\LsItemParentType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsItemParentType" class="App\Form\Type\LsItemParentType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LsItemType" class="App\Form\Type\LsItemType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LsItemType" class="App\Form\Type\LsItemType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\MirroredFrameworkDTOType" class="App\Form\Type\MirroredFrameworkDTOType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\MirroredFrameworkDTOType" class="App\Form\Type\MirroredFrameworkDTOType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\MirroredServerDTOType" class="App\Form\Type\MirroredServerDTOType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\MirroredServerDTOType" class="App\Form\Type\MirroredServerDTOType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\NewFrameworkType" class="App\Form\Type\NewFrameworkType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\NewFrameworkType" class="App\Form\Type\NewFrameworkType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\OAuthCredentialDTOType" class="App\Form\Type\OAuthCredentialDTOType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\OAuthCredentialDTOType" class="App\Form\Type\OAuthCredentialDTOType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\OrganizationType" class="App\Form\Type\OrganizationType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\OrganizationType" class="App\Form\Type\OrganizationType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\RemoteCaseServerType" class="App\Form\Type\RemoteCaseServerType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\RemoteCaseServerType" class="App\Form\Type\RemoteCaseServerType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\SignupType" class="App\Form\Type\SignupType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\SignupType" class="App\Form\Type\SignupType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\UserType" class="App\Form\Type\UserType" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\UserType" class="App\Form\Type\UserType" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Comment\AddCommentHandler" class="App\Handler\Comment\AddCommentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Comment\AddCommentHandler" class="App\Handler\Comment\AddCommentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Comment\DeleteCommentHandler" class="App\Handler\Comment\DeleteCommentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Comment\DeleteCommentHandler" class="App\Handler\Comment\DeleteCommentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Comment\DownvoteCommentHandler" class="App\Handler\Comment\DownvoteCommentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Comment\DownvoteCommentHandler" class="App\Handler\Comment\DownvoteCommentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Comment\UpdateCommentHandler" class="App\Handler\Comment\UpdateCommentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Comment\UpdateCommentHandler" class="App\Handler\Comment\UpdateCommentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Comment\UpvoteCommentHandler" class="App\Handler\Comment\UpvoteCommentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Comment\UpvoteCommentHandler" class="App\Handler\Comment\UpvoteCommentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Email\SendAdminNotificationEmailHandler" class="App\Handler\Email\SendAdminNotificationEmailHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Email\SendAdminNotificationEmailHandler" class="App\Handler\Email\SendAdminNotificationEmailHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Email\SendSignupReceivedEmailHandler" class="App\Handler\Email\SendSignupReceivedEmailHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Email\SendSignupReceivedEmailHandler" class="App\Handler\Email\SendSignupReceivedEmailHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Email\SendUserApprovedEmailHandler" class="App\Handler\Email\SendUserApprovedEmailHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Email\SendUserApprovedEmailHandler" class="App\Handler\Email\SendUserApprovedEmailHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddAssociationGroupHandler" class="App\Handler\Framework\AddAssociationGroupHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddAssociationGroupHandler" class="App\Handler\Framework\AddAssociationGroupHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddAssociationHandler" class="App\Handler\Framework\AddAssociationHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddAssociationHandler" class="App\Handler\Framework\AddAssociationHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddConceptHandler" class="App\Handler\Framework\AddConceptHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddConceptHandler" class="App\Handler\Framework\AddConceptHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddDocumentHandler" class="App\Handler\Framework\AddDocumentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddDocumentHandler" class="App\Handler\Framework\AddDocumentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddExemplarToItemHandler" class="App\Handler\Framework\AddExemplarToItemHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddExemplarToItemHandler" class="App\Handler\Framework\AddExemplarToItemHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddExternalDocHandler" class="App\Handler\Framework\AddExternalDocHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddExternalDocHandler" class="App\Handler\Framework\AddExternalDocHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddGradeHandler" class="App\Handler\Framework\AddGradeHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddGradeHandler" class="App\Handler\Framework\AddGradeHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddItemHandler" class="App\Handler\Framework\AddItemHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddItemHandler" class="App\Handler\Framework\AddItemHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddItemTypeHandler" class="App\Handler\Framework\AddItemTypeHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddItemTypeHandler" class="App\Handler\Framework\AddItemTypeHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddLicenceHandler" class="App\Handler\Framework\AddLicenceHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddLicenceHandler" class="App\Handler\Framework\AddLicenceHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddSubjectHandler" class="App\Handler\Framework\AddSubjectHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddSubjectHandler" class="App\Handler\Framework\AddSubjectHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\AddTreeAssociationHandler" class="App\Handler\Framework\AddTreeAssociationHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\AddTreeAssociationHandler" class="App\Handler\Framework\AddTreeAssociationHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\ChangeItemParentHandler" class="App\Handler\Framework\ChangeItemParentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\ChangeItemParentHandler" class="App\Handler\Framework\ChangeItemParentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\CloneFrameworkHandler" class="App\Handler\Framework\CloneFrameworkHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\CloneFrameworkHandler" class="App\Handler\Framework\CloneFrameworkHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\CopyDocumentToItemHandler" class="App\Handler\Framework\CopyDocumentToItemHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\CopyDocumentToItemHandler" class="App\Handler\Framework\CopyDocumentToItemHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\CopyFrameworkHandler" class="App\Handler\Framework\CopyFrameworkHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\CopyFrameworkHandler" class="App\Handler\Framework\CopyFrameworkHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\CopyItemToDocHandler" class="App\Handler\Framework\CopyItemToDocHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\CopyItemToDocHandler" class="App\Handler\Framework\CopyItemToDocHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeleteAssociationGroupHandler" class="App\Handler\Framework\DeleteAssociationGroupHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeleteAssociationGroupHandler" class="App\Handler\Framework\DeleteAssociationGroupHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeleteAssociationHandler" class="App\Handler\Framework\DeleteAssociationHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeleteAssociationHandler" class="App\Handler\Framework\DeleteAssociationHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeleteConceptHandler" class="App\Handler\Framework\DeleteConceptHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeleteConceptHandler" class="App\Handler\Framework\DeleteConceptHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeleteDocumentHandler" class="App\Handler\Framework\DeleteDocumentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeleteDocumentHandler" class="App\Handler\Framework\DeleteDocumentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeleteGradeHandler" class="App\Handler\Framework\DeleteGradeHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeleteGradeHandler" class="App\Handler\Framework\DeleteGradeHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeleteItemHandler" class="App\Handler\Framework\DeleteItemHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeleteItemHandler" class="App\Handler\Framework\DeleteItemHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeleteItemTypeHandler" class="App\Handler\Framework\DeleteItemTypeHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeleteItemTypeHandler" class="App\Handler\Framework\DeleteItemTypeHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeleteItemWithChildrenHandler" class="App\Handler\Framework\DeleteItemWithChildrenHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeleteItemWithChildrenHandler" class="App\Handler\Framework\DeleteItemWithChildrenHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeleteLicenceHandler" class="App\Handler\Framework\DeleteLicenceHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeleteLicenceHandler" class="App\Handler\Framework\DeleteLicenceHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeleteSubjectHandler" class="App\Handler\Framework\DeleteSubjectHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeleteSubjectHandler" class="App\Handler\Framework\DeleteSubjectHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\DeriveDocumentHandler" class="App\Handler\Framework\DeriveDocumentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\DeriveDocumentHandler" class="App\Handler\Framework\DeriveDocumentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\LockDocumentHandler" class="App\Handler\Framework\LockDocumentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\LockDocumentHandler" class="App\Handler\Framework\LockDocumentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\LockItemHandler" class="App\Handler\Framework\LockItemHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\LockItemHandler" class="App\Handler\Framework\LockItemHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\RemoveChildHandler" class="App\Handler\Framework\RemoveChildHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\RemoveChildHandler" class="App\Handler\Framework\RemoveChildHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateAssociationGroupHandler" class="App\Handler\Framework\UpdateAssociationGroupHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateAssociationGroupHandler" class="App\Handler\Framework\UpdateAssociationGroupHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateAssociationHandler" class="App\Handler\Framework\UpdateAssociationHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateAssociationHandler" class="App\Handler\Framework\UpdateAssociationHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateConceptHandler" class="App\Handler\Framework\UpdateConceptHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateConceptHandler" class="App\Handler\Framework\UpdateConceptHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateDocumentHandler" class="App\Handler\Framework\UpdateDocumentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateDocumentHandler" class="App\Handler\Framework\UpdateDocumentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateFrameworkHandler" class="App\Handler\Framework\UpdateFrameworkHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateFrameworkHandler" class="App\Handler\Framework\UpdateFrameworkHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateGradeHandler" class="App\Handler\Framework\UpdateGradeHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateGradeHandler" class="App\Handler\Framework\UpdateGradeHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateItemHandler" class="App\Handler\Framework\UpdateItemHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateItemHandler" class="App\Handler\Framework\UpdateItemHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateItemTypeHandler" class="App\Handler\Framework\UpdateItemTypeHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateItemTypeHandler" class="App\Handler\Framework\UpdateItemTypeHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateLicenceHandler" class="App\Handler\Framework\UpdateLicenceHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateLicenceHandler" class="App\Handler\Framework\UpdateLicenceHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateSubjectHandler" class="App\Handler\Framework\UpdateSubjectHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateSubjectHandler" class="App\Handler\Framework\UpdateSubjectHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Framework\UpdateTreeItemsHandler" class="App\Handler\Framework\UpdateTreeItemsHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Framework\UpdateTreeItemsHandler" class="App\Handler\Framework\UpdateTreeItemsHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Import\ImportAsnFromUrlHandler" class="App\Handler\Import\ImportAsnFromUrlHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Import\ImportAsnFromUrlHandler" class="App\Handler\Import\ImportAsnFromUrlHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Import\ImportCaseJsonHandler" class="App\Handler\Import\ImportCaseJsonHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Import\ImportCaseJsonHandler" class="App\Handler\Import\ImportCaseJsonHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Import\ImportExcelFileHandler" class="App\Handler\Import\ImportExcelFileHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Import\ImportExcelFileHandler" class="App\Handler\Import\ImportExcelFileHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Import\ImportGenericCsvHandler" class="App\Handler\Import\ImportGenericCsvHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Import\ImportGenericCsvHandler" class="App\Handler\Import\ImportGenericCsvHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Import\MarkImportLogsAsReadHandler" class="App\Handler\Import\MarkImportLogsAsReadHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Import\MarkImportLogsAsReadHandler" class="App\Handler\Import\MarkImportLogsAsReadHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\Import\ParseCsvGithubDocumentHandler" class="App\Handler\Import\ParseCsvGithubDocumentHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\Import\ParseCsvGithubDocumentHandler" class="App\Handler\Import\ParseCsvGithubDocumentHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\ActivateUserHandler" class="App\Handler\User\ActivateUserHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\ActivateUserHandler" class="App\Handler\User\ActivateUserHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\AddFrameworkUserAclHandler" class="App\Handler\User\AddFrameworkUserAclHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\AddFrameworkUserAclHandler" class="App\Handler\User\AddFrameworkUserAclHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\AddFrameworkUsernameAclHandler" class="App\Handler\User\AddFrameworkUsernameAclHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\AddFrameworkUsernameAclHandler" class="App\Handler\User\AddFrameworkUsernameAclHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\AddOrganizationByNameHandler" class="App\Handler\User\AddOrganizationByNameHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\AddOrganizationByNameHandler" class="App\Handler\User\AddOrganizationByNameHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\AddOrganizationHandler" class="App\Handler\User\AddOrganizationHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\AddOrganizationHandler" class="App\Handler\User\AddOrganizationHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\AddUserByNameHandler" class="App\Handler\User\AddUserByNameHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\AddUserByNameHandler" class="App\Handler\User\AddUserByNameHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\AddUserHandler" class="App\Handler\User\AddUserHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\AddUserHandler" class="App\Handler\User\AddUserHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\AddUserRoleHandler" class="App\Handler\User\AddUserRoleHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\AddUserRoleHandler" class="App\Handler\User\AddUserRoleHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\ChangePasswordHandler" class="App\Handler\User\ChangePasswordHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\ChangePasswordHandler" class="App\Handler\User\ChangePasswordHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\DeleteFrameworkAclHandler" class="App\Handler\User\DeleteFrameworkAclHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\DeleteFrameworkAclHandler" class="App\Handler\User\DeleteFrameworkAclHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\DeleteOrganizationHandler" class="App\Handler\User\DeleteOrganizationHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\DeleteOrganizationHandler" class="App\Handler\User\DeleteOrganizationHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\DeleteUserHandler" class="App\Handler\User\DeleteUserHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\DeleteUserHandler" class="App\Handler\User\DeleteUserHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\RemoveUserRoleHandler" class="App\Handler\User\RemoveUserRoleHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\RemoveUserRoleHandler" class="App\Handler\User\RemoveUserRoleHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\SetUserPasswordHandler" class="App\Handler\User\SetUserPasswordHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\SetUserPasswordHandler" class="App\Handler\User\SetUserPasswordHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\SuspendUserHandler" class="App\Handler\User\SuspendUserHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\SuspendUserHandler" class="App\Handler\User\SuspendUserHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\UpdateOrganizationHandler" class="App\Handler\User\UpdateOrganizationHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\UpdateOrganizationHandler" class="App\Handler\User\UpdateOrganizationHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Handler\User\UpdateUserHandler" class="App\Handler\User\UpdateUserHandler" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Handler\User\UpdateUserHandler" class="App\Handler\User\UpdateUserHandler" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ChangeEntryRepository" class="App\Repository\ChangeEntryRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ChangeEntryRepository" class="App\Repository\ChangeEntryRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CommentRepository" class="App\Repository\CommentRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CommentRepository" class="App\Repository\CommentRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\AdditionalFieldRepository" class="App\Repository\Framework\AdditionalFieldRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\AdditionalFieldRepository" class="App\Repository\Framework\AdditionalFieldRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\AssociationSubtypeRepository" class="App\Repository\Framework\AssociationSubtypeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\AssociationSubtypeRepository" class="App\Repository\Framework\AssociationSubtypeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\CfRubricCriterionLevelRepository" class="App\Repository\Framework\CfRubricCriterionLevelRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\CfRubricCriterionLevelRepository" class="App\Repository\Framework\CfRubricCriterionLevelRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\CfRubricCriterionRepository" class="App\Repository\Framework\CfRubricCriterionRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\CfRubricCriterionRepository" class="App\Repository\Framework\CfRubricCriterionRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\CfRubricRepository" class="App\Repository\Framework\CfRubricRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\CfRubricRepository" class="App\Repository\Framework\CfRubricRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\FrameworkTypeRepository" class="App\Repository\Framework\FrameworkTypeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\FrameworkTypeRepository" class="App\Repository\Framework\FrameworkTypeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\LsAssociationRepository" class="App\Repository\Framework\LsAssociationRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\LsAssociationRepository" class="App\Repository\Framework\LsAssociationRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\LsDefAssociationGroupingRepository" class="App\Repository\Framework\LsDefAssociationGroupingRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\LsDefAssociationGroupingRepository" class="App\Repository\Framework\LsDefAssociationGroupingRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\LsDefConceptRepository" class="App\Repository\Framework\LsDefConceptRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\LsDefConceptRepository" class="App\Repository\Framework\LsDefConceptRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\LsDefGradeRepository" class="App\Repository\Framework\LsDefGradeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\LsDefGradeRepository" class="App\Repository\Framework\LsDefGradeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\LsDefItemTypeRepository" class="App\Repository\Framework\LsDefItemTypeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\LsDefItemTypeRepository" class="App\Repository\Framework\LsDefItemTypeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\LsDefLicenceRepository" class="App\Repository\Framework\LsDefLicenceRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\LsDefLicenceRepository" class="App\Repository\Framework\LsDefLicenceRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\LsDefSubjectRepository" class="App\Repository\Framework\LsDefSubjectRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\LsDefSubjectRepository" class="App\Repository\Framework\LsDefSubjectRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\LsDocAttributeRepository" class="App\Repository\Framework\LsDocAttributeRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\LsDocAttributeRepository" class="App\Repository\Framework\LsDocAttributeRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\LsDocRepository" class="App\Repository\Framework\LsDocRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\LsDocRepository" class="App\Repository\Framework\LsDocRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\LsItemRepository" class="App\Repository\Framework\LsItemRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\LsItemRepository" class="App\Repository\Framework\LsItemRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\Mirror\FrameworkRepository" class="App\Repository\Framework\Mirror\FrameworkRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\Mirror\FrameworkRepository" class="App\Repository\Framework\Mirror\FrameworkRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\Mirror\LogRepository" class="App\Repository\Framework\Mirror\LogRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\Mirror\LogRepository" class="App\Repository\Framework\Mirror\LogRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\Mirror\OAuthCredentialRepository" class="App\Repository\Framework\Mirror\OAuthCredentialRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\Mirror\OAuthCredentialRepository" class="App\Repository\Framework\Mirror\OAuthCredentialRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\Mirror\ServerRepository" class="App\Repository\Framework\Mirror\ServerRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\Mirror\ServerRepository" class="App\Repository\Framework\Mirror\ServerRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\Framework\ObjectLockRepository" class="App\Repository\Framework\ObjectLockRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\Framework\ObjectLockRepository" class="App\Repository\Framework\ObjectLockRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\SessionRepository" class="App\Repository\SessionRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\SessionRepository" class="App\Repository\SessionRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\User\OrganizationRepository" class="App\Repository\User\OrganizationRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\User\OrganizationRepository" class="App\Repository\User\OrganizationRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\User\UserDocAclRepository" class="App\Repository\User\UserDocAclRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\User\UserDocAclRepository" class="App\Repository\User\UserDocAclRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\User\UserRepository" class="App\Repository\User\UserRepository" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\User\UserRepository" class="App\Repository\User\UserRepository" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\AssociationVoter" class="App\Security\Voter\AssociationVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\AssociationVoter" class="App\Security\Voter\AssociationVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\CommentVoter" class="App\Security\Voter\CommentVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\CommentVoter" class="App\Security\Voter\CommentVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\FeatureVoter" class="App\Security\Voter\FeatureVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\FeatureVoter" class="App\Security\Voter\FeatureVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\FrameworkAccessVoter" class="App\Security\Voter\FrameworkAccessVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\FrameworkAccessVoter" class="App\Security\Voter\FrameworkAccessVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\FrameworkManageEditorsVoter" class="App\Security\Voter\FrameworkManageEditorsVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\FrameworkManageEditorsVoter" class="App\Security\Voter\FrameworkManageEditorsVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\ItemVoter" class="App\Security\Voter\ItemVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\ItemVoter" class="App\Security\Voter\ItemVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\ManageAdditionalFieldVoter" class="App\Security\Voter\ManageAdditionalFieldVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\ManageAdditionalFieldVoter" class="App\Security\Voter\ManageAdditionalFieldVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\ManageLogVoter" class="App\Security\Voter\ManageLogVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\ManageLogVoter" class="App\Security\Voter\ManageLogVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\ManageMirrorVoter" class="App\Security\Voter\ManageMirrorVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\ManageMirrorVoter" class="App\Security\Voter\ManageMirrorVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\ManageOrganizationVoter" class="App\Security\Voter\ManageOrganizationVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\ManageOrganizationVoter" class="App\Security\Voter\ManageOrganizationVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Security\Core\Authorization\Voter\VoterInterface.0.App\Security\Voter\ManageUserVoter" class="App\Security\Voter\ManageUserVoter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\Voter\ManageUserVoter" class="App\Security\Voter\ManageUserVoter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.App\Twig\Extension\CaseUriExtension" class="App\Twig\Extension\CaseUriExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Twig\Extension\CaseUriExtension" class="App\Twig\Extension\CaseUriExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Twig\Extension\CaseUriExtension" class="App\Twig\Extension\CaseUriExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\RuntimeExtensionInterface.0.App\Twig\Extension\CaseUriRuntime" class="App\Twig\Extension\CaseUriRuntime" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Twig\Extension\CaseUriRuntime" class="App\Twig\Extension\CaseUriRuntime" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validator\Constraints\PasswordFieldValidator" class="App\Validator\Constraints\PasswordFieldValidator" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\Constraints\PasswordFieldValidator" class="App\Validator\Constraints\PasswordFieldValidator" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Serializer\Normalizer\NormalizerInterface.0.GBProd\UuidNormalizer\UuidNormalizer" class="GBProd\UuidNormalizer\UuidNormalizer" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.GBProd\UuidNormalizer\UuidNormalizer" class="GBProd\UuidNormalizer\UuidNormalizer" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Serializer\Normalizer\DenormalizerInterface.0.GBProd\UuidNormalizer\UuidDenormalizer" class="GBProd\UuidNormalizer\UuidDenormalizer" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.GBProd\UuidNormalizer\UuidDenormalizer" class="GBProd\UuidNormalizer\UuidDenormalizer" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ResetInterface.0.salt.cache.external_docs" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Psr\Log\LoggerAwareInterface.0.salt.cache.external_docs" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.salt.cache.external_docs" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.WaGDpDt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service" id="container.env_var_processor"/>
        <argument key="bool" type="service" id="container.env_var_processor"/>
        <argument key="const" type="service" id="container.env_var_processor"/>
        <argument key="csv" type="service" id="container.env_var_processor"/>
        <argument key="default" type="service" id="container.env_var_processor"/>
        <argument key="file" type="service" id="container.env_var_processor"/>
        <argument key="float" type="service" id="container.env_var_processor"/>
        <argument key="int" type="service" id="container.env_var_processor"/>
        <argument key="json" type="service" id="container.env_var_processor"/>
        <argument key="key" type="service" id="container.env_var_processor"/>
        <argument key="query_string" type="service" id="container.env_var_processor"/>
        <argument key="require" type="service" id="container.env_var_processor"/>
        <argument key="resolve" type="service" id="container.env_var_processor"/>
        <argument key="string" type="service" id="container.env_var_processor"/>
        <argument key="trim" type="service" id="container.env_var_processor"/>
        <argument key="url" type="service" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:auth"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:command"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:command</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:controller"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:crud"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_docker_database" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:docker:database"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_docker_database"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:docker:database</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:entity"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:fixtures"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:form"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_functional_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:functional-test"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_functional_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:functional-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_message" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:message"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_message"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:message</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:messenger-middleware"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_messenger_middleware"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:messenger-middleware</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:registration-form"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_reset_password" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:reset-password"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_reset_password"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:reset-password</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:encoder"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:normalizer"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_subscriber" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:subscriber"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_subscriber"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:subscriber</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:twig-extension"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_unit_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:unit-test"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_unit_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:unit-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:validator"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:voter"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:user"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:user</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:migration"/>
      <tag name="container.no_preload"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.translation" class="Symfony\Bridge\Monolog\Logger">
      <argument>translation</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.debug" class="Symfony\Bridge\Monolog\Logger">
      <argument>debug</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.xxFfgCP" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </argument>
    </service>
    <service id=".service_locator.P59e_jI" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\ChangeEntryRepository" type="service" id="App\Repository\ChangeEntryRepository"/>
        <argument key="App\Repository\CommentRepository" type="service" id="App\Repository\CommentRepository"/>
        <argument key="App\Repository\Framework\AdditionalFieldRepository" type="service" id="App\Repository\Framework\AdditionalFieldRepository"/>
        <argument key="App\Repository\Framework\AssociationSubtypeRepository" type="service" id="App\Repository\Framework\AssociationSubtypeRepository"/>
        <argument key="App\Repository\Framework\CfRubricCriterionLevelRepository" type="service" id="App\Repository\Framework\CfRubricCriterionLevelRepository"/>
        <argument key="App\Repository\Framework\CfRubricCriterionRepository" type="service" id="App\Repository\Framework\CfRubricCriterionRepository"/>
        <argument key="App\Repository\Framework\CfRubricRepository" type="service" id="App\Repository\Framework\CfRubricRepository"/>
        <argument key="App\Repository\Framework\FrameworkTypeRepository" type="service" id="App\Repository\Framework\FrameworkTypeRepository"/>
        <argument key="App\Repository\Framework\LsAssociationRepository" type="service" id="App\Repository\Framework\LsAssociationRepository"/>
        <argument key="App\Repository\Framework\LsDefAssociationGroupingRepository" type="service" id="App\Repository\Framework\LsDefAssociationGroupingRepository"/>
        <argument key="App\Repository\Framework\LsDefConceptRepository" type="service" id="App\Repository\Framework\LsDefConceptRepository"/>
        <argument key="App\Repository\Framework\LsDefGradeRepository" type="service" id="App\Repository\Framework\LsDefGradeRepository"/>
        <argument key="App\Repository\Framework\LsDefItemTypeRepository" type="service" id="App\Repository\Framework\LsDefItemTypeRepository"/>
        <argument key="App\Repository\Framework\LsDefLicenceRepository" type="service" id="App\Repository\Framework\LsDefLicenceRepository"/>
        <argument key="App\Repository\Framework\LsDefSubjectRepository" type="service" id="App\Repository\Framework\LsDefSubjectRepository"/>
        <argument key="App\Repository\Framework\LsDocAttributeRepository" type="service" id="App\Repository\Framework\LsDocAttributeRepository"/>
        <argument key="App\Repository\Framework\LsDocRepository" type="service" id="App\Repository\Framework\LsDocRepository"/>
        <argument key="App\Repository\Framework\LsItemRepository" type="service" id="App\Repository\Framework\LsItemRepository"/>
        <argument key="App\Repository\Framework\Mirror\FrameworkRepository" type="service" id="App\Repository\Framework\Mirror\FrameworkRepository"/>
        <argument key="App\Repository\Framework\Mirror\LogRepository" type="service" id="App\Repository\Framework\Mirror\LogRepository"/>
        <argument key="App\Repository\Framework\Mirror\OAuthCredentialRepository" type="service" id="App\Repository\Framework\Mirror\OAuthCredentialRepository"/>
        <argument key="App\Repository\Framework\Mirror\ServerRepository" type="service" id="App\Repository\Framework\Mirror\ServerRepository"/>
        <argument key="App\Repository\Framework\ObjectLockRepository" type="service" id="App\Repository\Framework\ObjectLockRepository"/>
        <argument key="App\Repository\SessionRepository" type="service" id="App\Repository\SessionRepository"/>
        <argument key="App\Repository\User\OrganizationRepository" type="service" id="App\Repository\User\OrganizationRepository"/>
        <argument key="App\Repository\User\UserDocAclRepository" type="service" id="App\Repository\User\UserDocAclRepository"/>
        <argument key="App\Repository\User\UserRepository" type="service" id="App\Repository\User\UserRepository"/>
      </argument>
    </service>
    <service id="doctrine.dbal.default_schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false">
      <argument type="collection">
        <argument type="service" id="doctrine.dbal.well_known_schema_asset_filter"/>
        <argument type="service" id="doctrine.dbal.default_regex_schema_filter"/>
      </argument>
    </service>
    <service id=".service_locator.beq5mCo" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="response" type="service" id=".errored..service_locator.beq5mCo.Symfony\Component\HttpFoundation\Response"/>
      </argument>
    </service>
    <service id=".service_locator.C9JCBPC" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="loader" type="service" id=".errored..service_locator.C9JCBPC.Symfony\Component\Config\Loader\LoaderInterface"/>
      </argument>
    </service>
    <service id=".service_locator.KmOPVtE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="obj" type="service" id=".errored..service_locator.KmOPVtE.App\Entity\Framework\LsDoc"/>
      </argument>
    </service>
    <service id=".service_locator.6WrBBkv" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="obj" type="service" id=".errored..service_locator.6WrBBkv.App\Entity\Framework\LsItem"/>
      </argument>
    </service>
    <service id=".service_locator.SiKhn_E" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repo" type="service" id="App\Repository\Framework\LsDocRepository"/>
      </argument>
    </service>
    <service id=".service_locator.FPy9AcB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="logger" type="service" id="monolog.logger"/>
      </argument>
    </service>
    <service id=".service_locator.fLx15ph" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="user" type="service" id=".errored..service_locator.fLx15ph.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.B8ISyfI" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="dispatcher" type="service" id="debug.event_dispatcher"/>
      </argument>
    </service>
    <service id=".service_locator.yy09t2m" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsDoc" type="service" id=".errored..service_locator.yy09t2m.App\Entity\Framework\LsDoc"/>
      </argument>
    </service>
    <service id=".service_locator.TbTRhyT" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="bucket" type="service" id="App\Service\BucketService"/>
        <argument key="doc" type="service" id=".errored..service_locator.TbTRhyT.App\Entity\Framework\LsDoc"/>
        <argument key="user" type="service" id=".errored..service_locator.TbTRhyT.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.2xms8xd" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="bucket" type="service" id="App\Service\BucketService"/>
        <argument key="item" type="service" id=".errored..service_locator.2xms8xd.App\Entity\Framework\LsItem"/>
        <argument key="user" type="service" id=".errored..service_locator.2xms8xd.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.gQPKYC7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.M_Q7m8J" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="comment" type="service" id=".errored..service_locator.M_Q7m8J.App\Entity\Comment\Comment"/>
        <argument key="user" type="service" id=".errored..service_locator.M_Q7m8J.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.uCCli1R" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="comment" type="service" id=".errored..service_locator.uCCli1R.App\Entity\Comment\Comment"/>
      </argument>
    </service>
    <service id=".service_locator.5YezXEp" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doc" type="service" id=".errored..service_locator.5YezXEp.App\Entity\Framework\LsDoc"/>
      </argument>
    </service>
    <service id=".service_locator.NXXMC5e" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="additionalField" type="service" id=".errored..service_locator.NXXMC5e.App\Entity\Framework\AdditionalField"/>
      </argument>
    </service>
    <service id=".service_locator.bpiUpGE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authChecker" type="service" id="security.authorization_checker"/>
        <argument key="lsDoc" type="service" id=".errored..service_locator.bpiUpGE.App\Entity\Framework\LsDoc"/>
      </argument>
    </service>
    <service id=".service_locator._KOieGj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.Jlt.5eM" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsItem" type="service" id=".errored..service_locator.Jlt.5eM.App\Entity\Framework\LsItem"/>
      </argument>
    </service>
    <service id=".service_locator.m_U.Mu6" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="associationGrouping" type="service" id=".errored..service_locator.m_U.Mu6.App\Entity\Framework\LsDefAssociationGrouping"/>
      </argument>
    </service>
    <service id=".service_locator.21a9IIF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsDoc" type="service" id=".errored..service_locator.21a9IIF.App\Entity\Framework\LsDoc"/>
        <argument key="user" type="service" id=".errored..service_locator.21a9IIF.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.EOmnp2k" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="item" type="service" id=".errored..service_locator.EOmnp2k.App\Entity\Framework\LsItem"/>
        <argument key="user" type="service" id=".errored..service_locator.EOmnp2k.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.vUnslIS" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id=".service_locator.aeMmtML" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="originLsItem" type="service" id=".errored..service_locator.aeMmtML.App\Entity\Framework\LsItem"/>
      </argument>
    </service>
    <service id=".service_locator.VCMnsVU" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsAssociation" type="service" id=".errored..service_locator.VCMnsVU.App\Entity\Framework\LsAssociation"/>
      </argument>
    </service>
    <service id=".service_locator.NCK.VRn" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsDefConcept" type="service" id=".errored..service_locator.NCK.VRn.App\Entity\Framework\LsDefConcept"/>
      </argument>
    </service>
    <service id=".service_locator.ZxADY0N" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsDefGrade" type="service" id=".errored..service_locator.ZxADY0N.App\Entity\Framework\LsDefGrade"/>
      </argument>
    </service>
    <service id=".service_locator.109wlF9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsDefItemType" type="service" id=".errored..service_locator.109wlF9.App\Entity\Framework\LsDefItemType"/>
      </argument>
    </service>
    <service id=".service_locator.uFlu2Wf" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsDefLicence" type="service" id=".errored..service_locator.uFlu2Wf.App\Entity\Framework\LsDefLicence"/>
      </argument>
    </service>
    <service id=".service_locator.WDiCgSw" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsDefSubject" type="service" id=".errored..service_locator.WDiCgSw.App\Entity\Framework\LsDefSubject"/>
      </argument>
    </service>
    <service id=".service_locator.DUyDGdR" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doc" type="service" id=".errored..service_locator.DUyDGdR.App\Entity\Framework\LsDoc"/>
      </argument>
    </service>
    <service id=".service_locator.TWoyDn0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsItem" type="service" id=".errored..service_locator.TWoyDn0.App\Entity\Framework\LsItem"/>
        <argument key="user" type="service" id=".errored..service_locator.TWoyDn0.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.vfhzsZj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="child" type="service" id=".errored..service_locator.vfhzsZj.App\Entity\Framework\LsItem"/>
        <argument key="parent" type="service" id=".errored..service_locator.vfhzsZj.App\Entity\Framework\LsItem"/>
      </argument>
    </service>
    <service id=".service_locator.pRiEuit" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="bucket" type="service" id="App\Service\BucketService"/>
        <argument key="doc" type="service" id=".errored..service_locator.pRiEuit.App\Entity\Framework\LsDoc"/>
      </argument>
    </service>
    <service id=".service_locator.52yt0sh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mirrorService" type="service" id="App\Service\MirrorServer"/>
      </argument>
    </service>
    <service id=".service_locator._kmuVa3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="framework" type="service" id=".errored..service_locator._kmuVa3.App\Entity\Framework\Mirror\Framework"/>
      </argument>
    </service>
    <service id=".service_locator.rfWPrtu" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="oAuthCredentialRepository" type="service" id="App\Repository\Framework\Mirror\OAuthCredentialRepository"/>
      </argument>
    </service>
    <service id=".service_locator.3imnR1P" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="oAuthCredential" type="service" id=".errored..service_locator.3imnR1P.App\Entity\Framework\Mirror\OAuthCredential"/>
      </argument>
    </service>
    <service id=".service_locator.DcAK.V5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="serverRepository" type="service" id="App\Repository\Framework\Mirror\ServerRepository"/>
      </argument>
    </service>
    <service id=".service_locator.Q_TN9zW" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mirrorService" type="service" id="App\Service\MirrorServer"/>
        <argument key="server" type="service" id=".errored..service_locator.Q_TN9zW.App\Entity\Framework\Mirror\Server"/>
      </argument>
    </service>
    <service id=".service_locator.AxoVGUV" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="server" type="service" id=".errored..service_locator.AxoVGUV.App\Entity\Framework\Mirror\Server"/>
      </argument>
    </service>
    <service id=".service_locator.Tx4lsi1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mirrorServer" type="service" id="App\Service\MirrorServer"/>
        <argument key="server" type="service" id=".errored..service_locator.Tx4lsi1.App\Entity\Framework\Mirror\Server"/>
      </argument>
    </service>
    <service id=".service_locator.C4ogwRQ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="repo" type="service" id="App\Repository\SessionRepository"/>
      </argument>
    </service>
    <service id=".service_locator..FdxI8h" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="item" type="service" id=".errored..service_locator..FdxI8h.App\Entity\Framework\LsItem"/>
      </argument>
    </service>
    <service id=".service_locator.xS1kUvg" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="association" type="service" id=".errored..service_locator.xS1kUvg.App\Entity\Framework\LsAssociation"/>
      </argument>
    </service>
    <service id=".service_locator.AW0RpFB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="lsDoc" type="service" id=".errored..service_locator.AW0RpFB.App\Entity\Framework\LsDoc"/>
        <argument key="targetUser" type="service" id=".errored..service_locator.AW0RpFB.App\Entity\User\User"/>
      </argument>
    </service>
    <service id=".service_locator.aI7umW_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session"/>
      </argument>
    </service>
    <service id=".service_locator..XIEchK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="organization" type="service" id=".errored..service_locator..XIEchK.App\Entity\User\Organization"/>
      </argument>
    </service>
    <service id=".service_locator.AzwNnXP" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="targetUser" type="service" id=".errored..service_locator.AzwNnXP.App\Entity\User\User"/>
      </argument>
    </service>
    <service id=".service_locator.gmOuYak" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\Api\CaseV1P0Controller::getCfItemAssociationsAction" type="service" id=".service_locator.6WrBBkv"/>
        <argument key="App\Controller\Api\CaseV1P0Controller::getCfPackageAction" type="service" id=".service_locator.KmOPVtE"/>
        <argument key="App\Controller\Api\CaseV1P0Controller::getObjectAction" type="service" id=".service_locator.SiKhn_E"/>
        <argument key="App\Controller\Api\CaseV1P0Controller::getObjectCollectionAction" type="service" id=".service_locator.SiKhn_E"/>
        <argument key="App\Controller\AsnImportController::importAsnAction" type="service" id=".service_locator.fLx15ph"/>
        <argument key="App\Controller\CaseImportController::importAction" type="service" id=".service_locator.fLx15ph"/>
        <argument key="App\Controller\Cms\ExportController::exportAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\CommentsController::deleteAction" type="service" id=".service_locator.M_Q7m8J"/>
        <argument key="App\Controller\CommentsController::downvoteAction" type="service" id=".service_locator.M_Q7m8J"/>
        <argument key="App\Controller\CommentsController::newDocCommentAction" type="service" id=".service_locator.TbTRhyT"/>
        <argument key="App\Controller\CommentsController::newItemCommentAction" type="service" id=".service_locator.2xms8xd"/>
        <argument key="App\Controller\CommentsController::updateAction" type="service" id=".service_locator.M_Q7m8J"/>
        <argument key="App\Controller\CommentsController::upvoteAction" type="service" id=".service_locator.uCCli1R"/>
        <argument key="App\Controller\DocRevisionController::exportDocRevisions" type="service" id=".service_locator.5YezXEp"/>
        <argument key="App\Controller\DocRevisionController::listDocRevisionsAction" type="service" id=".service_locator.5YezXEp"/>
        <argument key="App\Controller\ExcelExportController::exportExcelAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\ExcelImportController::importExcelAction" type="service" id=".service_locator.fLx15ph"/>
        <argument key="App\Controller\Framework\AdditionalFieldController::delete" type="service" id=".service_locator.NXXMC5e"/>
        <argument key="App\Controller\Framework\AdditionalFieldController::show" type="service" id=".service_locator.NXXMC5e"/>
        <argument key="App\Controller\Framework\AdditionalFieldController::update" type="service" id=".service_locator.NXXMC5e"/>
        <argument key="App\Controller\Framework\CfPackageController::exportAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\CloneController::frameworkAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\CopyController::frameworkAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\DocTreeController::deleteAssocGroupAction" type="service" id=".service_locator.m_U.Mu6"/>
        <argument key="App\Controller\Framework\DocTreeController::deleteItemAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\DocTreeController::exportAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\DocTreeController::renderDocumentAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\DocTreeController::treeItemDetailsAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\DocTreeController::updateItemsAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\DocTreeController::viewAction" type="service" id=".service_locator.bpiUpGE"/>
        <argument key="App\Controller\Framework\DocTreeController::viewItemAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\EditorController::renderDocumentAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\EditorController::viewDocAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\EditorController::viewItemAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LockController::extendDocLock" type="service" id=".service_locator.21a9IIF"/>
        <argument key="App\Controller\Framework\LockController::extendItemLock" type="service" id=".service_locator.EOmnp2k"/>
        <argument key="App\Controller\Framework\LockController::releaseDocLock" type="service" id=".service_locator.21a9IIF"/>
        <argument key="App\Controller\Framework\LockController::releaseItemLock" type="service" id=".service_locator.EOmnp2k"/>
        <argument key="App\Controller\Framework\LsAssociationController::deleteAction" type="service" id=".service_locator.VCMnsVU"/>
        <argument key="App\Controller\Framework\LsAssociationController::editAction" type="service" id=".service_locator.VCMnsVU"/>
        <argument key="App\Controller\Framework\LsAssociationController::exportAction" type="service" id=".service_locator.VCMnsVU"/>
        <argument key="App\Controller\Framework\LsAssociationController::removeChildAction" type="service" id=".service_locator.VCMnsVU"/>
        <argument key="App\Controller\Framework\LsAssociationController::showAction" type="service" id=".service_locator.VCMnsVU"/>
        <argument key="App\Controller\Framework\LsAssociationController::treeNewAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsAssociationController::treeNewExemplarAction" type="service" id=".service_locator.aeMmtML"/>
        <argument key="App\Controller\Framework\LsDefAssociationGroupingController::deleteAction" type="service" id=".service_locator.m_U.Mu6"/>
        <argument key="App\Controller\Framework\LsDefAssociationGroupingController::editAction" type="service" id=".service_locator.m_U.Mu6"/>
        <argument key="App\Controller\Framework\LsDefAssociationGroupingController::showAction" type="service" id=".service_locator.m_U.Mu6"/>
        <argument key="App\Controller\Framework\LsDefConceptController::deleteAction" type="service" id=".service_locator.NCK.VRn"/>
        <argument key="App\Controller\Framework\LsDefConceptController::editAction" type="service" id=".service_locator.NCK.VRn"/>
        <argument key="App\Controller\Framework\LsDefConceptController::showAction" type="service" id=".service_locator.NCK.VRn"/>
        <argument key="App\Controller\Framework\LsDefGradeController::deleteAction" type="service" id=".service_locator.ZxADY0N"/>
        <argument key="App\Controller\Framework\LsDefGradeController::editAction" type="service" id=".service_locator.ZxADY0N"/>
        <argument key="App\Controller\Framework\LsDefGradeController::showAction" type="service" id=".service_locator.ZxADY0N"/>
        <argument key="App\Controller\Framework\LsDefItemTypeController::deleteAction" type="service" id=".service_locator.109wlF9"/>
        <argument key="App\Controller\Framework\LsDefItemTypeController::editAction" type="service" id=".service_locator.109wlF9"/>
        <argument key="App\Controller\Framework\LsDefItemTypeController::showAction" type="service" id=".service_locator.109wlF9"/>
        <argument key="App\Controller\Framework\LsDefLicenceController::deleteAction" type="service" id=".service_locator.uFlu2Wf"/>
        <argument key="App\Controller\Framework\LsDefLicenceController::editAction" type="service" id=".service_locator.uFlu2Wf"/>
        <argument key="App\Controller\Framework\LsDefLicenceController::showAction" type="service" id=".service_locator.uFlu2Wf"/>
        <argument key="App\Controller\Framework\LsDefSubjectController::deleteAction" type="service" id=".service_locator.WDiCgSw"/>
        <argument key="App\Controller\Framework\LsDefSubjectController::editAction" type="service" id=".service_locator.WDiCgSw"/>
        <argument key="App\Controller\Framework\LsDefSubjectController::showAction" type="service" id=".service_locator.WDiCgSw"/>
        <argument key="App\Controller\Framework\LsDocController::deleteAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsDocController::deriveAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsDocController::editAction" type="service" id=".service_locator.21a9IIF"/>
        <argument key="App\Controller\Framework\LsDocController::exportAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsDocController::showAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsDocController::updateAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsItemController::changeParentAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LsItemController::copyAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LsItemController::deleteAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LsItemController::editAction" type="service" id=".service_locator.TWoyDn0"/>
        <argument key="App\Controller\Framework\LsItemController::exportAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LsItemController::newAction" type="service" id=".service_locator.DUyDGdR"/>
        <argument key="App\Controller\Framework\LsItemController::removeChildAction" type="service" id=".service_locator.vfhzsZj"/>
        <argument key="App\Controller\Framework\LsItemController::showAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LsItemController::uploadAttachmentAction" type="service" id=".service_locator.pRiEuit"/>
        <argument key="App\Controller\ImportLogsController::markAsReadAction" type="service" id=".service_locator.5YezXEp"/>
        <argument key="App\Controller\Mirror\FrameworkController::disable" type="service" id=".service_locator._kmuVa3"/>
        <argument key="App\Controller\Mirror\FrameworkController::enable" type="service" id=".service_locator._kmuVa3"/>
        <argument key="App\Controller\Mirror\FrameworkController::new" type="service" id=".service_locator.52yt0sh"/>
        <argument key="App\Controller\Mirror\FrameworkController::refresh" type="service" id=".service_locator._kmuVa3"/>
        <argument key="App\Controller\Mirror\FrameworkController::resolveConflict" type="service" id=".service_locator._kmuVa3"/>
        <argument key="App\Controller\Mirror\FrameworkController::viewLog" type="service" id=".service_locator._kmuVa3"/>
        <argument key="App\Controller\Mirror\OAuthCredentialsController::delete" type="service" id=".service_locator.3imnR1P"/>
        <argument key="App\Controller\Mirror\OAuthCredentialsController::edit" type="service" id=".service_locator.3imnR1P"/>
        <argument key="App\Controller\Mirror\OAuthCredentialsController::index" type="service" id=".service_locator.rfWPrtu"/>
        <argument key="App\Controller\Mirror\OAuthCredentialsController::show" type="service" id=".service_locator.3imnR1P"/>
        <argument key="App\Controller\Mirror\ServerController::edit" type="service" id=".service_locator.Q_TN9zW"/>
        <argument key="App\Controller\Mirror\ServerController::index" type="service" id=".service_locator.DcAK.V5"/>
        <argument key="App\Controller\Mirror\ServerController::list" type="service" id=".service_locator.AxoVGUV"/>
        <argument key="App\Controller\Mirror\ServerController::new" type="service" id=".service_locator.52yt0sh"/>
        <argument key="App\Controller\Mirror\ServerController::refresh" type="service" id=".service_locator.Tx4lsi1"/>
        <argument key="App\Controller\Mirror\ServerController::remove" type="service" id=".service_locator.AxoVGUV"/>
        <argument key="App\Controller\SessionController::currentSession" type="service" id=".service_locator.C4ogwRQ"/>
        <argument key="App\Controller\UiInfoController::associationJsonInfoAction" type="service" id=".service_locator.xS1kUvg"/>
        <argument key="App\Controller\UiInfoController::docJsonInfoAction" type="service" id=".service_locator.5YezXEp"/>
        <argument key="App\Controller\UiInfoController::itemJsonInfoAction" type="service" id=".service_locator..FdxI8h"/>
        <argument key="App\Controller\UiInfoController::multiJsonInfoAction" type="service" id=".service_locator.5YezXEp"/>
        <argument key="App\Controller\User\FrameworkAclController::editAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\User\FrameworkAclController::removeAclAction" type="service" id=".service_locator.AW0RpFB"/>
        <argument key="App\Controller\User\OAuthServiceController::githubAction" type="service" id=".service_locator.aI7umW_"/>
        <argument key="App\Controller\User\OrganizationController::deleteAction" type="service" id=".service_locator..XIEchK"/>
        <argument key="App\Controller\User\OrganizationController::editAction" type="service" id=".service_locator..XIEchK"/>
        <argument key="App\Controller\User\OrganizationController::showAction" type="service" id=".service_locator..XIEchK"/>
        <argument key="App\Controller\User\UserController::activateAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Controller\User\UserController::deleteAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Controller\User\UserController::editAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Controller\User\UserController::rejectAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Controller\User\UserController::showAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Controller\User\UserController::suspendAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Kernel::loadRoutes" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="App\Kernel::registerContainerConfiguration" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="App\Kernel::terminate" type="service" id=".service_locator.beq5mCo"/>
        <argument key="kernel::loadRoutes" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="kernel::registerContainerConfiguration" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="kernel::terminate" type="service" id=".service_locator.beq5mCo"/>
        <argument key="App\Controller\Api\CaseV1P0Controller:getCfItemAssociationsAction" type="service" id=".service_locator.6WrBBkv"/>
        <argument key="App\Controller\Api\CaseV1P0Controller:getCfPackageAction" type="service" id=".service_locator.KmOPVtE"/>
        <argument key="App\Controller\Api\CaseV1P0Controller:getObjectAction" type="service" id=".service_locator.SiKhn_E"/>
        <argument key="App\Controller\Api\CaseV1P0Controller:getObjectCollectionAction" type="service" id=".service_locator.SiKhn_E"/>
        <argument key="App\Controller\AsnImportController:importAsnAction" type="service" id=".service_locator.fLx15ph"/>
        <argument key="App\Controller\CaseImportController:importAction" type="service" id=".service_locator.fLx15ph"/>
        <argument key="App\Controller\Cms\ExportController:exportAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\CommentsController:deleteAction" type="service" id=".service_locator.M_Q7m8J"/>
        <argument key="App\Controller\CommentsController:downvoteAction" type="service" id=".service_locator.M_Q7m8J"/>
        <argument key="App\Controller\CommentsController:newDocCommentAction" type="service" id=".service_locator.TbTRhyT"/>
        <argument key="App\Controller\CommentsController:newItemCommentAction" type="service" id=".service_locator.2xms8xd"/>
        <argument key="App\Controller\CommentsController:updateAction" type="service" id=".service_locator.M_Q7m8J"/>
        <argument key="App\Controller\CommentsController:upvoteAction" type="service" id=".service_locator.uCCli1R"/>
        <argument key="App\Controller\DocRevisionController:exportDocRevisions" type="service" id=".service_locator.5YezXEp"/>
        <argument key="App\Controller\DocRevisionController:listDocRevisionsAction" type="service" id=".service_locator.5YezXEp"/>
        <argument key="App\Controller\ExcelExportController:exportExcelAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\ExcelImportController:importExcelAction" type="service" id=".service_locator.fLx15ph"/>
        <argument key="App\Controller\Framework\AdditionalFieldController:delete" type="service" id=".service_locator.NXXMC5e"/>
        <argument key="App\Controller\Framework\AdditionalFieldController:show" type="service" id=".service_locator.NXXMC5e"/>
        <argument key="App\Controller\Framework\AdditionalFieldController:update" type="service" id=".service_locator.NXXMC5e"/>
        <argument key="App\Controller\Framework\CfPackageController:exportAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\CloneController:frameworkAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\CopyController:frameworkAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\DocTreeController:deleteAssocGroupAction" type="service" id=".service_locator.m_U.Mu6"/>
        <argument key="App\Controller\Framework\DocTreeController:deleteItemAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\DocTreeController:exportAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\DocTreeController:renderDocumentAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\DocTreeController:treeItemDetailsAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\DocTreeController:updateItemsAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\DocTreeController:viewAction" type="service" id=".service_locator.bpiUpGE"/>
        <argument key="App\Controller\Framework\DocTreeController:viewItemAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\EditorController:renderDocumentAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\EditorController:viewDocAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\EditorController:viewItemAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LockController:extendDocLock" type="service" id=".service_locator.21a9IIF"/>
        <argument key="App\Controller\Framework\LockController:extendItemLock" type="service" id=".service_locator.EOmnp2k"/>
        <argument key="App\Controller\Framework\LockController:releaseDocLock" type="service" id=".service_locator.21a9IIF"/>
        <argument key="App\Controller\Framework\LockController:releaseItemLock" type="service" id=".service_locator.EOmnp2k"/>
        <argument key="App\Controller\Framework\LsAssociationController:deleteAction" type="service" id=".service_locator.VCMnsVU"/>
        <argument key="App\Controller\Framework\LsAssociationController:editAction" type="service" id=".service_locator.VCMnsVU"/>
        <argument key="App\Controller\Framework\LsAssociationController:exportAction" type="service" id=".service_locator.VCMnsVU"/>
        <argument key="App\Controller\Framework\LsAssociationController:removeChildAction" type="service" id=".service_locator.VCMnsVU"/>
        <argument key="App\Controller\Framework\LsAssociationController:showAction" type="service" id=".service_locator.VCMnsVU"/>
        <argument key="App\Controller\Framework\LsAssociationController:treeNewAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsAssociationController:treeNewExemplarAction" type="service" id=".service_locator.aeMmtML"/>
        <argument key="App\Controller\Framework\LsDefAssociationGroupingController:deleteAction" type="service" id=".service_locator.m_U.Mu6"/>
        <argument key="App\Controller\Framework\LsDefAssociationGroupingController:editAction" type="service" id=".service_locator.m_U.Mu6"/>
        <argument key="App\Controller\Framework\LsDefAssociationGroupingController:showAction" type="service" id=".service_locator.m_U.Mu6"/>
        <argument key="App\Controller\Framework\LsDefConceptController:deleteAction" type="service" id=".service_locator.NCK.VRn"/>
        <argument key="App\Controller\Framework\LsDefConceptController:editAction" type="service" id=".service_locator.NCK.VRn"/>
        <argument key="App\Controller\Framework\LsDefConceptController:showAction" type="service" id=".service_locator.NCK.VRn"/>
        <argument key="App\Controller\Framework\LsDefGradeController:deleteAction" type="service" id=".service_locator.ZxADY0N"/>
        <argument key="App\Controller\Framework\LsDefGradeController:editAction" type="service" id=".service_locator.ZxADY0N"/>
        <argument key="App\Controller\Framework\LsDefGradeController:showAction" type="service" id=".service_locator.ZxADY0N"/>
        <argument key="App\Controller\Framework\LsDefItemTypeController:deleteAction" type="service" id=".service_locator.109wlF9"/>
        <argument key="App\Controller\Framework\LsDefItemTypeController:editAction" type="service" id=".service_locator.109wlF9"/>
        <argument key="App\Controller\Framework\LsDefItemTypeController:showAction" type="service" id=".service_locator.109wlF9"/>
        <argument key="App\Controller\Framework\LsDefLicenceController:deleteAction" type="service" id=".service_locator.uFlu2Wf"/>
        <argument key="App\Controller\Framework\LsDefLicenceController:editAction" type="service" id=".service_locator.uFlu2Wf"/>
        <argument key="App\Controller\Framework\LsDefLicenceController:showAction" type="service" id=".service_locator.uFlu2Wf"/>
        <argument key="App\Controller\Framework\LsDefSubjectController:deleteAction" type="service" id=".service_locator.WDiCgSw"/>
        <argument key="App\Controller\Framework\LsDefSubjectController:editAction" type="service" id=".service_locator.WDiCgSw"/>
        <argument key="App\Controller\Framework\LsDefSubjectController:showAction" type="service" id=".service_locator.WDiCgSw"/>
        <argument key="App\Controller\Framework\LsDocController:deleteAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsDocController:deriveAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsDocController:editAction" type="service" id=".service_locator.21a9IIF"/>
        <argument key="App\Controller\Framework\LsDocController:exportAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsDocController:showAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsDocController:updateAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\Framework\LsItemController:changeParentAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LsItemController:copyAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LsItemController:deleteAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LsItemController:editAction" type="service" id=".service_locator.TWoyDn0"/>
        <argument key="App\Controller\Framework\LsItemController:exportAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LsItemController:newAction" type="service" id=".service_locator.DUyDGdR"/>
        <argument key="App\Controller\Framework\LsItemController:removeChildAction" type="service" id=".service_locator.vfhzsZj"/>
        <argument key="App\Controller\Framework\LsItemController:showAction" type="service" id=".service_locator.Jlt.5eM"/>
        <argument key="App\Controller\Framework\LsItemController:uploadAttachmentAction" type="service" id=".service_locator.pRiEuit"/>
        <argument key="App\Controller\ImportLogsController:markAsReadAction" type="service" id=".service_locator.5YezXEp"/>
        <argument key="App\Controller\Mirror\FrameworkController:disable" type="service" id=".service_locator._kmuVa3"/>
        <argument key="App\Controller\Mirror\FrameworkController:enable" type="service" id=".service_locator._kmuVa3"/>
        <argument key="App\Controller\Mirror\FrameworkController:new" type="service" id=".service_locator.52yt0sh"/>
        <argument key="App\Controller\Mirror\FrameworkController:refresh" type="service" id=".service_locator._kmuVa3"/>
        <argument key="App\Controller\Mirror\FrameworkController:resolveConflict" type="service" id=".service_locator._kmuVa3"/>
        <argument key="App\Controller\Mirror\FrameworkController:viewLog" type="service" id=".service_locator._kmuVa3"/>
        <argument key="App\Controller\Mirror\OAuthCredentialsController:delete" type="service" id=".service_locator.3imnR1P"/>
        <argument key="App\Controller\Mirror\OAuthCredentialsController:edit" type="service" id=".service_locator.3imnR1P"/>
        <argument key="App\Controller\Mirror\OAuthCredentialsController:index" type="service" id=".service_locator.rfWPrtu"/>
        <argument key="App\Controller\Mirror\OAuthCredentialsController:show" type="service" id=".service_locator.3imnR1P"/>
        <argument key="App\Controller\Mirror\ServerController:edit" type="service" id=".service_locator.Q_TN9zW"/>
        <argument key="App\Controller\Mirror\ServerController:index" type="service" id=".service_locator.DcAK.V5"/>
        <argument key="App\Controller\Mirror\ServerController:list" type="service" id=".service_locator.AxoVGUV"/>
        <argument key="App\Controller\Mirror\ServerController:new" type="service" id=".service_locator.52yt0sh"/>
        <argument key="App\Controller\Mirror\ServerController:refresh" type="service" id=".service_locator.Tx4lsi1"/>
        <argument key="App\Controller\Mirror\ServerController:remove" type="service" id=".service_locator.AxoVGUV"/>
        <argument key="App\Controller\SessionController:currentSession" type="service" id=".service_locator.C4ogwRQ"/>
        <argument key="App\Controller\UiInfoController:associationJsonInfoAction" type="service" id=".service_locator.xS1kUvg"/>
        <argument key="App\Controller\UiInfoController:docJsonInfoAction" type="service" id=".service_locator.5YezXEp"/>
        <argument key="App\Controller\UiInfoController:itemJsonInfoAction" type="service" id=".service_locator..FdxI8h"/>
        <argument key="App\Controller\UiInfoController:multiJsonInfoAction" type="service" id=".service_locator.5YezXEp"/>
        <argument key="App\Controller\User\FrameworkAclController:editAction" type="service" id=".service_locator.yy09t2m"/>
        <argument key="App\Controller\User\FrameworkAclController:removeAclAction" type="service" id=".service_locator.AW0RpFB"/>
        <argument key="App\Controller\User\OAuthServiceController:githubAction" type="service" id=".service_locator.aI7umW_"/>
        <argument key="App\Controller\User\OrganizationController:deleteAction" type="service" id=".service_locator..XIEchK"/>
        <argument key="App\Controller\User\OrganizationController:editAction" type="service" id=".service_locator..XIEchK"/>
        <argument key="App\Controller\User\OrganizationController:showAction" type="service" id=".service_locator..XIEchK"/>
        <argument key="App\Controller\User\UserController:activateAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Controller\User\UserController:deleteAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Controller\User\UserController:editAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Controller\User\UserController:rejectAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Controller\User\UserController:showAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="App\Controller\User\UserController:suspendAction" type="service" id=".service_locator.AzwNnXP"/>
        <argument key="kernel:loadRoutes" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="kernel:registerContainerConfiguration" type="service" id=".service_locator.C9JCBPC"/>
        <argument key="kernel:terminate" type="service" id=".service_locator.beq5mCo"/>
      </argument>
    </service>
    <service id=".service_locator.UYjghYd" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Validator\Constraints\PasswordFieldValidator" type="service" id="App\Validator\Constraints\PasswordFieldValidator"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.bHbll7p" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="esi" type="service" id="fragment.renderer.esi"/>
        <argument key="hinclude" type="service" id="fragment.renderer.hinclude"/>
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.tJNUghM" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Form\Type\AddAclUserType" type="service" id="App\Form\Type\AddAclUserType"/>
        <argument key="App\Form\Type\AddAclUsernameType" type="service" id="App\Form\Type\AddAclUsernameType"/>
        <argument key="App\Form\Type\AdditionalFieldType" type="service" id="App\Form\Type\AdditionalFieldType"/>
        <argument key="App\Form\Type\ChangePasswordType" type="service" id="App\Form\Type\ChangePasswordType"/>
        <argument key="App\Form\Type\CustomFieldsType" type="service" id="App\Form\Type\CustomFieldsType"/>
        <argument key="App\Form\Type\DatalistType" type="service" id="App\Form\Type\DatalistType"/>
        <argument key="App\Form\Type\LsAssociationAjaxType" type="service" id="App\Form\Type\LsAssociationAjaxType"/>
        <argument key="App\Form\Type\LsAssociationTreeType" type="service" id="App\Form\Type\LsAssociationTreeType"/>
        <argument key="App\Form\Type\LsAssociationType" type="service" id="App\Form\Type\LsAssociationType"/>
        <argument key="App\Form\Type\LsDefAssociationGroupingType" type="service" id="App\Form\Type\LsDefAssociationGroupingType"/>
        <argument key="App\Form\Type\LsDefConceptType" type="service" id="App\Form\Type\LsDefConceptType"/>
        <argument key="App\Form\Type\LsDefGradeType" type="service" id="App\Form\Type\LsDefGradeType"/>
        <argument key="App\Form\Type\LsDefItemTypeType" type="service" id="App\Form\Type\LsDefItemTypeType"/>
        <argument key="App\Form\Type\LsDefLicenceType" type="service" id="App\Form\Type\LsDefLicenceType"/>
        <argument key="App\Form\Type\LsDefSubjectType" type="service" id="App\Form\Type\LsDefSubjectType"/>
        <argument key="App\Form\Type\LsDocCreateType" type="service" id="App\Form\Type\LsDocCreateType"/>
        <argument key="App\Form\Type\LsDocListType" type="service" id="App\Form\Type\LsDocListType"/>
        <argument key="App\Form\Type\LsDocType" type="service" id="App\Form\Type\LsDocType"/>
        <argument key="App\Form\Type\LsItemParentType" type="service" id="App\Form\Type\LsItemParentType"/>
        <argument key="App\Form\Type\LsItemType" type="service" id="App\Form\Type\LsItemType"/>
        <argument key="App\Form\Type\MirroredFrameworkDTOType" type="service" id="App\Form\Type\MirroredFrameworkDTOType"/>
        <argument key="App\Form\Type\MirroredServerDTOType" type="service" id="App\Form\Type\MirroredServerDTOType"/>
        <argument key="App\Form\Type\NewFrameworkType" type="service" id="App\Form\Type\NewFrameworkType"/>
        <argument key="App\Form\Type\OAuthCredentialDTOType" type="service" id="App\Form\Type\OAuthCredentialDTOType"/>
        <argument key="App\Form\Type\OrganizationType" type="service" id="App\Form\Type\OrganizationType"/>
        <argument key="App\Form\Type\RemoteCaseServerType" type="service" id="App\Form\Type\RemoteCaseServerType"/>
        <argument key="App\Form\Type\SignupType" type="service" id="App\Form\Type\SignupType"/>
        <argument key="App\Form\Type\UserType" type="service" id="App\Form\Type\UserType"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ColorType" type="service" id="form.type.color"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
        <argument key="Tetranz\Select2EntityBundle\Form\Type\Select2EntityType" type="service" id="tetranz_select2entity.select2entity_type"/>
      </argument>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.role_hierarchy_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\AssociationVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\AssociationVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\CommentVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\CommentVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\FeatureVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\FeatureVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\FrameworkAccessVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\FrameworkAccessVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\FrameworkManageEditorsVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\FrameworkManageEditorsVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\ItemVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\ItemVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\ManageAdditionalFieldVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\ManageAdditionalFieldVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\ManageLogVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\ManageLogVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\ManageMirrorVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\ManageMirrorVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\ManageOrganizationVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\ManageOrganizationVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.App\Security\Voter\ManageUserVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="App\Security\Voter\ManageUserVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.listener.csrf_token_clearing" class="Symfony\Component\Security\Http\EventListener\CsrfTokenClearingLogoutListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="security.ldap_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <argument type="collection"/>
    </service>
    <service id=".service_locator.6RweocE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.zCZyUMB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Api\CaseDocController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Api\CaseDocController"/>
      <argument>App\Controller\Api\CaseDocController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Api\CaseV1P0Controller" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Api\CaseV1P0Controller"/>
      <argument>App\Controller\Api\CaseV1P0Controller</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Api\LorSupportController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Api\LorSupportController"/>
      <argument>App\Controller\Api\LorSupportController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\AsnImportController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\AsnImportController"/>
      <argument>App\Controller\AsnImportController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\CaseImportController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\CaseImportController"/>
      <argument>App\Controller\CaseImportController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Cms\ExportController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Cms\ExportController"/>
      <argument>App\Controller\Cms\ExportController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\CommentsController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\CommentsController"/>
      <argument>App\Controller\CommentsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\DefaultController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\DefaultController"/>
      <argument>App\Controller\DefaultController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\DocRevisionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\DocRevisionController"/>
      <argument>App\Controller\DocRevisionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\ExcelExportController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\ExcelExportController"/>
      <argument>App\Controller\ExcelExportController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\ExcelImportController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\ExcelImportController"/>
      <argument>App\Controller\ExcelImportController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\AdditionalFieldController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\AdditionalFieldController"/>
      <argument>App\Controller\Framework\AdditionalFieldController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\CfPackageController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\CfPackageController"/>
      <argument>App\Controller\Framework\CfPackageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\CloneController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\CloneController"/>
      <argument>App\Controller\Framework\CloneController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\CopyController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\CopyController"/>
      <argument>App\Controller\Framework\CopyController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\DocTreeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\DocTreeController"/>
      <argument>App\Controller\Framework\DocTreeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\EditorController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\EditorController"/>
      <argument>App\Controller\Framework\EditorController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\LockController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\LockController"/>
      <argument>App\Controller\Framework\LockController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\LsAssociationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\LsAssociationController"/>
      <argument>App\Controller\Framework\LsAssociationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefAssociationGroupingController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\LsDefAssociationGroupingController"/>
      <argument>App\Controller\Framework\LsDefAssociationGroupingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefConceptController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\LsDefConceptController"/>
      <argument>App\Controller\Framework\LsDefConceptController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefGradeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\LsDefGradeController"/>
      <argument>App\Controller\Framework\LsDefGradeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefItemTypeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\LsDefItemTypeController"/>
      <argument>App\Controller\Framework\LsDefItemTypeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefLicenceController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\LsDefLicenceController"/>
      <argument>App\Controller\Framework\LsDefLicenceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\LsDefSubjectController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\LsDefSubjectController"/>
      <argument>App\Controller\Framework\LsDefSubjectController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\LsDocController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\LsDocController"/>
      <argument>App\Controller\Framework\LsDocController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Framework\LsItemController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Framework\LsItemController"/>
      <argument>App\Controller\Framework\LsItemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\GithubImportController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\GithubImportController"/>
      <argument>App\Controller\GithubImportController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\GithubOauthController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\GithubOauthController"/>
      <argument>App\Controller\GithubOauthController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\ImportLogsController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\ImportLogsController"/>
      <argument>App\Controller\ImportLogsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Mirror\FrameworkController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Mirror\FrameworkController"/>
      <argument>App\Controller\Mirror\FrameworkController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Mirror\OAuthCredentialsController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Mirror\OAuthCredentialsController"/>
      <argument>App\Controller\Mirror\OAuthCredentialsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Mirror\ServerController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Mirror\ServerController"/>
      <argument>App\Controller\Mirror\ServerController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\PdfExportController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\PdfExportController"/>
      <argument>App\Controller\PdfExportController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\SessionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\SessionController"/>
      <argument>App\Controller\SessionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Site\AboutController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Site\AboutController"/>
      <argument>App\Controller\Site\AboutController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\Site\DevController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Site\DevController"/>
      <argument>App\Controller\Site\DevController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\SystemLogController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\SystemLogController"/>
      <argument>App\Controller\SystemLogController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\UiInfoController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\UiInfoController"/>
      <argument>App\Controller\UiInfoController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\UriController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\UriController"/>
      <argument>App\Controller\UriController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\User\ChangePasswordController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\User\ChangePasswordController"/>
      <argument>App\Controller\User\ChangePasswordController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\User\FrameworkAclController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\User\FrameworkAclController"/>
      <argument>App\Controller\User\FrameworkAclController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\User\OAuthServiceController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\User\OAuthServiceController"/>
      <argument>App\Controller\User\OAuthServiceController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\User\OrganizationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\User\OrganizationController"/>
      <argument>App\Controller\User\OrganizationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\User\SecurityController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\User\SecurityController"/>
      <argument>App\Controller\User\SecurityController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\User\SignupController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\User\SignupController"/>
      <argument>App\Controller\User\SignupController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.zCZyUMB.App\Controller\User\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\User\UserController"/>
      <argument>App\Controller\User\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.zCZyUMB" method="withContext"/>
    </service>
    <service id=".service_locator.Wbzuv5A" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.Wbzuv5A.sensio_framework_extra.view.listener" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="sensio_framework_extra.view.listener"/>
      <argument>sensio_framework_extra.view.listener</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.Wbzuv5A" method="withContext"/>
    </service>
    <service id=".service_locator.s2oGJED" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.s2oGJED.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.s2oGJED" method="withContext"/>
    </service>
    <service id=".service_locator.VU7ISSz" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.VU7ISSz.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.VU7ISSz" method="withContext"/>
    </service>
    <service id=".service_locator.LHmLVnd" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.LHmLVnd.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.LHmLVnd" method="withContext"/>
    </service>
    <service id=".service_locator.VF.njwi" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.VF.njwi.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.VF.njwi" method="withContext"/>
    </service>
    <service id=".service_locator.hbcatdF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.Kila8KX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="logger" type="service" id="monolog.logger" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.51fe2Cf" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.t1zFPXA" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="env" type="service" id="container.getenv"/>
      </argument>
    </service>
    <service id=".service_locator.nAEpldE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session"/>
      </argument>
    </service>
    <service id=".service_locator.eYaJuY9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="false">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="serializer.mapping.cache_class_metadata_factory.inner" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\AssociationVoter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\CommentVoter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\FeatureVoter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\FrameworkAccessVoter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\FrameworkManageEditorsVoter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\ItemVoter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\ManageAdditionalFieldVoter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\ManageLogVoter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\ManageMirrorVoter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\ManageOrganizationVoter"/>
        <argument type="service" id="debug.security.voter.App\Security\Voter\ManageUserVoter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="var_dumper.contextualized_cli_dumper.inner" class="Symfony\Component\VarDumper\Dumper\CliDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.gmOuYak"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver" public="false">
      <argument type="service" id=".service_locator.gmOuYak"/>
    </service>
    <service id=".errored..service_locator.beq5mCo.Symfony\Component\HttpFoundation\Response" class="Symfony\Component\HttpFoundation\Response"/>
    <service id=".errored..service_locator.C9JCBPC.Symfony\Component\Config\Loader\LoaderInterface" class="Symfony\Component\Config\Loader\LoaderInterface"/>
    <service id=".errored..service_locator.KmOPVtE.App\Entity\Framework\LsDoc" class="App\Entity\Framework\LsDoc"/>
    <service id=".errored..service_locator.6WrBBkv.App\Entity\Framework\LsItem" class="App\Entity\Framework\LsItem"/>
    <service id=".errored..service_locator.fLx15ph.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id=".errored..service_locator.yy09t2m.App\Entity\Framework\LsDoc" class="App\Entity\Framework\LsDoc"/>
    <service id=".errored..service_locator.TbTRhyT.App\Entity\Framework\LsDoc" class="App\Entity\Framework\LsDoc"/>
    <service id=".errored..service_locator.TbTRhyT.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id=".errored..service_locator.2xms8xd.App\Entity\Framework\LsItem" class="App\Entity\Framework\LsItem"/>
    <service id=".errored..service_locator.2xms8xd.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id=".errored..service_locator.M_Q7m8J.App\Entity\Comment\Comment" class="App\Entity\Comment\Comment"/>
    <service id=".errored..service_locator.M_Q7m8J.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id=".errored..service_locator.uCCli1R.App\Entity\Comment\Comment" class="App\Entity\Comment\Comment"/>
    <service id=".errored..service_locator.5YezXEp.App\Entity\Framework\LsDoc" class="App\Entity\Framework\LsDoc"/>
    <service id=".errored..service_locator.NXXMC5e.App\Entity\Framework\AdditionalField" class="App\Entity\Framework\AdditionalField"/>
    <service id=".errored..service_locator.bpiUpGE.App\Entity\Framework\LsDoc" class="App\Entity\Framework\LsDoc"/>
    <service id=".errored..service_locator.Jlt.5eM.App\Entity\Framework\LsItem" class="App\Entity\Framework\LsItem"/>
    <service id=".errored..service_locator.m_U.Mu6.App\Entity\Framework\LsDefAssociationGrouping" class="App\Entity\Framework\LsDefAssociationGrouping"/>
    <service id=".errored..service_locator.21a9IIF.App\Entity\Framework\LsDoc" class="App\Entity\Framework\LsDoc"/>
    <service id=".errored..service_locator.21a9IIF.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id=".errored..service_locator.EOmnp2k.App\Entity\Framework\LsItem" class="App\Entity\Framework\LsItem"/>
    <service id=".errored..service_locator.EOmnp2k.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id=".errored..service_locator.aeMmtML.App\Entity\Framework\LsItem" class="App\Entity\Framework\LsItem"/>
    <service id=".errored..service_locator.VCMnsVU.App\Entity\Framework\LsAssociation" class="App\Entity\Framework\LsAssociation"/>
    <service id=".errored..service_locator.NCK.VRn.App\Entity\Framework\LsDefConcept" class="App\Entity\Framework\LsDefConcept"/>
    <service id=".errored..service_locator.ZxADY0N.App\Entity\Framework\LsDefGrade" class="App\Entity\Framework\LsDefGrade"/>
    <service id=".errored..service_locator.109wlF9.App\Entity\Framework\LsDefItemType" class="App\Entity\Framework\LsDefItemType"/>
    <service id=".errored..service_locator.uFlu2Wf.App\Entity\Framework\LsDefLicence" class="App\Entity\Framework\LsDefLicence"/>
    <service id=".errored..service_locator.WDiCgSw.App\Entity\Framework\LsDefSubject" class="App\Entity\Framework\LsDefSubject"/>
    <service id=".errored..service_locator.DUyDGdR.App\Entity\Framework\LsDoc" class="App\Entity\Framework\LsDoc"/>
    <service id=".errored..service_locator.TWoyDn0.App\Entity\Framework\LsItem" class="App\Entity\Framework\LsItem"/>
    <service id=".errored..service_locator.TWoyDn0.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id=".errored..service_locator.vfhzsZj.App\Entity\Framework\LsItem" class="App\Entity\Framework\LsItem"/>
    <service id=".errored..service_locator.pRiEuit.App\Entity\Framework\LsDoc" class="App\Entity\Framework\LsDoc"/>
    <service id=".errored..service_locator._kmuVa3.App\Entity\Framework\Mirror\Framework" class="App\Entity\Framework\Mirror\Framework"/>
    <service id=".errored..service_locator.3imnR1P.App\Entity\Framework\Mirror\OAuthCredential" class="App\Entity\Framework\Mirror\OAuthCredential"/>
    <service id=".errored..service_locator.Q_TN9zW.App\Entity\Framework\Mirror\Server" class="App\Entity\Framework\Mirror\Server"/>
    <service id=".errored..service_locator.AxoVGUV.App\Entity\Framework\Mirror\Server" class="App\Entity\Framework\Mirror\Server"/>
    <service id=".errored..service_locator.Tx4lsi1.App\Entity\Framework\Mirror\Server" class="App\Entity\Framework\Mirror\Server"/>
    <service id=".errored..service_locator..FdxI8h.App\Entity\Framework\LsItem" class="App\Entity\Framework\LsItem"/>
    <service id=".errored..service_locator.xS1kUvg.App\Entity\Framework\LsAssociation" class="App\Entity\Framework\LsAssociation"/>
    <service id=".errored..service_locator.AW0RpFB.App\Entity\Framework\LsDoc" class="App\Entity\Framework\LsDoc"/>
    <service id=".errored..service_locator.AW0RpFB.App\Entity\User\User" class="App\Entity\User\User"/>
    <service id=".errored..service_locator..XIEchK.App\Entity\User\Organization" class="App\Entity\User\Organization"/>
    <service id=".errored..service_locator.AzwNnXP.App\Entity\User\User" class="App\Entity\User\User"/>
    <service id=".service_locator.XpYHIi8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service" id="jms_serializer.doctrine_proxy_subscriber"/>
        <argument key="jms_serializer.stopwatch_subscriber" type="service" id="jms_serializer.stopwatch_subscriber"/>
      </argument>
    </service>
    <service id=".service_locator.HG6_wa8" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jms_serializer.array_collection_handler" type="service" id="jms_serializer.array_collection_handler"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service" id="jms_serializer.constraint_violation_handler"/>
        <argument key="jms_serializer.datetime_handler" type="service" id="jms_serializer.datetime_handler"/>
        <argument key="jms_serializer.form_error_handler" type="service" id="jms_serializer.form_error_handler"/>
        <argument key="jms_serializer.iterator_handler" type="service" id="jms_serializer.iterator_handler"/>
      </argument>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <tag name="container.no_preload"/>
      <argument type="service" id=".service_locator.lR49iPQ"/>
      <argument type="collection">
        <argument key="firebase:clear">App\Console\ClearFirebaseNotificationsCommand</argument>
        <argument key="cfpackage:delete">App\Console\Framework\CfpackageDeleteCommand</argument>
        <argument key="import:asn">App\Console\Import\ImportAsnCommand</argument>
        <argument key="import:case-json">App\Console\Import\ImportCaseJsonCommand</argument>
        <argument key="import:generic-csv">App\Console\Import\ImportGeneric1Command</argument>
        <argument key="mirror:framework">App\Console\Mirror\MirrorFrameworkCommand</argument>
        <argument key="jobs:mirror">App\Console\Mirror\MirrorJobCommand</argument>
        <argument key="jobs:update-next-server">App\Console\Mirror\UpdateListCommand</argument>
        <argument key="debug:swiftmailer">swiftmailer.command.debug</argument>
        <argument key="swiftmailer:email:send">swiftmailer.command.new_email</argument>
        <argument key="swiftmailer:spool:send">swiftmailer.command.send_email</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:sync-metadata-storage">doctrine_migrations.sync_metadata_command</argument>
        <argument key="doctrine:migrations:list">doctrine_migrations.versions_command</argument>
        <argument key="doctrine:migrations:current">doctrine_migrations.current_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="doctrine:fixtures:load">doctrine.fixtures_load_command</argument>
        <argument key="psysh">psysh.command.shell_command</argument>
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="server:dump">var_dumper.command.server_dump</argument>
        <argument key="server:log">monolog.command.server_log</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:docker:database">maker.auto_command.make_docker_database</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:functional-test">maker.auto_command.make_functional_test</argument>
        <argument key="make:message">maker.auto_command.make_message</argument>
        <argument key="make:messenger-middleware">maker.auto_command.make_messenger_middleware</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:reset-password">maker.auto_command.make_reset_password</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:subscriber">maker.auto_command.make_subscriber</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:unit-test">maker.auto_command.make_unit_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
      </argument>
    </service>
    <service id=".service_locator.lR49iPQ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Console\ClearFirebaseNotificationsCommand" type="service" id="App\Console\ClearFirebaseNotificationsCommand"/>
        <argument key="App\Console\Framework\CfpackageDeleteCommand" type="service" id="App\Console\Framework\CfpackageDeleteCommand"/>
        <argument key="App\Console\Import\ImportAsnCommand" type="service" id="App\Console\Import\ImportAsnCommand"/>
        <argument key="App\Console\Import\ImportCaseJsonCommand" type="service" id="App\Console\Import\ImportCaseJsonCommand"/>
        <argument key="App\Console\Import\ImportGeneric1Command" type="service" id="App\Console\Import\ImportGeneric1Command"/>
        <argument key="App\Console\Mirror\MirrorFrameworkCommand" type="service" id="App\Console\Mirror\MirrorFrameworkCommand"/>
        <argument key="App\Console\Mirror\MirrorJobCommand" type="service" id="App\Console\Mirror\MirrorJobCommand"/>
        <argument key="App\Console\Mirror\UpdateListCommand" type="service" id="App\Console\Mirror\UpdateListCommand"/>
        <argument key="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand" type="service" id="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand"/>
        <argument key="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand" type="service" id="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand"/>
        <argument key="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand" type="service" id="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand"/>
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set"/>
        <argument key="console.command.translation_debug" type="service" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.fixtures_load_command" type="service" id="doctrine.fixtures_load_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="doctrine_migrations.current_command" type="service" id="doctrine_migrations.current_command"/>
        <argument key="doctrine_migrations.diff_command" type="service" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service" id="doctrine_migrations.sync_metadata_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service" id="doctrine_migrations.version_command"/>
        <argument key="doctrine_migrations.versions_command" type="service" id="doctrine_migrations.versions_command"/>
        <argument key="maker.auto_command.make_auth" type="service" id="maker.auto_command.make_auth"/>
        <argument key="maker.auto_command.make_command" type="service" id="maker.auto_command.make_command"/>
        <argument key="maker.auto_command.make_controller" type="service" id="maker.auto_command.make_controller"/>
        <argument key="maker.auto_command.make_crud" type="service" id="maker.auto_command.make_crud"/>
        <argument key="maker.auto_command.make_docker_database" type="service" id="maker.auto_command.make_docker_database"/>
        <argument key="maker.auto_command.make_entity" type="service" id="maker.auto_command.make_entity"/>
        <argument key="maker.auto_command.make_fixtures" type="service" id="maker.auto_command.make_fixtures"/>
        <argument key="maker.auto_command.make_form" type="service" id="maker.auto_command.make_form"/>
        <argument key="maker.auto_command.make_functional_test" type="service" id="maker.auto_command.make_functional_test"/>
        <argument key="maker.auto_command.make_message" type="service" id="maker.auto_command.make_message"/>
        <argument key="maker.auto_command.make_messenger_middleware" type="service" id="maker.auto_command.make_messenger_middleware"/>
        <argument key="maker.auto_command.make_migration" type="service" id="maker.auto_command.make_migration"/>
        <argument key="maker.auto_command.make_registration_form" type="service" id="maker.auto_command.make_registration_form"/>
        <argument key="maker.auto_command.make_reset_password" type="service" id="maker.auto_command.make_reset_password"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service" id="maker.auto_command.make_serializer_encoder"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service" id="maker.auto_command.make_serializer_normalizer"/>
        <argument key="maker.auto_command.make_subscriber" type="service" id="maker.auto_command.make_subscriber"/>
        <argument key="maker.auto_command.make_twig_extension" type="service" id="maker.auto_command.make_twig_extension"/>
        <argument key="maker.auto_command.make_unit_test" type="service" id="maker.auto_command.make_unit_test"/>
        <argument key="maker.auto_command.make_user" type="service" id="maker.auto_command.make_user"/>
        <argument key="maker.auto_command.make_validator" type="service" id="maker.auto_command.make_validator"/>
        <argument key="maker.auto_command.make_voter" type="service" id="maker.auto_command.make_voter"/>
        <argument key="monolog.command.server_log" type="service" id="monolog.command.server_log"/>
        <argument key="psysh.command.shell_command" type="service" id="psysh.command.shell_command"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="swiftmailer.command.debug" type="service" id="swiftmailer.command.debug"/>
        <argument key="swiftmailer.command.new_email" type="service" id="swiftmailer.command.new_email"/>
        <argument key="swiftmailer.command.send_email" type="service" id="swiftmailer.command.send_email"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
        <argument key="var_dumper.command.server_dump" type="service" id="var_dumper.command.server_dump"/>
      </argument>
    </service>
    <service id="cache.doctrine.orm.default.metadata.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.result.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.query.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.second_level.region_driver.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <argument>fsd14TkpOR</argument>
      <argument>0</argument>
      <argument>/var/www/html/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>MVLR1Xrcgj</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/html/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>4KI7Uuq88K</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/html/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>hKeK4vr+gP</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/html/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>bfj7qvvhcA</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/html/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>KQ2QfO9oh4</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/html/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>pfRlKSlW5d</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/var/www/html/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".service_locator.8b9rjza" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Twig\Extension\CaseUriRuntime" type="service" id="App\Twig\Extension\CaseUriRuntime"/>
        <argument key="JMS\Serializer\Twig\SerializerRuntimeHelper" type="service" id="jms_serializer.twig_extension.serializer_runtime_helper"/>
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false">
      <deprecated package="symfony/dependency-injection" version="5.1">The "%alias_id%" autowiring alias is deprecated. Define it explicitly in your app if you want to keep using it.</deprecated>
    </service>
    <service id="Qandidate\Toggle\ToggleManager" alias="qandidate.toggle.manager" public="false"/>
    <service id="Qandidate\Toggle\ContextFactory" alias="qandidate.toggle.user_context_factory" public="false"/>
    <service id="SimpleThings\EntityAudit\AuditReader" alias="simplethings_entityaudit.reader" public="false"/>
    <service id="App\Kernel" alias="kernel" public="true"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="swiftmailer.mailer.default.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.mailer.default.transport.real" alias="swiftmailer.mailer.default.transport.dynamic" public="true"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.dynamic"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.default.spool.memory" public="false"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.spool" public="true"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.spool" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default" public="true"/>
    <service id="jms_serializer.metadata_driver" alias="jms_serializer.metadata.typed_properties_driver" public="true"/>
    <service id="jms_serializer.metadata.cache" alias="jms_serializer.metadata.cache.file_cache" public="false"/>
    <service id="jms_serializer.naming_strategy" alias="jms_serializer.serialized_name_annotation_strategy" public="false"/>
    <service id="jms_serializer.object_constructor" alias="jms_serializer.doctrine_object_constructor" public="false"/>
    <service id="jms_serializer.deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory" public="true"/>
    <service id="jms_serializer.serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory" public="true"/>
    <service id="jms_serializer" alias="jms_serializer.serializer" public="true"/>
    <service id="JMS\Serializer\SerializerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="JMS\Serializer\ArrayTransformerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="jms_serializer.accessor_strategy" alias="jms_serializer.accessor_strategy.default" public="false"/>
    <service id="JMS\Serializer\ContextFactory\SerializationContextFactoryInterface" alias="jms_serializer.configured_serialization_context_factory" public="false"/>
    <service id="JMS\Serializer\ContextFactory\DeserializationContextFactoryInterface" alias="jms_serializer.configured_deserialization_context_factory" public="false"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" public="false"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" public="false"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" public="false"/>
    <service id="doctrine.orm.default_second_level_cache.region_cache_driver" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.second_level.region_driver" public="false"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="doctrine.migrations.metadata_storage" alias="doctrine.migrations.storage.table_storage"/>
    <service id="SimpleThings\EntityAudit\AuditManager" alias="simplethings_entityaudit.manager" public="true"/>
    <service id="SimpleThings\EntityAudit\AuditConfiguration" alias="simplethings_entityaudit.config"/>
    <service id="simplethings_entityaudit.username_callable" alias="simplethings_entityaudit.username_callable.token_storage"/>
    <service id="GuzzleHttp\ClientInterface" alias="csa_guzzle.client.json"/>
    <service id="GuzzleHttp\Client" alias="csa_guzzle.client.json"/>
    <service id="nelmio_security.external_redirect.target_validator" alias="nelmio_security.external_redirect.target_validator.whitelist"/>
    <service id="qandidate.toggle.collection" alias="qandidate.toggle.collection.factory" public="true"/>
    <service id="qandidate.toggle.context_factory" alias="qandidate.toggle.user_context_factory"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\HttpKernel\UriSigner" alias="uri_signer" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container" public="false"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger" public="false"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Psr\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.pdo" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="session.handler.pdo"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="Symfony\Component\Asset\PackageInterface $encorePackage" alias="assets._package_encore"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer" public="false"/>
    <service id="serializer.property_accessor" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.cache_class_metadata_factory" public="false"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyReadInfoExtractorInterface" alias="property_info.reflection_extractor" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyWriteInfoExtractorInterface" alias="property_info.reflection_extractor" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="App\Security\UserChecker" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.WaGDpDt" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $translationLogger" alias="monolog.logger.translation"/>
    <service id="Psr\Log\LoggerInterface $profilerLogger" alias="monolog.logger.profiler"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $debugLogger" alias="monolog.logger.debug"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.gmOuYak"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id=".service_locator.yAbeJYG" alias="jms_serializer.metadata.service_locator" public="false"/>
    <service id=".service_locator.4w_cKmU" alias=".service_locator.UYjghYd" public="false"/>
    <service id=".service_locator.lHfvx5A" alias=".service_locator.zCZyUMB" public="false"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="jms_serializer.metadata.doctrine_type_driver.inner" alias="jms_serializer.metadata.chain_driver" public="false"/>
    <service id="jms_serializer.metadata.typed_properties_driver.inner" alias="jms_serializer.metadata.doctrine_type_driver" public="false"/>
    <service id="jms_serializer.doctrine_object_constructor.inner" alias="jms_serializer.unserialize_object_constructor" public="false"/>
    <service id="translator.data_collector.inner" alias="translator.default" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="serializer.mapping.class_metadata_factory" alias="serializer.mapping.cache_class_metadata_factory" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html" public="false"/>
    <service id="var_dumper.cli_dumper" alias="var_dumper.contextualized_cli_dumper" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller" public="false"/>
    <service id="console.command.public_alias.App\Console\Framework\CopyDocumentToItemCommand" alias="App\Console\Framework\CopyDocumentToItemCommand" public="true"/>
    <service id="console.command.public_alias.App\Console\User\OrgAddCommand" alias="App\Console\User\OrgAddCommand" public="true"/>
    <service id="console.command.public_alias.App\Console\User\UserAddCommand" alias="App\Console\User\UserAddCommand" public="true"/>
    <service id="console.command.public_alias.App\Console\User\UserAddRoleCommand" alias="App\Console\User\UserAddRoleCommand" public="true"/>
    <service id="console.command.public_alias.App\Console\User\UserRemoveRoleCommand" alias="App\Console\User\UserRemoveRoleCommand" public="true"/>
    <service id="console.command.public_alias.App\Console\User\UserSetPasswordCommand" alias="App\Console\User\UserSetPasswordCommand" public="true"/>
  </services>
</container>
