<?php

namespace ContainerPpHIGmv;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getImportCaseJsonHandlerService extends App_KernelProdContainer
{
    /*
     * Gets the private 'App\Handler\Import\ImportCaseJsonHandler' shared autowired service.
     *
     * @return \App\Handler\Import\ImportCaseJsonHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? $container->load('getDoctrine_Orm_DefaultEntityManagerService'));
        $b = new \App\DataTransformer\CaseJson\ItemsTransformer($a);

        $c = ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService());

        $b->setLogger($c);
        $d = new \App\DataTransformer\CaseJson\AssociationsTransformer($a);
        $d->setLogger($c);
        $e = new \App\DataTransformer\CaseJson\RubricsTransformer($a);
        $e->setLogger($c);

        return $container->privates['App\\Handler\\Import\\ImportCaseJsonHandler'] = new \App\Handler\Import\ImportCaseJsonHandler(($container->services['validator'] ?? $container->load('getValidatorService')), $a, new \App\Service\CaseImport(($container->services['serializer'] ?? $container->load('getSerializerService')), new \App\DataTransformer\CaseJson\PackageTransformer(new \App\DataTransformer\CaseJson\DefinitionsTransformer(new \App\DataTransformer\CaseJson\AssociationGroupingsTransformer($a), new \App\DataTransformer\CaseJson\ConceptsTransformer($a), new \App\DataTransformer\CaseJson\ItemTypesTransformer($a), new \App\DataTransformer\CaseJson\LicencesTransformer($a), new \App\DataTransformer\CaseJson\SubjectsTransformer($a)), new \App\DataTransformer\CaseJson\DocumentTransformer($a), $b, $d, $e)), ($container->services['security.authorization_checker'] ?? $container->getSecurity_AuthorizationCheckerService()));
    }
}
