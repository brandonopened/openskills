<?php

namespace Proxies\__CG__\App\Entity\Framework;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class LsDoc extends \App\Entity\Framework\LsDoc implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'org', 'user', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'officialUri', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'creator', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'publisher', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'urlName', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'version', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'subject', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'subjects', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'language', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'adoptionStatus', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'statusStart', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'statusEnd', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'licence', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'frameworkType', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'note', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'lsItems', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'docAssociations', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'associations', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'inverseAssociations', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'attributes', 'docAcls', 'importLogs', 'associationGroupings', 'ownedBy', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'mirroredFramework', 'id', 'identifier', 'uri', 'extra', 'updatedAt'];
        }

        return ['__isInitialized__', 'org', 'user', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'officialUri', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'creator', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'publisher', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'urlName', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'version', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'subject', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'subjects', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'language', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'adoptionStatus', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'statusStart', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'statusEnd', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'licence', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'frameworkType', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'note', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'lsItems', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'docAssociations', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'associations', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'inverseAssociations', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'attributes', 'docAcls', 'importLogs', 'associationGroupings', 'ownedBy', '' . "\0" . 'App\\Entity\\Framework\\LsDoc' . "\0" . 'mirroredFramework', 'id', 'identifier', 'uri', 'extra', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (LsDoc $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function isDraft(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDraft', []);

        return parent::isDraft();
    }

    /**
     * {@inheritDoc}
     */
    public function isAdopted(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAdopted', []);

        return parent::isAdopted();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeprecated(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeprecated', []);

        return parent::isDeprecated();
    }

    /**
     * {@inheritDoc}
     */
    public function setOfficialUri(?string $officialUri): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOfficialUri', [$officialUri]);

        return parent::setOfficialUri($officialUri);
    }

    /**
     * {@inheritDoc}
     */
    public function getOfficialUri(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOfficialUri', []);

        return parent::getOfficialUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator(?string $creator): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', [$creator]);

        return parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', []);

        return parent::getCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublisher(?string $publisher): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublisher', [$publisher]);

        return parent::setPublisher($publisher);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublisher(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublisher', []);

        return parent::getPublisher();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getShortStatement(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortStatement', []);

        return parent::getShortStatement();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion(?string $version): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', [$version]);

        return parent::setVersion($version);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', []);

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(?string $description): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubject($subject): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubject', [$subject]);

        return parent::setSubject($subject);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubject(): ?array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubject', []);

        return parent::getSubject();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdoptionStatus(?string $adoptionStatus, string $default = NULL): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdoptionStatus', [$adoptionStatus, $default]);

        return parent::setAdoptionStatus($adoptionStatus, $default);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdoptionStatus(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdoptionStatus', []);

        return parent::getAdoptionStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusStart(?\DateTimeInterface $statusStart): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusStart', [$statusStart]);

        return parent::setStatusStart($statusStart);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusStart(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusStart', []);

        return parent::getStatusStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusEnd(?\DateTimeInterface $statusEnd): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusEnd', [$statusEnd]);

        return parent::setStatusEnd($statusEnd);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusEnd(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusEnd', []);

        return parent::getStatusEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setNote(?string $note): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNote', [$note]);

        return parent::setNote($note);
    }

    /**
     * {@inheritDoc}
     */
    public function getNote(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNote', []);

        return parent::getNote();
    }

    /**
     * {@inheritDoc}
     */
    public function createChildItem(\App\Entity\Framework\LsItem $topLsItem, \App\Entity\Framework\LsDefAssociationGrouping $assocGroup = NULL, int $sequenceNumber = NULL): \App\Entity\Framework\LsAssociation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createChildItem', [$topLsItem, $assocGroup, $sequenceNumber]);

        return parent::createChildItem($topLsItem, $assocGroup, $sequenceNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function addTopLsItem(\App\Entity\Framework\LsItem $topLsItem, \App\Entity\Framework\LsDefAssociationGrouping $assocGroup = NULL, int $sequenceNumber = NULL): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTopLsItem', [$topLsItem, $assocGroup, $sequenceNumber]);

        return parent::addTopLsItem($topLsItem, $assocGroup, $sequenceNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getTopLsItems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTopLsItems', []);

        return parent::getTopLsItems();
    }

    /**
     * {@inheritDoc}
     */
    public function addLsItem(\App\Entity\Framework\LsItem $lsItem): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLsItem', [$lsItem]);

        return parent::addLsItem($lsItem);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLsItem(\App\Entity\Framework\LsItem $lsItem): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLsItem', [$lsItem]);

        parent::removeLsItem($lsItem);
    }

    /**
     * {@inheritDoc}
     */
    public function getLsItems(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLsItems', []);

        return parent::getLsItems();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssociation(\App\Entity\Framework\LsAssociation $association): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssociation', [$association]);

        return parent::addAssociation($association);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssociation(\App\Entity\Framework\LsAssociation $association): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssociation', [$association]);

        parent::removeAssociation($association);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssociations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssociations', []);

        return parent::getAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function addInverseAssociation(\App\Entity\Framework\LsAssociation $inverseAssociation): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInverseAssociation', [$inverseAssociation]);

        return parent::addInverseAssociation($inverseAssociation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInverseAssociation(\App\Entity\Framework\LsAssociation $inverseAssociation): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInverseAssociation', [$inverseAssociation]);

        parent::removeInverseAssociation($inverseAssociation);
    }

    /**
     * {@inheritDoc}
     */
    public function getInverseAssociations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInverseAssociations', []);

        return parent::getInverseAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function addDocAssociation(\App\Entity\Framework\LsAssociation $docAssociation): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDocAssociation', [$docAssociation]);

        return parent::addDocAssociation($docAssociation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDocAssociation(\App\Entity\Framework\LsAssociation $docAssociation): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDocAssociation', [$docAssociation]);

        parent::removeDocAssociation($docAssociation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDocAssociations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocAssociations', []);

        return parent::getDocAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function setAttribute($name, $value): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAttribute', [$name, $value]);

        return parent::setAttribute($name, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAttribute($name): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAttribute', [$name]);

        return parent::removeAttribute($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttribute($name): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttribute', [$name]);

        return parent::getAttribute($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getMirroredFramework(): ?\App\Entity\Framework\Mirror\Framework
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMirroredFramework', []);

        return parent::getMirroredFramework();
    }

    /**
     * {@inheritDoc}
     */
    public function setMirroredFramework(?\App\Entity\Framework\Mirror\Framework $mirroredFramework): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMirroredFramework', [$mirroredFramework]);

        return parent::setMirroredFramework($mirroredFramework);
    }

    /**
     * {@inheritDoc}
     */
    public function addExternalDoc($identifier, $autoLoad, $url, $title): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExternalDoc', [$identifier, $autoLoad, $url, $title]);

        return parent::addExternalDoc($identifier, $autoLoad, $url, $title);
    }

    /**
     * {@inheritDoc}
     */
    public function setExternalDocAutoLoad($identifier, $autoLoad): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternalDocAutoLoad', [$identifier, $autoLoad]);

        parent::setExternalDocAutoLoad($identifier, $autoLoad);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExternalDoc($identifier): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExternalDoc', [$identifier]);

        parent::removeExternalDoc($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalDocs(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalDocs', []);

        return parent::getExternalDocs();
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', []);

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage(?string $language): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function canEdit(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canEdit', []);

        return parent::canEdit();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubjects(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubjects', []);

        return parent::getSubjects();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubjects(?iterable $subjects): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubjects', [$subjects]);

        return parent::setSubjects($subjects);
    }

    /**
     * {@inheritDoc}
     */
    public function addSubject(\App\Entity\Framework\LsDefSubject $subject): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubject', [$subject]);

        return parent::addSubject($subject);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrg(): ?\App\Entity\User\Organization
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrg', []);

        return parent::getOrg();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrg(\App\Entity\User\Organization $org = NULL): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrg', [$org]);

        return parent::setOrg($org);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\App\Entity\User\User $user = NULL): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function getDocAcls(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDocAcls', []);

        return parent::getDocAcls();
    }

    /**
     * {@inheritDoc}
     */
    public function getImportLogs(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImportLogs', []);

        return parent::getImportLogs();
    }

    /**
     * {@inheritDoc}
     */
    public function getOwnedBy(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwnedBy', []);

        return parent::getOwnedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setOwnedBy(?string $ownedBy): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOwnedBy', [$ownedBy]);

        return parent::setOwnedBy($ownedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssociationGroupings(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssociationGroupings', []);

        return parent::getAssociationGroupings();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssociationGrouping(\App\Entity\Framework\LsDefAssociationGrouping $associationGrouping): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssociationGrouping', [$associationGrouping]);

        return parent::addAssociationGrouping($associationGrouping);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrlName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrlName', []);

        return parent::getUrlName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrlName(string $urlName = NULL): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrlName', [$urlName]);

        return parent::setUrlName($urlName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function getLicence(): ?\App\Entity\Framework\LsDefLicence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicence', []);

        return parent::getLicence();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicence(?\App\Entity\Framework\LsDefLicence $licence): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicence', [$licence]);

        return parent::setLicence($licence);
    }

    /**
     * {@inheritDoc}
     */
    public function getFrameworkType(): ?\App\Entity\Framework\FrameworkType
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFrameworkType', []);

        return parent::getFrameworkType();
    }

    /**
     * {@inheritDoc}
     */
    public function setFrameworkType(?\App\Entity\Framework\FrameworkType $frameworkType): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFrameworkType', [$frameworkType]);

        return parent::setFrameworkType($frameworkType);
    }

    /**
     * {@inheritDoc}
     */
    public function createItem($identifier = NULL): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createItem', [$identifier]);

        return parent::createItem($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function createAssociation($identifier = NULL): \App\Entity\Framework\LsAssociation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createAssociation', [$identifier]);

        return parent::createAssociation($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentifier($identifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentifier', [$identifier]);

        return parent::setIdentifier($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifier', []);

        return parent::getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setUri(string $uri)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUri', [$uri]);

        return parent::setUri($uri);
    }

    /**
     * {@inheritDoc}
     */
    public function getUri(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUri', []);

        return parent::getUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setChangedAt(\DateTimeInterface $changedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChangedAt', [$changedAt]);

        return parent::setChangedAt($changedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getChangedAt(): \DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChangedAt', []);

        return parent::getChangedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTimeInterface $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): \DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getExtra(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtra', []);

        return parent::getExtra();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtra(?array $extra)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtra', [$extra]);

        return parent::setExtra($extra);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtraProperty(string $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtraProperty', [$property]);

        return parent::getExtraProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function setExtraProperty(string $property, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtraProperty', [$property, $value]);

        return parent::setExtraProperty($property, $value);
    }

}
