<?php

namespace Proxies\__CG__\App\Entity\Framework;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class LsItem extends \App\Entity\Framework\LsItem implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'lsDocIdentifier', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'lsDocUri', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'lsDoc', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'humanCodingScheme', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'listEnumInSource', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'fullStatement', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'abbreviatedStatement', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'conceptKeywords', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'concepts', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'notes', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'language', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'educationalAlignment', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'itemType', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'itemTypeText', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'alternativeLabel', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'statusStart', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'statusEnd', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'licence', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'associations', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'inverseAssociations', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'criteria', 'id', 'identifier', 'uri', 'extra', 'updatedAt'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'lsDocIdentifier', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'lsDocUri', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'lsDoc', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'humanCodingScheme', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'listEnumInSource', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'fullStatement', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'abbreviatedStatement', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'conceptKeywords', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'concepts', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'notes', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'language', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'educationalAlignment', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'itemType', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'itemTypeText', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'alternativeLabel', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'statusStart', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'statusEnd', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'licence', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'associations', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'inverseAssociations', '' . "\0" . 'App\\Entity\\Framework\\LsItem' . "\0" . 'criteria', 'id', 'identifier', 'uri', 'extra', 'updatedAt'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (LsItem $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * {@inheritDoc}
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);

        parent::__clone();
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function copyToLsDoc(\App\Entity\Framework\LsDoc $newLsDoc, \App\Entity\Framework\LsDefAssociationGrouping $assocGroup = NULL, bool $exactMatchAssocs = true): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'copyToLsDoc', [$newLsDoc, $assocGroup, $exactMatchAssocs]);

        return parent::copyToLsDoc($newLsDoc, $assocGroup, $exactMatchAssocs);
    }

    /**
     * {@inheritDoc}
     */
    public function duplicateToLsDoc(\App\Entity\Framework\LsDoc $newLsDoc, \App\Entity\Framework\LsDefAssociationGrouping $assocGroup = NULL): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'duplicateToLsDoc', [$newLsDoc, $assocGroup]);

        return parent::duplicateToLsDoc($newLsDoc, $assocGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function createItem($identifier = NULL): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createItem', [$identifier]);

        return parent::createItem($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function createAssociation($identifier = NULL): \App\Entity\Framework\LsAssociation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'createAssociation', [$identifier]);

        return parent::createAssociation($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupedAssociations(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupedAssociations', []);

        return parent::getGroupedAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayIdentifier(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayIdentifier', []);

        return parent::getDisplayIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getShortStatement(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortStatement', []);

        return parent::getShortStatement();
    }

    /**
     * {@inheritDoc}
     */
    public function setLsDocUri(?string $lsDocUri): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLsDocUri', [$lsDocUri]);

        return parent::setLsDocUri($lsDocUri);
    }

    /**
     * {@inheritDoc}
     */
    public function getLsDocUri(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLsDocUri', []);

        return parent::getLsDocUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setHumanCodingScheme(?string $humanCodingScheme): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHumanCodingScheme', [$humanCodingScheme]);

        return parent::setHumanCodingScheme($humanCodingScheme);
    }

    /**
     * {@inheritDoc}
     */
    public function getHumanCodingScheme(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHumanCodingScheme', []);

        return parent::getHumanCodingScheme();
    }

    /**
     * {@inheritDoc}
     */
    public function setListEnumInSource(?string $listEnumInSource): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setListEnumInSource', [$listEnumInSource]);

        return parent::setListEnumInSource($listEnumInSource);
    }

    /**
     * {@inheritDoc}
     */
    public function getListEnumInSource(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getListEnumInSource', []);

        return parent::getListEnumInSource();
    }

    /**
     * {@inheritDoc}
     */
    public function setFullStatement(string $fullStatement): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFullStatement', [$fullStatement]);

        return parent::setFullStatement($fullStatement);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullStatement(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullStatement', []);

        return parent::getFullStatement();
    }

    /**
     * {@inheritDoc}
     */
    public function setAbbreviatedStatement(?string $abbreviatedStatement): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAbbreviatedStatement', [$abbreviatedStatement]);

        return parent::setAbbreviatedStatement($abbreviatedStatement);
    }

    /**
     * {@inheritDoc}
     */
    public function getAbbreviatedStatement(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbbreviatedStatement', []);

        return parent::getAbbreviatedStatement();
    }

    /**
     * {@inheritDoc}
     */
    public function setConceptKeywordsArray(?array $conceptKeywords): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConceptKeywordsArray', [$conceptKeywords]);

        return parent::setConceptKeywordsArray($conceptKeywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getConceptKeywordsArray(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConceptKeywordsArray', []);

        return parent::getConceptKeywordsArray();
    }

    /**
     * {@inheritDoc}
     */
    public function setConceptKeywords(?string $conceptKeywords): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConceptKeywords', [$conceptKeywords]);

        return parent::setConceptKeywords($conceptKeywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getConceptKeywords(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConceptKeywords', []);

        return parent::getConceptKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setConceptKeywordsString(?string $conceptKeywords): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConceptKeywordsString', [$conceptKeywords]);

        return parent::setConceptKeywordsString($conceptKeywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getConceptKeywordsString(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConceptKeywordsString', []);

        return parent::getConceptKeywordsString();
    }

    /**
     * {@inheritDoc}
     */
    public function getConceptKeywordsUri(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConceptKeywordsUri', []);

        return parent::getConceptKeywordsUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes(?string $notes): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', [$notes]);

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', []);

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setEducationalAlignment($educationalAlignment): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEducationalAlignment', [$educationalAlignment]);

        return parent::setEducationalAlignment($educationalAlignment);
    }

    /**
     * {@inheritDoc}
     */
    public function getEducationalAlignment(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEducationalAlignment', []);

        return parent::getEducationalAlignment();
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function addChild(\App\Entity\Framework\LsItem $child, \App\Entity\Framework\LsDefAssociationGrouping $assocGroup = NULL, int $sequenceNumber = NULL): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChild', [$child, $assocGroup, $sequenceNumber]);

        return parent::addChild($child, $assocGroup, $sequenceNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', []);

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function getChildIds(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildIds', []);

        return parent::getChildIds();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescendantIds(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescendantIds', []);

        return parent::getDescendantIds();
    }

    /**
     * {@inheritDoc}
     */
    public function setLsDoc(\App\Entity\Framework\LsDoc $lsDoc): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLsDoc', [$lsDoc]);

        return parent::setLsDoc($lsDoc);
    }

    /**
     * {@inheritDoc}
     */
    public function getLsDoc(): \App\Entity\Framework\LsDoc
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLsDoc', []);

        return parent::getLsDoc();
    }

    /**
     * {@inheritDoc}
     */
    public function getLsItemParent(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLsItemParent', []);

        return parent::getLsItemParent();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssociation(\App\Entity\Framework\LsAssociation $association): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssociation', [$association]);

        return parent::addAssociation($association);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssociation(\App\Entity\Framework\LsAssociation $association): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssociation', [$association]);

        return parent::removeAssociation($association);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssociations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssociations', []);

        return parent::getAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function addInverseAssociation(\App\Entity\Framework\LsAssociation $inverseAssociation): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInverseAssociation', [$inverseAssociation]);

        return parent::addInverseAssociation($inverseAssociation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInverseAssociation(\App\Entity\Framework\LsAssociation $inverseAssociation): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInverseAssociation', [$inverseAssociation]);

        return parent::removeInverseAssociation($inverseAssociation);
    }

    /**
     * {@inheritDoc}
     */
    public function getInverseAssociations(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInverseAssociations', []);

        return parent::getInverseAssociations();
    }

    /**
     * {@inheritDoc}
     */
    public function getTopItemOf(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTopItemOf', []);

        return parent::getTopItemOf();
    }

    /**
     * {@inheritDoc}
     */
    public function getParentItem(): ?\App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentItem', []);

        return parent::getParentItem();
    }

    /**
     * {@inheritDoc}
     */
    public function getLsDocIdentifier(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLsDocIdentifier', []);

        return parent::getLsDocIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setLsDocIdentifier(?string $lsDocIdentifier): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLsDocIdentifier', [$lsDocIdentifier]);

        return parent::setLsDocIdentifier($lsDocIdentifier);
    }

    /**
     * {@inheritDoc}
     */
    public function addParent($parent, int $sequenceNumber = NULL, \App\Entity\Framework\LsDefAssociationGrouping $assocGroup = NULL): \App\Entity\Framework\LsAssociation
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addParent', [$parent, $sequenceNumber, $assocGroup]);

        return parent::addParent($parent, $sequenceNumber, $assocGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', []);

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage(?string $language): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel(string $indent = '    '): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', [$indent]);

        return parent::getLabel($indent);
    }

    /**
     * {@inheritDoc}
     */
    public function canEdit(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canEdit', []);

        return parent::canEdit();
    }

    /**
     * {@inheritDoc}
     */
    public function getItemType(): ?\App\Entity\Framework\LsDefItemType
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemType', []);

        return parent::getItemType();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemType(?\App\Entity\Framework\LsDefItemType $itemType): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemType', [$itemType]);

        return parent::setItemType($itemType);
    }

    /**
     * {@inheritDoc}
     */
    public function getItemTypeText(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getItemTypeText', []);

        return parent::getItemTypeText();
    }

    /**
     * {@inheritDoc}
     */
    public function setItemTypeText(?string $itemTypeText): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setItemTypeText', [$itemTypeText]);

        return parent::setItemTypeText($itemTypeText);
    }

    /**
     * {@inheritDoc}
     */
    public function getConcepts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConcepts', []);

        return parent::getConcepts();
    }

    /**
     * {@inheritDoc}
     */
    public function setConcepts(?iterable $concepts): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConcepts', [$concepts]);

        return parent::setConcepts($concepts);
    }

    /**
     * {@inheritDoc}
     */
    public function addConcept(\App\Entity\Framework\LsDefConcept $concept): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConcept', [$concept]);

        return parent::addConcept($concept);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlternativeLabel(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlternativeLabel', []);

        return parent::getAlternativeLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlternativeLabel(?string $alternativeLabel): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlternativeLabel', [$alternativeLabel]);

        return parent::setAlternativeLabel($alternativeLabel);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusStart(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusStart', []);

        return parent::getStatusStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusStart(?\DateTimeInterface $statusStart): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusStart', [$statusStart]);

        return parent::setStatusStart($statusStart);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatusEnd(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatusEnd', []);

        return parent::getStatusEnd();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatusEnd(?\DateTimeInterface $statusEnd): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatusEnd', [$statusEnd]);

        return parent::setStatusEnd($statusEnd);
    }

    /**
     * {@inheritDoc}
     */
    public function getLicence(): ?\App\Entity\Framework\LsDefLicence
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicence', []);

        return parent::getLicence();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicence(?\App\Entity\Framework\LsDefLicence $licence): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicence', [$licence]);

        return parent::setLicence($licence);
    }

    /**
     * {@inheritDoc}
     */
    public function getCriteria(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCriteria', []);

        return parent::getCriteria();
    }

    /**
     * {@inheritDoc}
     */
    public function addCriterion(\App\Entity\Framework\CfRubricCriterion $criterion): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCriterion', [$criterion]);

        return parent::addCriterion($criterion);
    }

    /**
     * {@inheritDoc}
     */
    public function setCriteria(?iterable $criteria): \App\Entity\Framework\LsItem
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCriteria', [$criteria]);

        return parent::setCriteria($criteria);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentifier($identifier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentifier', [$identifier]);

        return parent::setIdentifier($identifier);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifier(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifier', []);

        return parent::getIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setUri(string $uri)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUri', [$uri]);

        return parent::setUri($uri);
    }

    /**
     * {@inheritDoc}
     */
    public function getUri(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUri', []);

        return parent::getUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setChangedAt(\DateTimeInterface $changedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChangedAt', [$changedAt]);

        return parent::setChangedAt($changedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getChangedAt(): \DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChangedAt', []);

        return parent::getChangedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt(\DateTimeInterface $updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', [$updatedAt]);

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt(): \DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', []);

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getExtra(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtra', []);

        return parent::getExtra();
    }

    /**
     * {@inheritDoc}
     */
    public function setExtra(?array $extra)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtra', [$extra]);

        return parent::setExtra($extra);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtraProperty(string $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtraProperty', [$property]);

        return parent::getExtraProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function setExtraProperty(string $property, $value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtraProperty', [$property, $value]);

        return parent::setExtraProperty($property, $value);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdditionalFields(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdditionalFields', []);

        return parent::getAdditionalFields();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdditionalFields(array $values): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdditionalFields', [$values]);

        parent::setAdditionalFields($values);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdditionalField(string $name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdditionalField', [$name]);

        return parent::getAdditionalField($name);
    }

    /**
     * {@inheritDoc}
     */
    public function setAdditionalField(string $name, $value): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdditionalField', [$name, $value]);

        parent::setAdditionalField($name, $value);
    }

}
